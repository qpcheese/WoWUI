
PlaterDB = {
["captured_spells"] = {
[193473] = {
["source"] = "Void Tendril",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 192337,
},
[450628] = {
["isChanneled"] = true,
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[452675] = {
["source"] = "Possibility Projector",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224878,
},
[450885] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[437842] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Maintenance Machine",
["npcID"] = 230643,
},
[455489] = {
["isChanneled"] = false,
["source"] = "Gloomhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226268,
},
[369813] = {
["isChanneled"] = false,
["source"] = "Wickbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215077,
},
[427357] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[440912] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[461884] = {
["isChanneled"] = false,
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215810,
},
[317898] = {
["source"] = "Nerubian War-Weaver",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219657,
},
[456259] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[445262] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[448843] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[427616] = {
["encounterName"] = "Kyrioss",
["source"] = "Unruly Stormrook",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[456772] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[427361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Aspiring Forgehand",
["npcID"] = 212405,
},
[452169] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[418155] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[440917] = {
["isChanneled"] = false,
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214576,
},
[113746] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fire Spirit",
["npcID"] = 69791,
},
[457797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Battle Supplies",
["npcID"] = 227453,
},
[456263] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[284401] = {
["source"] = "Falania Nightsoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144566,
},
[152175] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[430179] = {
["isChanneled"] = false,
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214439,
},
[431714] = {
["isChanneled"] = false,
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219651,
},
[330693] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disgusting Refuse",
["npcID"] = 163089,
},
[453709] = {
["source"] = "Kelpmire",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220287,
},
[445781] = {
["isChanneled"] = false,
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212597,
},
[456523] = {
["isChanneled"] = false,
["source"] = "Clump O' Wax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226809,
},
[432227] = {
["source"] = "Ki'katal the Harvester",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215407,
},
[426345] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[459849] = {
["isChanneled"] = true,
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219665,
},
[389518] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[453200] = {
["source"] = "Cragmund",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220269,
},
[448341] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[446807] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222787,
},
[456782] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[42648] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Nimble Ferret",
["npcID"] = 218769,
},
[450133] = {
["encounterName"] = "Waxface",
["type"] = "DEBUFF",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2894,
},
[453458] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[449622] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Webspeaker Grik'ik",
["npcID"] = 216041,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[270598] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rapacious Fathomjaw",
["npcID"] = 129305,
},
[377502] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pearlfin Tiderunner",
["npcID"] = 214433,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[440162] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Stinkcap",
["npcID"] = 212579,
},
[228649] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[450393] = {
["source"] = "Obstorn",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 217082,
},
[429422] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[440931] = {
["isChanneled"] = false,
["source"] = "Lashroom Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224607,
},
[453463] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Suppressed Worker",
["npcID"] = 225436,
},
[456788] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Splash",
["npcID"] = 220275,
},
[452442] = {
["isChanneled"] = false,
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220271,
},
[116947] = {
["source"] = "Earthgrab Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 60561,
},
[427635] = {
["isChanneled"] = false,
["source"] = "War Lynx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206699,
},
[448351] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2894,
},
[426869] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crushing Waxthief",
["npcID"] = 229809,
},
[430450] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stagnant Slime",
["npcID"] = 223473,
},
[428916] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[435310] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murmuring Trapcap",
["npcID"] = 217719,
},
[1126] = {
["source"] = "Crenna Earth-Daughter",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209072,
},
[427894] = {
["isChanneled"] = false,
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212831,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[455260] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[463956] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[192082] = {
["source"] = "Wind Rush Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 97285,
},
[426619] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[457565] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Kelpcoil",
["npcID"] = 225901,
},
[24394] = {
["source"] = "The Slumbering Emperor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[452195] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cyclonecrier Alpha",
["npcID"] = 222959,
},
[419204] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[208963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Totem of Wrath",
["npcID"] = 105427,
},
[108446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 17252,
},
[449896] = {
["source"] = "Boroughbreaker Stik'kar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226294,
},
[449129] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[196816] = {
["source"] = "Divine Image",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 198236,
},
[419207] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[449130] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[462686] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[440181] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Boskroot Brute",
["npcID"] = 212736,
},
[428161] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[181089] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[451435] = {
["isChanneled"] = false,
["source"] = "Voidwraith",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224466,
},
[431744] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[398497] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormtop Shalemaw",
["npcID"] = 212364,
},
[424328] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[61353] = {
["isChanneled"] = false,
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 96779,
},
[440185] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[442487] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Springbubble",
["npcID"] = 219262,
},
[450417] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Plaguehart",
["npcID"] = 219267,
},
[115098] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Spirit",
["npcID"] = 69792,
},
[443001] = {
["source"] = "Boltweaver Enforcer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223362,
},
[445559] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[326892] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Dessia the Decapitator",
["npcID"] = 164451,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[427402] = {
["isChanneled"] = false,
["source"] = "Cursed Rookguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207197,
},
[446328] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Famished Fog Beast",
["npcID"] = 219447,
},
[212423] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[374719] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cavern Basilisk",
["npcID"] = 219949,
},
[427404] = {
["encounterName"] = "Kyrioss",
["source"] = "Voidrider",
["encounterID"] = 2816,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[426893] = {
["isChanneled"] = false,
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209801,
},
[260249] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[452469] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brightstone",
["npcID"] = 224764,
},
[439426] = {
["isChanneled"] = false,
["source"] = "Underground Spore",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215235,
},
[420501] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[450424] = {
["isChanneled"] = false,
["source"] = "Waxy Blob",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 229818,
},
[320248] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["npcID"] = 164463,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[440195] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wanton Shadow",
["npcID"] = 225338,
},
[138130] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[445311] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Strange Shore Crawler",
["npcID"] = 219365,
},
[333293] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bone Magus",
["npcID"] = 170882,
},
[107428] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[444034] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[115804] = {
["source"] = "Devilsaur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[338410] = {
["isChanneled"] = false,
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162880,
},
[464240] = {
["isChanneled"] = false,
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212827,
},
[448384] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[392375] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 29264,
},
[448897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[450176] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[425113] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[400050] = {
["isChanneled"] = false,
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217753,
},
[100780] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[455293] = {
["isChanneled"] = false,
["source"] = "Icarus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226220,
},
[444296] = {
["isChanneled"] = false,
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206696,
},
[454782] = {
["source"] = "Kelpfist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225985,
},
[455294] = {
["source"] = "Icarus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226220,
},
[134810] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kae Ti",
["npcID"] = 68402,
},
[192226] = {
["isChanneled"] = false,
["source"] = "Liquid Magma Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97369,
},
[450180] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coal Rager",
["npcID"] = 219726,
},
[455296] = {
["source"] = "Icarus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226220,
},
[423839] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[450182] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[388035] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Gara",
["npcID"] = 165189,
},
[450439] = {
["source"] = "Waxy Blob",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 229818,
},
[421284] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[452231] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[456835] = {
["isChanneled"] = false,
["source"] = "Hungerer of the Deeps",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221199,
},
[428703] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[450442] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[430238] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skardyn Degenerator",
["npcID"] = 215843,
},
[452233] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[450188] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[433053] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[390599] = {
["isChanneled"] = false,
["source"] = "Child of Ohn'ahra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191869,
},
[448399] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[453003] = {
["source"] = "Pausing Pylon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225193,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[30151] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[430754] = {
["isChanneled"] = false,
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214439,
},
[12550] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampant Air Elemental",
["npcID"] = 215048,
},
[428453] = {
["isChanneled"] = false,
["source"] = "Charhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226269,
},
[449169] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[453773] = {
["source"] = "Highlord Darion Mograine",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221632,
},
[449937] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodmaw",
["npcID"] = 219264,
},
[444055] = {
["isChanneled"] = false,
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222730,
},
[455564] = {
["source"] = "Roth the Earthwound",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226300,
},
[100784] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[438174] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waterworks Dynamo",
["npcID"] = 223918,
},
[432037] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[429224] = {
["source"] = "Treant",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 54983,
},
[207707] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Snarling Mongrel",
["npcID"] = 224623,
},
[450196] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[444826] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[450197] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[442529] = {
["type"] = "BUFF",
["source"] = "Starblessed Glimmerfly",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220703,
},
[449942] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[455313] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[344546] = {
["isChanneled"] = false,
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 162880,
},
[288210] = {
["isChanneled"] = false,
["source"] = "Arena Challenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163032,
},
[331275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Advent Nevermore",
["npcID"] = 167533,
},
[182773] = {
["source"] = "Fathom-Commander Zarrin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88090,
},
[330574] = {
["isChanneled"] = false,
["source"] = "Unbound Deathwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 158040,
},
[451734] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[449153] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[446535] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[24829] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Arcanist Ithanas",
["npcID"] = 15296,
},
[426160] = {
["encounterName"] = "Stormguard Gorren",
["type"] = "DEBUFF",
["source"] = "Stormguard Gorren",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207205,
},
[369128] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spinwindle the Unchaste",
["npcID"] = 150740,
},
[333827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Advent Nevermore",
["npcID"] = 167533,
},
[283708] = {
["source"] = "Tuwavo Ravenwing",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144555,
},
[451736] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[462859] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[461879] = {
["isChanneled"] = false,
["source"] = "Waxy Globule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213873,
},
[424795] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[427473] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[279362] = {
["isChanneled"] = false,
["source"] = "Insurance",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[441252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Underdrip Crawler",
["npcID"] = 223069,
},
[345245] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rancid Gasbag",
["npcID"] = 163086,
},
[386176] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 17252,
},
[427621] = {
["source"] = "Arathi Knight",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206696,
},
[378850] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Babbling Book",
["npcID"] = 223852,
},
[430256] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[333839] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[450205] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[447392] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[336910] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[246586] = {
["source"] = "Devlynn Styx",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 121527,
},
[452252] = {
["isChanneled"] = false,
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217353,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[428212] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[127769] = {
["isChanneled"] = false,
["source"] = "Silversage Incense",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65298,
},
[441256] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Underdrip Crawler",
["npcID"] = 223069,
},
[452765] = {
["source"] = "Shadowsilk Wallclimber",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224844,
},
[456626] = {
["source"] = "Awakened Colossus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225898,
},
[423588] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[424889] = {
["encounterName"] = "E.D.N.A.",
["type"] = "DEBUFF",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2854,
},
[448944] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[429493] = {
["encounterName"] = "Skardyn Monstrosity",
["type"] = "DEBUFF",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207207,
},
[341771] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bone Magus",
["npcID"] = 170882,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[445252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[431697] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[447141] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[441259] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tentacular Slime",
["npcID"] = 220364,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2894,
},
[447909] = {
["isChanneled"] = false,
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217353,
},
[433843] = {
["source"] = "Blood Overseer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216364,
},
[122719] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Pilgrim",
["npcID"] = 217874,
},
[443461] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Barrel of Fireworks",
["npcID"] = 221183,
},
[331288] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heavin the Breaker",
["npcID"] = 167532,
},
[449135] = {
["isChanneled"] = false,
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212542,
},
[452514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[451133] = {
["source"] = "Sparking Haulbot",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219497,
},
[17253] = {
["isChanneled"] = false,
["source"] = "Devilsaur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[447400] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queen Rickiticka",
["npcID"] = 215772,
},
[112042] = {
["isChanneled"] = false,
["source"] = "Kragmon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[116847] = {
["source"] = "Fire Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69791,
},
[320293] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[81262] = {
["isChanneled"] = false,
["source"] = "Efflorescence",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47649,
},
[398553] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shaleshell Clicker",
["npcID"] = 220155,
},
[329245] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Orb Holder",
["npcID"] = 169268,
},
[451132] = {
["isChanneled"] = false,
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219497,
},
[114893] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[357650] = {
["source"] = "Smaug",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[436661] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Armored Scuttler",
["npcID"] = 216194,
},
[453461] = {
["source"] = "Fervent Sharpshooter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206694,
},
[448662] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[341977] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Diseased Horror",
["npcID"] = 170690,
},
[324085] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Dessia the Decapitator",
["npcID"] = 164451,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[457359] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[5672] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Healing Stream Totem",
["npcID"] = 3527,
},
[68054] = {
["isChanneled"] = false,
["source"] = "Jeeves",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 35642,
},
[322087] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Kul'tharok",
["npcID"] = 162309,
},
[428735] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Treant",
["npcID"] = 103822,
},
[449451] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[459937] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[456101] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[453041] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Matriarch Charfuria",
["npcID"] = 220890,
},
[448429] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[459938] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[333845] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[428737] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[441269] = {
["source"] = "Sparking Haulbot",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219497,
},
[326835] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ossified Conscript",
["npcID"] = 167994,
},
[306745] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Slappy",
["npcID"] = 157166,
},
[436922] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ixlorb the Spinner",
["npcID"] = 218426,
},
[427360] = {
["isChanneled"] = false,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[452009] = {
["isChanneled"] = false,
["source"] = "Earthenwork Ironstrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213951,
},
[431552] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Webspinner",
["npcID"] = 224149,
},
[377589] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spinestalker",
["npcID"] = 26125,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[422090] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[452013] = {
["isChanneled"] = false,
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222797,
},
[426964] = {
["isChanneled"] = false,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[432569] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mother of Chaos",
["npcID"] = 228576,
},
[456868] = {
["isChanneled"] = false,
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222688,
},
[386542] = {
["source"] = "Zurilkazul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[451128] = {
["isChanneled"] = false,
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219497,
},
[454587] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tor'go",
["npcID"] = 222690,
},
[440506] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2854,
},
[224729] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[332836] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Butcher",
["npcID"] = 169927,
},
[449714] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[21562] = {
["source"] = "Inquisitor Draeleth",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144567,
},
[452272] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[432068] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waterworks Brute",
["npcID"] = 222979,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[1459] = {
["source"] = "Meadworker Nedam",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224549,
},
[333861] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Advent Nevermore",
["npcID"] = 167533,
},
[391793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[422351] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gnarled Lasher",
["npcID"] = 207740,
},
[388231] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tuskarr Training Dummy",
["npcID"] = 196394,
},
[427629] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[451763] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[453042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Matriarch Charfuria",
["npcID"] = 220890,
},
[428150] = {
["isChanneled"] = false,
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212827,
},
[458669] = {
["isChanneled"] = false,
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225898,
},
[451764] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[453588] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Coalesced Monstrosity",
["npcID"] = 220266,
},
[198837] = {
["isChanneled"] = false,
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99541,
},
[430282] = {
["isChanneled"] = false,
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207202,
},
[427469] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[320277] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[435301] = {
["source"] = "Fungal Infestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216077,
},
[195321] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[441261] = {
["source"] = "Ballista",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230447,
},
[390256] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Proscenium Punk",
["npcID"] = 215791,
},
[461741] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[90361] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gara",
["npcID"] = 165189,
},
[419287] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Crenna Earth-Daughter",
["npcID"] = 209072,
},
[455348] = {
["source"] = "Icarus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226220,
},
[461742] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[455231] = {
["source"] = "Lashroom Ambusher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224607,
},
[452024] = {
["isChanneled"] = true,
["source"] = "Earthen-Ward Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216221,
},
[319290] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Diseased Horror",
["npcID"] = 170690,
},
[446776] = {
["isChanneled"] = false,
["source"] = "War Lynx",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206699,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[439749] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[446409] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[448468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cavernous Shrieker",
["npcID"] = 204109,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[325174] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spirit Link Totem",
["npcID"] = 53006,
},
[330545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ancient Captain",
["npcID"] = 164506,
},
[458646] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voracious Fog Beast",
["npcID"] = 219446,
},
[430288] = {
["isChanneled"] = false,
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207202,
},
[451890] = {
["isChanneled"] = false,
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220792,
},
[330546] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ancient Captain",
["npcID"] = 164506,
},
[435148] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[424421] = {
["isChanneled"] = false,
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211289,
},
[457398] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[452472] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Brightstone",
["npcID"] = 224764,
},
[444728] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[450697] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[428894] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[362920] = {
["isChanneled"] = false,
["source"] = "Zealous Ironguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223904,
},
[385023] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Thieving Salamanther",
["npcID"] = 225919,
},
[445811] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Waxen Bones",
["npcID"] = 229808,
},
[331316] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dokigg the Brutalizer",
["npcID"] = 167538,
},
[79892] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Farseer Lopaa",
["npcID"] = 96949,
},
[440266] = {
["isChanneled"] = false,
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218330,
},
[457913] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Deployed Wind-Wrangling Spire",
["npcID"] = 227482,
},
[387950] = {
["isChanneled"] = false,
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219619,
},
[438973] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[452910] = {
["isChanneled"] = false,
["source"] = "Zilthara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220270,
},
[446325] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Island Proudfeather",
["npcID"] = 227198,
},
[457937] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[430805] = {
["isChanneled"] = false,
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214421,
},
[448050] = {
["isChanneled"] = false,
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211858,
},
[8122] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadow",
["npcID"] = 225672,
},
[456125] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Agitated Scorpid",
["npcID"] = 215830,
},
[264057] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[452545] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[451778] = {
["isChanneled"] = false,
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212878,
},
[449965] = {
["isChanneled"] = false,
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216250,
},
[157348] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Primal Storm Elemental",
["npcID"] = 77942,
},
[452546] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Boulderbane",
["npcID"] = 224756,
},
[424429] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[452035] = {
["isChanneled"] = false,
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222959,
},
[451268] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[435156] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[450757] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[433622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Brann Bronzebeard",
["npcID"] = 210759,
},
[446154] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Deepwater Gar",
["npcID"] = 219359,
},
[436180] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rampant Thunder Elemental",
["npcID"] = 222888,
},
[452567] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[455312] = {
["source"] = "Icarus",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 226220,
},
[392959] = {
["isChanneled"] = false,
["source"] = "Fire Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69791,
},
[457423] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Sandtwister",
["npcID"] = 225900,
},
[449960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ragefin Carver",
["npcID"] = 215652,
},
[443854] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Afflicted Civilian",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219066,
},
[283499] = {
["source"] = "Len'te the Bitter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144528,
},
[461757] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[450760] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[430812] = {
["isChanneled"] = true,
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214421,
},
[445746] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[61684] = {
["isChanneled"] = false,
["source"] = "Faultline",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[178067] = {
["isChanneled"] = false,
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 88094,
},
[459457] = {
["isChanneled"] = false,
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228057,
},
[462782] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfunctioning Defense Turret",
["npcID"] = 229678,
},
[79571] = {
["source"] = "Kirin Tor Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222476,
},
[424420] = {
["isChanneled"] = false,
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211289,
},
[373526] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jeweled Flutterwing",
["npcID"] = 227202,
},
[3110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nalbis",
["npcID"] = 416,
},
[216814] = {
["source"] = "Nar'thalas Nightwatcher",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88782,
},
[452042] = {
["source"] = "Arcane Phoenix",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 223453,
},
[453262] = {
["source"] = "Lost Lynx",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 225022,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[449154] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[17767] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 1860,
},
[451276] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[450509] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[452811] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedheart Invader",
["npcID"] = 212403,
},
[452044] = {
["source"] = "Tempest Wolf",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222797,
},
[458657] = {
["isChanneled"] = false,
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225898,
},
[435165] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[444722] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[443027] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bazaar Guard",
["npcID"] = 220974,
},
[447987] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Waste Flayer",
["npcID"] = 221017,
},
[443954] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[456905] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[186254] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bird of Prey",
["npcID"] = 165189,
},
[431549] = {
["isChanneled"] = false,
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219661,
},
[337982] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[432059] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Ouchpatcher",
["npcID"] = 214252,
},
[447955] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Alunira",
["npcID"] = 219281,
},
[451280] = {
["isChanneled"] = false,
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217670,
},
[332868] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Trap Door Rift",
["npcID"] = 170703,
},
[454861] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Colossal Titan Construct",
["npcID"] = 226078,
},
[449941] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[429222] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Treant",
["npcID"] = 54983,
},
[443353] = {
["isChanneled"] = false,
["source"] = "Bloated Cindermite",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222295,
},
[455885] = {
["isChanneled"] = false,
["source"] = "Sloshmuck",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215805,
},
[453072] = {
["source"] = "Terror of the Forge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220271,
},
[23767] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[444377] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shadegrumble Bear",
["npcID"] = 220059,
},
[440372] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invasive Undercrawler",
["npcID"] = 215739,
},
[453073] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[446424] = {
["source"] = "Persistent Honeyslime",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222843,
},
[456910] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[429545] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voidtouched Speaker",
["npcID"] = 223469,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[443494] = {
["encounterName"] = "Skarmorak",
["source"] = "Crystal Shard",
["npcID"] = 214443,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2880,
},
[457934] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[198533] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Jade Serpent Statue",
["npcID"] = 60849,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[440288] = {
["isChanneled"] = false,
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218330,
},
[450781] = {
["isChanneled"] = false,
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212629,
},
[432030] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nerubian Slashjaw",
["npcID"] = 218654,
},
[423665] = {
["encounterName"] = "Prioress Murrpray",
["type"] = "BUFF",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2848,
},
[1604] = {
["source"] = "Skitterling Chemist",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219648,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[186258] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[451287] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[420847] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[378143] = {
["isChanneled"] = false,
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189869,
},
[456147] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Regal Plainshawk",
["npcID"] = 222329,
},
[455380] = {
["isChanneled"] = false,
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218251,
},
[396302] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[455892] = {
["isChanneled"] = false,
["source"] = "Sloshmuck",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215805,
},
[290422] = {
["source"] = "Giruma Bloodpelt",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144537,
},
[391385] = {
["isChanneled"] = false,
["source"] = "Enraged Magma Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214924,
},
[453591] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Slime",
["npcID"] = 225494,
},
[436072] = {
["isChanneled"] = false,
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212717,
},
[428242] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Scrap Block",
["npcID"] = 213694,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[450501] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[463576] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Candle",
["npcID"] = 222021,
},
[290539] = {
["source"] = "Taga Stoneaxe",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 149753,
},
[452314] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[443363] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[259277] = {
["source"] = "Naroua",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[429427] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[388963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Colossal Salamanther",
["npcID"] = 224622,
},
[428019] = {
["source"] = "Royal Wicklighter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 210812,
},
[317791] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[79962] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Varlean",
["npcID"] = 96946,
},
[427325] = {
["isChanneled"] = false,
["source"] = "Voidrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[425974] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[317792] = {
["isChanneled"] = false,
["source"] = "Magus of the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 163366,
},
[428532] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
},
[452317] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[432113] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[378150] = {
["isChanneled"] = false,
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189869,
},
[455302] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[54680] = {
["isChanneled"] = false,
["source"] = "Devilsaur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[432114] = {
["isChanneled"] = false,
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212884,
},
[448432] = {
["isChanneled"] = false,
["source"] = "Generic - Empty Bunny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 223358,
},
[456138] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[457434] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[270481] = {
["isChanneled"] = false,
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 135002,
},
[424423] = {
["isChanneled"] = false,
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211291,
},
[447272] = {
["encounterName"] = "Captain Dailcry",
["type"] = "DEBUFF",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207946,
},
[452320] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[432116] = {
["isChanneled"] = false,
["source"] = "Boss Whiskerlash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220385,
},
[450786] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[459210] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[399702] = {
["isChanneled"] = false,
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217753,
},
[448485] = {
["isChanneled"] = false,
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212826,
},
[388897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Opalshell Hermit",
["npcID"] = 222157,
},
[113656] = {
["isChanneled"] = false,
["source"] = "Earth Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69792,
},
[452157] = {
["source"] = "Cyclonecrier Alpha",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222959,
},
[33395] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[449765] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[451044] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[326494] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Portal Guardian",
["npcID"] = 167998,
},
[432119] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Ki'katal the Harvester",
["npcID"] = 215407,
},
[451812] = {
["isChanneled"] = false,
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212884,
},
[431639] = {
["isChanneled"] = false,
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212715,
},
[399701] = {
["isChanneled"] = false,
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217753,
},
[432120] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Overlord",
["npcID"] = 228575,
},
[449767] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[31707] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[464917] = {
["source"] = "Weave-Rat",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 230889,
},
[6360] = {
["source"] = "Succubus",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 1863,
},
[439538] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mechanized Enforcer",
["npcID"] = 214826,
},
[444909] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spreading Sporbit",
["npcID"] = 220304,
},
[326497] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Portal Guardian",
["npcID"] = 167998,
},
[161601] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Feral Skardyn",
["npcID"] = 212591,
},
[455907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[436075] = {
["isChanneled"] = false,
["source"] = "Nerubian Webspinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212717,
},
[200205] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reaves",
["npcID"] = 101462,
},
[63619] = {
["isChanneled"] = false,
["source"] = "Shadowfiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19668,
},
[455908] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tefferty Ulreth",
["npcID"] = 219189,
},
[431612] = {
["isChanneled"] = false,
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219661,
},
[199373] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Army of the Dead",
["npcID"] = 24207,
},
[448492] = {
["isChanneled"] = false,
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212826,
},
[433403] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[445935] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222265,
},
[440207] = {
["isChanneled"] = false,
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[432125] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[102341] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Enemy Tonk",
["npcID"] = 54642,
},
[428545] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Treant",
["npcID"] = 54983,
},
[326501] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Orb Holder",
["npcID"] = 167953,
},
[334713] = {
["isChanneled"] = false,
["source"] = "Dreadstalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98035,
},
[432035] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[432638] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[447921] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voltscale Borer",
["npcID"] = 222280,
},
[432127] = {
["isChanneled"] = false,
["source"] = "Boroughbreaker Stik'kar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226294,
},
[451820] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gargantuan Honeyslime",
["npcID"] = 222960,
},
[386601] = {
["source"] = "Zurilkazul",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17252,
},
[36213] = {
["isChanneled"] = false,
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61056,
},
[453611] = {
["isChanneled"] = false,
["source"] = "Automaxor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220265,
},
[435453] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Frightfilled Mineshroom",
["npcID"] = 217786,
},
[444916] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Spreading Sporbit",
["npcID"] = 220304,
},
[448975] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[456780] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Splash",
["npcID"] = 220275,
},
[451606] = {
["source"] = "Prioress Murrpray",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207940,
},
[415250] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[444418] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[449251] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[455915] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Oozemodius",
["npcID"] = 220410,
},
[456171] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[128301] = {
["isChanneled"] = false,
["source"] = "Jin Warmkeg's Brew",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65409,
},
[449522] = {
["isChanneled"] = false,
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219655,
},
[433410] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[451064] = {
["isChanneled"] = false,
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222846,
},
[460520] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bytta",
["npcID"] = 222653,
},
[459753] = {
["isChanneled"] = false,
["source"] = "Fenryr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228224,
},
[433411] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[415253] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[448528] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[453616] = {
["isChanneled"] = false,
["source"] = "Doomguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225493,
},
[439577] = {
["encounterName"] = "Master Machinists",
["type"] = "DEBUFF",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[378413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frenzied Tidecore",
["npcID"] = 213699,
},
[104318] = {
["isChanneled"] = false,
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 143622,
},
[290490] = {
["source"] = "Taluha Sunbringer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 149714,
},
[398631] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Trapper",
["npcID"] = 212987,
},
[450037] = {
["isChanneled"] = false,
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220068,
},
[429428] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[336996] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nekthara the Mangler",
["npcID"] = 162744,
},
[419871] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[54049] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maadhun",
["npcID"] = 417,
},
[263840] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wolf",
["npcID"] = 165189,
},
[425998] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Candlelit Boomer",
["npcID"] = 213683,
},
[455904] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oozemodius",
["npcID"] = 220410,
},
[456438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursed Miner",
["npcID"] = 213565,
},
[183081] = {
["source"] = "Kirin Tor Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222476,
},
[445217] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Drone",
["npcID"] = 215024,
},
[295311] = {
["source"] = "Marksman Rakatu",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144563,
},
[224125] = {
["source"] = "Spirit Wolf",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100820,
},
[424721] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Candlelight Sanctuary",
["npcID"] = 211750,
},
[445984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gluttonous Jawcrawler",
["npcID"] = 223931,
},
[456441] = {
["source"] = "Flickerflame Candlecrusher",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219619,
},
[320120] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["npcID"] = 164463,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[64695] = {
["isChanneled"] = false,
["source"] = "Earthgrab Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60561,
},
[427024] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lampyrid Swarm",
["npcID"] = 219320,
},
[132951] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Eye of Topaz",
["npcID"] = 214947,
},
[224126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 100820,
},
[444490] = {
["source"] = "Ancestor",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 221177,
},
[464876] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[435465] = {
["isChanneled"] = false,
["source"] = "Machinist Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219361,
},
[450043] = {
["isChanneled"] = false,
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220068,
},
[445513] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Inquisitor Whitemane",
["npcID"] = 221633,
},
[396879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[442627] = {
["source"] = "Skitterling Chemist",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 219648,
},
[224127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 212489,
},
[426771] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[432142] = {
["isChanneled"] = false,
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222731,
},
[442628] = {
["isChanneled"] = false,
["source"] = "Skitterling Chemist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219648,
},
[461836] = {
["isChanneled"] = false,
["source"] = "Flickerflame Candleflyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219341,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211290,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2894,
},
[415251] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[16827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rodent",
["npcID"] = 165189,
},
[427260] = {
["encounterName"] = "Kyrioss",
["source"] = "Cursed Rooktender",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207199,
},
[445470] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Akknai Watcher",
["npcID"] = 230518,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[428820] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[456211] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crystal Clacker",
["npcID"] = 215881,
},
[454907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Coalesced Iniquity",
["npcID"] = 226023,
},
[48168] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Matron Nessa",
["npcID"] = 96947,
},
[457465] = {
["encounterName"] = "Void Speaker Eirich",
["type"] = "DEBUFF",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2883,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[383298] = {
["isChanneled"] = false,
["source"] = "Enraged Magma Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214924,
},
[59638] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[459512] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ruukk",
["npcID"] = 218214,
},
[461814] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[455932] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[90325] = {
["isChanneled"] = false,
["source"] = "Hatecoil Gargantuan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 109154,
},
[444925] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[89751] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[419054] = {
["encounterName"] = "Volcoross",
["type"] = "DEBUFF",
["source"] = "Volcoross",
["npcID"] = 208478,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2737,
},
[245102] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Devlynn Styx",
["npcID"] = 121527,
},
[283558] = {
["source"] = "Galdon the Glacial",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150742,
},
[443933] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twice-Stinger the Wretched",
["npcID"] = 219271,
},
[46551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[455975] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[449285] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cha'tak",
["npcID"] = 216042,
},
[461817] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[451843] = {
["isChanneled"] = false,
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207205,
},
[263867] = {
["isChanneled"] = false,
["source"] = "Smaug",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[142421] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[444431] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 211290,
},
[444683] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 218191,
},
[429099] = {
["source"] = "Fervent Sharpshooter",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206694,
},
[201754] = {
["isChanneled"] = false,
["source"] = "Ragnar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[330875] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nefarious Darkspeaker",
["npcID"] = 169893,
},
[118905] = {
["isChanneled"] = false,
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61245,
},
[448002] = {
["isChanneled"] = false,
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222797,
},
[89753] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[398394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shaleshell Clicker",
["npcID"] = 220155,
},
[368983] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[438803] = {
["isChanneled"] = false,
["source"] = "Skardyn Metamorphosis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219148,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2861,
},
[462844] = {
["source"] = "Stone Bulwark Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 59712,
},
[90328] = {
["isChanneled"] = false,
["source"] = "bish",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[459264] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Magnetic Loader",
["npcID"] = 227984,
},
[449290] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[430109] = {
["isChanneled"] = false,
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207198,
},
[442618] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bazaar Guard",
["npcID"] = 220974,
},
[267964] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[17735] = {
["isChanneled"] = false,
["source"] = "Huknuz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[319626] = {
["encounterName"] = "Kul'tharok",
["source"] = "Kul'tharok",
["npcID"] = 162309,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2364,
},
[290577] = {
["isChanneled"] = false,
["source"] = "Abomination",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149555,
},
[431645] = {
["isChanneled"] = false,
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219651,
},
[456453] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[442387] = {
["isChanneled"] = false,
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222731,
},
[426275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[456198] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scary Sticker",
["npcID"] = 216948,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[424966] = {
["encounterName"] = "Stormguard Gorren",
["type"] = "DEBUFF",
["source"] = "Stormguard Gorren",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207205,
},
[444946] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[283700] = {
["source"] = "Ku'tiri the Claw",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150733,
},
[342135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Heavin the Breaker",
["npcID"] = 167532,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[429091] = {
["isChanneled"] = false,
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212827,
},
[442266] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[91800] = {
["source"] = "Hammerthief",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 26125,
},
[444692] = {
["isChanneled"] = false,
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 221672,
},
[440622] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Whispering Luremancer",
["npcID"] = 221957,
},
[421675] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[79849] = {
["isChanneled"] = false,
["source"] = "Kirin Tor Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 104091,
},
[445718] = {
["isChanneled"] = false,
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212597,
},
[432673] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[445205] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Buzzer",
["npcID"] = 215021,
},
[23769] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[263854] = {
["isChanneled"] = false,
["source"] = "BMcopium",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[386639] = {
["source"] = "Cleansing Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 195778,
},
[449298] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[423979] = {
["isChanneled"] = false,
["source"] = "Void Cursed Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214419,
},
[2649] = {
["isChanneled"] = false,
["source"] = "Ragnar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[445974] = {
["isChanneled"] = false,
["source"] = "Bomb",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222281,
},
[445207] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[450041] = {
["source"] = "Malfunctioning Spire",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220068,
},
[448787] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lightspawn",
["npcID"] = 206710,
},
[446416] = {
["isChanneled"] = false,
["source"] = "Freed Honeywax",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222313,
},
[453392] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[383061] = {
["isChanneled"] = false,
["source"] = "Liquid Magma Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 97369,
},
[426283] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[201633] = {
["source"] = "Earthen Wall Totem",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 100943,
},
[260072] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pa'kura Priest",
["npcID"] = 131834,
},
[432156] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[128182] = {
["isChanneled"] = false,
["source"] = "Totem of Harmony",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65387,
},
[423494] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[430013] = {
["isChanneled"] = false,
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207186,
},
[451775] = {
["isChanneled"] = false,
["source"] = "Cogwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224527,
},
[448791] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[263856] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rodent",
["npcID"] = 165189,
},
[196742] = {
["source"] = "Earth Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 69792,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[449815] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[465] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Captain Garrick",
["npcID"] = 209057,
},
[3716] = {
["isChanneled"] = false,
["source"] = "Huknuz",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1860,
},
[454675] = {
["isChanneled"] = false,
["source"] = "Angry Rocks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220543,
},
[134477] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[464888] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "E.D.N.A",
["npcID"] = 210108,
},
[24450] = {
["isChanneled"] = false,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[435239] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[449817] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Toxic Swarmite",
["npcID"] = 222721,
},
[431659] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Direweb Ritualist",
["npcID"] = 221300,
},
[284402] = {
["source"] = "Falania Nightsoul",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 144566,
},
[430125] = {
["source"] = "Quartermaster Koratite",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 209801,
},
[456468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[456212] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Webbed Ore Deposit",
["npcID"] = 226716,
},
[333708] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maniacal Soulbinder",
["npcID"] = 160495,
},
[425011] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Eternal Flame",
["npcID"] = 210851,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[398643] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Opalooze Mollusc",
["npcID"] = 222040,
},
[455190] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deathspore Bud",
["npcID"] = 221518,
},
[420125] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[444449] = {
["isChanneled"] = false,
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206694,
},
[444705] = {
["isChanneled"] = false,
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207949,
},
[381535] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scornful Sandshoal",
["npcID"] = 214662,
},
[455447] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wayne",
["npcID"] = 226271,
},
[188046] = {
["isChanneled"] = false,
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198489,
},
[427315] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Void Rift",
["npcID"] = 213125,
},
[455192] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Deathspore Bud",
["npcID"] = 221518,
},
[445218] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[378394] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seaborne Elemental",
["npcID"] = 214549,
},
[377923] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Magma",
["npcID"] = 225390,
},
[263892] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Szofi",
["npcID"] = 165189,
},
[455159] = {
["source"] = "Vanishing Nightmare",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 224922,
},
[373521] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cavern Basilisk",
["npcID"] = 219949,
},
[195181] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[447996] = {
["isChanneled"] = false,
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 222796,
},
[127801] = {
["isChanneled"] = false,
["source"] = "Turnip Punching Bag",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 65310,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2877,
},
[447994] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Waste Flayer",
["npcID"] = 221017,
},
[30213] = {
["isChanneled"] = false,
["source"] = "Zurilkazul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[462612] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ermie",
["npcID"] = 229589,
},
[429109] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Mender",
["npcID"] = 224962,
},
[452912] = {
["source"] = "Zilthara",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 220270,
},
[263852] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bird of Prey",
["npcID"] = 165189,
},
[432135] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Invading Kobold",
["npcID"] = 216157,
},
[429110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2877,
},
[376426] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Condensing Sprite",
["npcID"] = 215362,
},
[372503] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Loyalist Threadblade",
["npcID"] = 221190,
},
[450546] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[460057] = {
["isChanneled"] = false,
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219665,
},
[448640] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[317605] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[461081] = {
["isChanneled"] = false,
["source"] = "Stormrook Tunnel Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 228803,
},
[447443] = {
["encounterName"] = "Captain Dailcry",
["type"] = "DEBUFF",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 207946,
},
[450899] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[457959] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[427323] = {
["isChanneled"] = false,
["source"] = "Voidrider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212786,
},
[89766] = {
["isChanneled"] = false,
["source"] = "Felguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[449318] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[429114] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[264667] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 165189,
},
[55078] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[457503] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cogchewer",
["npcID"] = 212617,
},
[84645] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nezir",
["npcID"] = 45871,
},
[449831] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[445995] = {
["isChanneled"] = false,
["source"] = "Infested Jawgrub",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 217379,
},
[261616] = {
["isChanneled"] = false,
["source"] = "Katy Stampwhistle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 132969,
},
[102292] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkmoon Steam Tonk",
["npcID"] = 54588,
},
[19483] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infernal",
["npcID"] = 89,
},
[431674] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[449321] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[320679] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unyielding Contender",
["npcID"] = 170838,
},
[445741] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[446474] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Congealed Wax-hulk",
["npcID"] = 223206,
},
[432781] = {
["isChanneled"] = false,
["source"] = "Radiating Voidstone",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212739,
},
[420934] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["npcID"] = 208478,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2737,
},
[386195] = {
["source"] = "Dreadstalker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 98035,
},
[449136] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[424426] = {
["source"] = "Sergeant Shaynemail",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 211291,
},
[425027] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[427329] = {
["encounterName"] = "Void Speaker Eirich",
["type"] = "DEBUFF",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2883,
},
[267997] = {
["isChanneled"] = false,
["source"] = "Gloomhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226268,
},
[390926] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Candlelit Big-Boomer",
["npcID"] = 211546,
},
[389401] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pearlfin Sea-Shaman",
["npcID"] = 214435,
},
[370042] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Risen Magma",
["npcID"] = 225390,
},
[446000] = {
["isChanneled"] = false,
["source"] = "Deeps Larva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215733,
},
[19647] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thootom",
["npcID"] = 417,
},
[430814] = {
["source"] = "Coalescing Void Diffuser",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 214421,
},
[426308] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[267999] = {
["isChanneled"] = false,
["source"] = "Gloomhound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 226268,
},
[446430] = {
["isChanneled"] = false,
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 215702,
},
[452651] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[384366] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ashwhite Kestrel",
["npcID"] = 215070,
},
[449071] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[432959] = {
["isChanneled"] = false,
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 212793,
},
[440376] = {
["source"] = "Encroaching Undercrawler",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215771,
},
[427382] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[424430] = {
["source"] = "Ardent Paladin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 206704,
},
[54216] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raptor",
["npcID"] = 165189,
},
[35079] = {
["source"] = "Smaug",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 165189,
},
[422382] = {
["isChanneled"] = false,
["source"] = "Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54983,
},
[462372] = {
["encounterName"] = "Master Machinists",
["type"] = "BUFF",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2888,
},
[103582] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 55382,
},
[454596] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tor'go",
["npcID"] = 222690,
},
[448818] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[462373] = {
["encounterName"] = "Master Machinists",
["source"] = "Vent Stalker",
["npcID"] = 214049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[446261] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Famished Fog Beast",
["npcID"] = 219447,
},
[458793] = {
["isChanneled"] = false,
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225898,
},
[432805] = {
["source"] = "Radiating Voidstone",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 212739,
},
[450177] = {
["source"] = "Raging Roots",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216250,
},
[447412] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Bloodmaw",
["npcID"] = 219264,
},
[191732] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[448820] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[432036] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Hairless the Menace",
["npcID"] = 213550,
},
[371584] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aquellion",
["npcID"] = 220274,
},
[446519] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[285141] = {
["source"] = "Pyrthel the Ghastly",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 150734,
},
[444985] = {
["source"] = "Pupating Stinger",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216288,
},
[427484] = {
["isChanneled"] = false,
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206698,
},
[444474] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[176458] = {
["source"] = "Blacksmithing Follower - Horde",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 88402,
},
[440007] = {
["isChanneled"] = true,
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214576,
},
[452023] = {
["source"] = "Earthen-Ward Sentinel",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 216221,
},
[450613] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[455984] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[427596] = {
["isChanneled"] = false,
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206704,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[62305] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raptor",
["npcID"] = 165189,
},
[450153] = {
["isChanneled"] = false,
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 216250,
},
[449717] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2835,
},
[381430] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quaking Rager",
["npcID"] = 215359,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[455219] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207207,
},
[427854] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[457872] = {
["isChanneled"] = false,
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 218458,
},
[452539] = {
["isChanneled"] = false,
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220271,
},
[167381] = {
["isChanneled"] = false,
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225977,
},
[423682] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2848,
},
[431180] = {
["isChanneled"] = false,
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213883,
},
[135029] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208441,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209230,
},
[428879] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[322743] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Skeletal Vestige",
["npcID"] = 171597,
},
[23768] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[454199] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mycotic Jawcrawler",
["npcID"] = 225488,
},
[387960] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Waximus",
["npcID"] = 215177,
},
[445504] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Highlord Darion Mograine",
["npcID"] = 221632,
},
[427346] = {
["isChanneled"] = false,
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206697,
},
[425556] = {
["encounterName"] = "Prioress Murrpray",
["type"] = "DEBUFF",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 2848,
},
[423766] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Aspiring Forgehand",
["npcID"] = 212405,
},
[447926] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Voltscale Borer",
["npcID"] = 222280,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2391,
},
[452155] = {
["source"] = "Cyclonecrier Alpha",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 222959,
},
[460595] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Irritated Salvager",
["npcID"] = 220471,
},
[427356] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Devout Priest",
["npcID"] = 206697,
},
[451900] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonehead Koboldcrusher",
["npcID"] = 220792,
},
[49966] = {
["isChanneled"] = false,
["source"] = "Faultline",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 165189,
},
[445251] = {
["isChanneled"] = false,
["source"] = "Ironwold Stormpaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 214970,
},
[445507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[444740] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[381570] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quaking Rager",
["npcID"] = 215359,
},
[323515] = {
["encounterName"] = "Gorechop",
["source"] = "Gorechop",
["npcID"] = 162317,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2365,
},
[445508] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nazgrim",
["npcID"] = 221634,
},
[444741] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "King Thoras Trollbane",
["npcID"] = 221635,
},
[274156] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rune Weapon",
["npcID"] = 27893,
},
[456331] = {
["isChanneled"] = false,
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 219619,
},
[448600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[452926] = {
["isChanneled"] = false,
["source"] = "Zilthara",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 220270,
},
[167385] = {
["isChanneled"] = false,
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 225977,
},
[459421] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[446533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[444743] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[337131] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Xantuth the Blighted",
["npcID"] = 162872,
},
[428887] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[428120] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2888,
},
[330694] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Disgusting Refuse",
["npcID"] = 163089,
},
[455230] = {
["isChanneled"] = false,
["source"] = "Lashroom Ambusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 224607,
},
[427865] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2883,
},
[457788] = {
["source"] = "Wickbreaker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 215077,
},
[319997] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shambling Arbalest",
["npcID"] = 164510,
},
},
["profileKeys"] = {
["Qpaladin - Ragnaros"] = "qpaladin",
["Qpcheese - Chamber of Aspects"] = "Default",
["Qpcheese - Ragnaros"] = "Mage-MOD",
["Qpc - Draenor"] = "Default",
["Zelení - Draenor"] = "Default",
["Sikducker - Sylvanas"] = "Default",
["Flurrq - Ragnaros"] = "Default",
["Qpfromage - Sylvanas"] = "Default",
["Laurs - Ragnaros"] = "Default",
["Djagon - Ragnaros"] = "Default",
["Gammelemil - Grim Batol"] = "Default",
["Qtte - Sylvanas"] = "Default",
["Qute - Sylvanas"] = "Default",
["Myfficraider - Ragnaros"] = "Default",
["Fishanus - Ragnaros"] = "Default",
["Qpebank - Draenor"] = "Default",
["Jerwin - Ragnaros"] = "Default",
["Qpe - Ravencrest"] = "Default",
["Cyclosarin - Ragnaros"] = "Default",
["Qubit - Ragnaros"] = "Mage-MOD",
["Qpfromage - Ragnaros"] = "Default",
["Qpew - Ragnaros"] = "Default",
["Dogson - Ragnaros"] = "Default",
},
["profiles"] = {
["Qpcheese - Ragnaros"] = {
["use_ui_parent"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.168627455830574,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
209033,
360850,
212784,
207980,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["NpcNames"] = {
"165560",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["NpcNames"] = {
"174773",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["aura2_x_offset"] = 0,
["update_throttle"] = 0.1200000047683716,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Kastfall-Azralon",
["Name"] = "Color Automation [Plater]",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547392935,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Hide Neutral Units [Plater]",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Reorder Nameplate [Plater]",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 574574,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Don't Have Aura [Plater]",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1554138845,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Tecno-Azralon",
["Name"] = "Extra Border [Plater]",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Current Target Color [Plater]",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1552354619,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 348,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Cast Bar Icon Settings [P]",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Ahwa-Azralon",
["Name"] = "Execute Range [Plater]",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547406548,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Kastfall-Azralon",
["Name"] = "Attacking Specific Unit [Plater]",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Izimode-Azralon",
["Name"] = "Combo Points [Plater]",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = 135426,
["Options"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Author"] = "Izimode-Azralon",
["Name"] = "Players Targeting a Target [Plater]",
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["LastHookEdited"] = "",
["HooksTemp"] = {
},
["Author"] = "Ditador-Azralon",
["Name"] = "Aura Reorder [Plater]",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["version"] = -1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["PlaterCore"] = 1,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Options"] = {
},
},
},
["aura_x_offset"] = 0,
["range_check_alpha_friendlies"] = 0.6499999761581421,
["range_check_alpha"] = 0.6499999761581421,
["npc_cache"] = {
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
},
},
["ui_parent_scale_tune"] = 1.409999847412109,
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 1,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Unit - Show Energy"] = 11,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Explosion Affix M+"] = 14,
["Fixate"] = 11,
["Cast - Stop Casting"] = 4,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Countdown"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - Very Important"] = 15,
["Fixate On You"] = 11,
},
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
},
},
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["aura2_y_offset"] = 5,
["pet_height_scale"] = 0.949999988079071,
["health_selection_overlay_alpha"] = 0.09999999403953552,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
350421,
355787,
348513,
},
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1675712003,
},
},
["pet_width_scale"] = 0.949999988079071,
["patch_version"] = 24,
["not_affecting_combat_alpha"] = 0.5999999642372131,
["aura_y_offset"] = 5,
},
["qpaladin"] = {
["target_highlight"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1688802706,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura - Buff Alert [Plater]",
["Desc"] = "Add the buff name in the trigger box.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["Icon"] = 135945,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["NpcNames"] = {
"174773",
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 188,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["Enabled"] = true,
["Author"] = "Tercioo-Sylvanas",
["NpcNames"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Name"] = "Aura - Debuff Alert [Plater]",
["Desc"] = "Add the debuff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = false,
["Revision"] = 64,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 210,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["Icon"] = 1029718,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 271,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["Icon"] = 136048,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 235,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate On You [Plater]",
["Prio"] = 99,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["Icon"] = 2065634,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["NpcNames"] = {
},
["semver"] = "1.0.74",
["Enabled"] = true,
["Revision"] = 2918,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "ArrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "GlowAlpha",
["Value"] = 0.7,
["Name"] = "Glow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "NameplateSizeOffset",
["Value"] = 1.25,
["Name"] = "Nameplate Height Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["Name"] = "M+ Explosive [Fixed]",
["Author"] = "Bombad£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = 75,
["Prio"] = 99,
["SpellIds"] = {
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["url"] = "https://wago.io/1TlaFYtDO/75",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 283,
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Name"] = "Cast Bar Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Name"] = "Cast Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Name"] = "Cast Timer Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Name"] = "Cast - Castbar is Timer [P]",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
354080,
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["semver"] = "",
["Enabled"] = true,
["Revision"] = 379,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["url"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1688802692,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = 2175503,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["NpcNames"] = {
},
["Enabled"] = false,
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Explosion Affix M+ [Plater]",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066622,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 575,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Important [P]",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066619,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 165,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Warning [P]",
["Desc"] = "Change the color of  add",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802707,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Icon"] = 236209,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["Options"] = {
},
["Enabled"] = true,
["NpcNames"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Aura While Casting [P]",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705067832,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Icon"] = "interface/addons/plater/media/duck_64",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 116,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["Enabled"] = false,
["NpcNames"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Non Elite Trash [P]",
["Desc"] = "",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802690,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["NpcNames"] = {
},
["Enabled"] = true,
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Fixate by Unit Buff [P]",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1705066826,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 110,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Prio"] = 99,
["Name"] = "Add - Explode on Die [P]",
["Desc"] = "",
["semver"] = "",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4140: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4141: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4142: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4138: in function <Interface/AddOns/Plater/Plater.lua:4138>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
["SoftTargetInteract"] = "Interface/AddOns/Blizzard_SettingsDefinitions_Frame/Controls.lua:82",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Details/Libs/DF/slider.lua:713>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6046: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6044>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_selection_overlay"] = "Details Vidro",
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["color_override_colors"] = {
[3] = {
0,
0.1450980454683304,
1,
},
},
["extra_icon_cooldown_reverse"] = false,
["npc_cache"] = {
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[210109] = {
"Earth Infused Golem",
"The Stonevault",
"enUS",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[169430] = {
"Ur'zul",
"Theater of Pain",
"enUS",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[213954] = {
"Rock Smasher",
"The Stonevault",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[58831] = {
"Bound Servant",
"Scholomance",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[145898] = {
"Anointed Disciple",
"Battle of Dazar'alor",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[145903] = {
"Darkforged Crusader",
"Battle of Dazar'alor",
"enUS",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[168932] = {
"Doomguard",
"Theater of Pain",
"enUS",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[147440] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[216275] = {
"Brann's Epic Egg",
"The Waterworks",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
"enUS",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[125828] = {
"Kronwel",
"Atal'Dazar",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[213216] = {
"Speaker Dorlita",
"The Stonevault",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[212453] = {
"Ghastly Voidsoul",
"The Stonevault",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[219874] = {
"High Speaker's Construct",
"Hall of Awakening",
"enUS",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[162309] = {
"Kul'tharok",
"Theater of Pain",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
"enUS",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[205307] = {
"Fury of N'zoth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[214263] = {
"Waxface",
"The Waterworks",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[155170] = {
"Risen Villager",
"Stratholme Pet Dungeon",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[144680] = {
"Frida Ironbellows",
"Battle of Dazar'alor",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[155174] = {
"Unholy Skeleton",
"Stratholme Pet Dungeon",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[219148] = {
"Skardyn Metamorphosis",
"Hall of Awakening",
"enUS",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[214287] = {
"Earth Burst Totem",
"The Stonevault",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[219149] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[212764] = {
"Engine Speaker",
"The Stonevault",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[167994] = {
"Ossified Conscript",
"Theater of Pain",
"enUS",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
"enUS",
},
[211241] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[33716] = {
"Ruby Consort",
"Ulduar",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[33717] = {
"Azure Consort",
"Ulduar",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214576] = {
"Iron-Runed Protector",
"Hall of Awakening",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[223541] = {
"Stolen Loader",
"The Waterworks",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[217658] = {
"Sir Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[206697] = {
"Devout Priest",
"Priory of the Sacred Flame",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[222927] = {
"Sacred Flame Vintner",
"Priory of the Sacred Flame",
"enUS",
},
[224962] = {
"Cursedforge Mender",
"The Stonevault",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[213217] = {
"Speaker Brokk",
"The Stonevault",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[210156] = {
"Skarmorak",
"The Stonevault",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[211777] = {
"Spitfire Fusetender",
"The Waterworks",
"enUS",
},
[207939] = {
"Baron Braunpyke",
"Priory of the Sacred Flame",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[222149] = {
"Injured Earthen",
"The Stonevault",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[170838] = {
"Unyielding Contender",
"Theater of Pain",
"enUS",
},
[207940] = {
"Prioress Murrpray",
"Priory of the Sacred Flame",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[219361] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[25755] = {
"Ahunite Hailstone",
"Coilfang: The Slave Pens",
"enUS",
},
[217610] = {
"Deviant Skardyn",
"Hall of Awakening",
"enUS",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[217353] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[221979] = {
"Void Bound Howler",
"The Stonevault",
"enUS",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[212765] = {
"Void Bound Despoiler",
"The Stonevault",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[228044] = {
"Reno Jackson",
"Earthcrawl Mines",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[221760] = {
"Risen Mage",
"Priory of the Sacred Flame",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[207943] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[213829] = {
"Candleclaw Soilseer",
"New Candle, New Hope",
"enUS",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[222923] = {
"Repurposed Loaderbot",
"The Stonevault",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[210108] = {
"E.D.N.A",
"The Stonevault",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[207946] = {
"Captain Dailcry",
"Priory of the Sacred Flame",
"enUS",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[204109] = {
"Cavernous Shrieker",
"The Waterworks",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[196946] = {
"Lurking Lunker",
"Vault of the Incarnates",
"enUS",
},
[217672] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[207949] = {
"Zealous Templar",
"Priory of the Sacred Flame",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[164451] = {
"Dessia the Decapitator",
"Theater of Pain",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[208578] = {
"Wild Sproutling",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[205304] = {
"Freya",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[214350] = {
"Turned Speaker",
"The Stonevault",
"enUS",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
"enUS",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[212826] = {
"Guard Captain Suleyman",
"Priory of the Sacred Flame",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[217684] = {
"Deranged Skardyn",
"Hall of Awakening",
"enUS",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[212827] = {
"High Priest Aemya",
"Priory of the Sacred Flame",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[167534] = {
"Rek the Hardened",
"Theater of Pain",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[211289] = {
"Taener Duelmal",
"Priory of the Sacred Flame",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[211290] = {
"Elaena Emberlanz",
"Priory of the Sacred Flame",
"enUS",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[167536] = {
"Harugia the Bloodthirsty",
"Theater of Pain",
"enUS",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[213338] = {
"Forgebound Mender",
"The Stonevault",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[40446] = {
"Skar'this the Summoner",
"Coilfang: The Slave Pens",
"enUS",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[217435] = {
"Master Machinist Dunstan",
"Hall of Awakening",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[203877] = {
"Kobold Thwacker",
"The Waterworks",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[213343] = {
"Forge Loader",
"The Stonevault",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[203878] = {
"Kobold Mystic",
"The Waterworks",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
"enUS",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[212835] = {
"Risen Footman",
"Priory of the Sacred Flame",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
"enUS",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[206698] = {
"Fanatical Conjuror",
"Priory of the Sacred Flame",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[206699] = {
"War Lynx",
"Priory of the Sacred Flame",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[206704] = {
"Ardent Paladin",
"Priory of the Sacred Flame",
"enUS",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
"enUS",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[206705] = {
"Arathi Footman",
"Priory of the Sacred Flame",
"enUS",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[53500] = {
"Living Meteor",
"Firelands",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[206710] = {
"Lightspawn",
"Priory of the Sacred Flame",
"enUS",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[216221] = {
"Earthen-Ward Sentinel",
"Hall of Awakening",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[213881] = {
"Candleclaw Bootlicker",
"New Candle, New Hope",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[146365] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[169875] = {
"Shackled Soul",
"Theater of Pain",
"enUS",
},
[147614] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[220029] = {
"Gearsweep",
"Hall of Awakening",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[25865] = {
"Frozen Core",
"Coilfang: The Slave Pens",
"enUS",
},
[147621] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[213143] = {
"Manifested Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
"enUS",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[217225] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Atal'Dazar",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
"enUS",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[169893] = {
"Nefarious Darkspeaker",
"Theater of Pain",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[155175] = {
"Gargoyle",
"Stratholme Pet Dungeon",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[215427] = {
"Waxen Copy",
"New Candle, New Hope",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[213119] = {
"Void Speaker Eirich",
"The Stonevault",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[147439] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[146366] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[146367] = {
"Char'golm",
"Battle of Dazar'alor",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[162744] = {
"Nekthara the Mangler",
"Theater of Pain",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[146370] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[217200] = {
"Void Crystal Monstrosity",
"Hall of Awakening",
"enUS",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[146371] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[58758] = {
"Soul Fragment",
"Scholomance",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[212389] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[212838] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[206696] = {
"Arathi Knight",
"Priory of the Sacred Flame",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[206694] = {
"Fervent Sharpshooter",
"Priory of the Sacred Flame",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[216487] = {
"Skardyn Remnants",
"Hall of Awakening",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[203951] = {
"Kobold Skullface",
"The Waterworks",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[62982] = {
"Mindbender",
"Waycrest Manor",
"enUS",
},
[211291] = {
"Sergeant Shaynemail",
"Priory of the Sacred Flame",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[204127] = {
"Kobold Taskfinder",
"The Waterworks",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[214443] = {
"Crystal Shard",
"The Stonevault",
"enUS",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33719] = {
"Emerald Consort",
"Ulduar",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
"enUS",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[33720] = {
"Obsidian Consort",
"Ulduar",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[224516] = {
"Skardyn Invader",
"The Stonevault",
"enUS",
},
[212400] = {
"Void Touched Elemental",
"The Stonevault",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
"enUS",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[212403] = {
"Cursedheart Invader",
"The Stonevault",
"enUS",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[228030] = {
"Sir Finley Mrrgglton",
"Earthcrawl Mines",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[25756] = {
"Ahunite Coldwave",
"Coilfang: The Slave Pens",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[217299] = {
"Ostiary Wystan",
"Hall of Awakening",
"enUS",
},
[212405] = {
"Aspiring Forgehand",
"The Stonevault",
"enUS",
},
[217799] = {
"Machinist Protector",
"Hall of Awakening",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213743] = {
"Enraged Skardyn",
"Hall of Awakening",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[214066] = {
"Cursedforge Stoneshaper",
"The Stonevault",
"enUS",
},
[214264] = {
"Cursedforge Honor Guard",
"The Stonevault",
"enUS",
},
[211140] = {
"Arathi Neophyte",
"Priory of the Sacred Flame",
"enUS",
},
[163089] = {
"Disgusting Refuse",
"Theater of Pain",
"enUS",
},
[162317] = {
"Gorechop",
"Theater of Pain",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[162329] = {
"Xav the Unfallen",
"Theater of Pain",
"enUS",
},
[165946] = {
"Mordretha, the Endless Empress",
"Theater of Pain",
"enUS",
},
},
["health_selection_overlay_alpha"] = 1,
["minor_height_scale"] = 0.94999998807907,
["aura_width2"] = 22,
["aura_height2"] = 18,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["range_check_alpha"] = 1,
["semver"] = "1.0.0",
["cast_statusbar_texture"] = "Wglass",
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
["show_healthbars_on_not_attackable"] = true,
["transparency_behavior"] = 4,
["spell_animations"] = false,
["aura_consolidate"] = true,
["health_statusbar_texture"] = "Details Flat",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Execute Range"] = 1,
["Cast Bar Icon Config"] = 2,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
},
["minor_width_scale"] = 0.89999997615814,
["castbar_target_text_size"] = 8,
["honor_blizzard_plate_alpha"] = true,
["aura_timer_text_font"] = "PT Sans Narrow",
["aura_height"] = 18,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["castbar_target_notank"] = true,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.077178478241",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "1",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateShowOnlyNames"] = "1",
["SoftTargetNameplateInteract"] = "1",
["nameplateShowFriendlyGuardians"] = "1",
["nameplateOccludedAlphaMult"] = "0.29999998211861",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["login_counter"] = 19790,
["aura_stack_font"] = "PT Sans Narrow",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
["hover_highlight_alpha"] = 0.2999999821186066,
["usePlaterWidget"] = false,
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["actorname_use_class_color"] = true,
["cast"] = {
121,
},
["only_thename"] = true,
["cast_incombat"] = {
121,
},
["show_guild_name"] = true,
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
},
["friendlynpc"] = {
["big_actorname_text_size"] = 10,
["cast"] = {
121,
},
["enabled"] = false,
["actorname_text_spacing"] = 16,
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
17,
},
["health"] = {
121,
13,
},
["actorname_text_size"] = 17,
},
["enemynpc"] = {
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast"] = {
124,
},
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 9,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
124,
10,
},
["health_incombat"] = {
121,
13,
},
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
["big_actorname_text_font"] = "PT Sans Narrow",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
["percent_text_size"] = 10,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["spellname_text_size"] = 10,
["health"] = {
121,
13,
},
["actorname_text_size"] = 10,
["level_text_alpha"] = 0,
},
["enemyplayer"] = {
["spellpercent_text_font"] = "PT Sans Narrow",
["level_text_size"] = 8,
["cast"] = {
121,
},
["big_actortitle_text_size"] = 10,
["spellname_text_outline"] = "OUTLINE",
["level_text_font"] = "PT Sans Narrow",
["actorname_text_font"] = "PT Sans Narrow",
["all_names"] = true,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 11,
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["health_incombat"] = {
121,
13,
},
["spellname_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["big_actorname_text_font"] = "PT Sans Narrow",
["big_actorname_text_size"] = 10,
["percent_text_size"] = 10,
["percent_text_font"] = "PT Sans Narrow",
["quest_enabled"] = true,
["quest_color_enabled"] = true,
["spellname_text_size"] = 11,
["health"] = {
121,
13,
},
},
["global_health_width"] = 121,
},
["aura_y_offset"] = 5,
["use_ui_parent"] = true,
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["border_thickness"] = 1.480000019073486,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1597-0F7AB124"] = "ArcaneCharges",
["Player-3682-0B241018"] = "Essence",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B310D76"] = "HolyPower",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-3682-0B155119"] = "SoulShards",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-1597-0F88EA0A"] = "ArcaneCharges",
},
},
["ignore_softinteract_objects"] = true,
["npc_colors"] = {
[134139] = {
true,
false,
"gold",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[136186] = {
true,
false,
"honeydew",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[173016] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[180433] = {
true,
false,
"fuchsia",
},
[107288] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[135167] = {
true,
false,
"peru",
},
[81522] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"deepskyblue",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[178392] = {
true,
false,
"fuchsia",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[178139] = {
true,
false,
"mediumpurple",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[192464] = {
true,
false,
"fuchsia",
},
[98406] = {
false,
false,
"fuchsia",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[136076] = {
true,
false,
"lightcoral",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[180323] = {
true,
false,
"fuchsia",
},
[207177] = {
true,
false,
"mediumpurple",
},
[127757] = {
true,
false,
"mediumpurple",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[162039] = {
true,
false,
"deepskyblue",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[171376] = {
true,
false,
"blue",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[198998] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[180335] = {
true,
false,
"deepskyblue",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[81984] = {
true,
false,
"mediumpurple",
},
[180336] = {
true,
false,
"deepskyblue",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[134174] = {
true,
false,
"honeydew",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[104300] = {
true,
false,
"fuchsia",
},
[175992] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[205408] = {
true,
false,
"deepskyblue",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[114584] = {
true,
false,
"mediumpurple",
},
[180473] = {
true,
false,
"blue",
},
[150251] = {
true,
false,
"blue",
},
[165108] = {
true,
true,
"fuchsia",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[129602] = {
true,
false,
"mediumpurple",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[129367] = {
true,
false,
"honeydew",
},
[196203] = {
true,
false,
"deepskyblue",
},
[180429] = {
true,
false,
"mediumpurple",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[44404] = {
true,
false,
"fuchsia",
},
[101476] = {
true,
false,
"fuchsia",
},
[186741] = {
true,
false,
"fuchsia",
},
[160495] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[157810] = {
true,
false,
"deepskyblue",
},
[180348] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[40634] = {
true,
false,
"deepskyblue",
},
[182778] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[197857] = {
true,
false,
"deepskyblue",
},
[168153] = {
true,
false,
"fuchsia",
},
[102962] = {
true,
false,
"fuchsia",
},
[208698] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[129553] = {
true,
false,
"mediumpurple",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[128455] = {
true,
false,
"fuchsia",
},
[198995] = {
true,
false,
"mediumpurple",
},
[191847] = {
true,
false,
"deepskyblue",
},
[173189] = {
true,
false,
"deepskyblue",
},
[129552] = {
true,
false,
"deepskyblue",
},
[205158] = {
true,
false,
"mediumpurple",
},
[134417] = {
true,
false,
"gold",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[195696] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[165762] = {
true,
false,
"fuchsia",
},
[187768] = {
true,
false,
"deepskyblue",
},
[83846] = {
true,
false,
"mediumpurple",
},
[91007] = {
true,
false,
"DRUID",
},
[81864] = {
true,
false,
"blue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[138281] = {
true,
false,
"mediumpurple",
},
[129370] = {
true,
false,
"gold",
},
[153882] = {
true,
false,
"deepskyblue",
},
[179841] = {
true,
false,
"deepskyblue",
},
[134701] = {
true,
false,
"fuchsia",
},
[180864] = {
true,
false,
"fuchsia",
},
[186107] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
false,
"deepskyblue",
},
[84550] = {
true,
false,
"mediumpurple",
},
[174197] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[189816] = {
true,
false,
"deepskyblue",
},
[91008] = {
true,
false,
"deepskyblue",
},
[179842] = {
true,
false,
"fuchsia",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[183423] = {
true,
false,
"deepskyblue",
},
[137516] = {
true,
false,
"lightsalmon",
},
[187771] = {
true,
false,
"blue",
},
[44566] = {
true,
false,
"mediumpurple",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[97068] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[45915] = {
true,
false,
"fuchsia",
},
[65317] = {
true,
false,
"mediumpurple",
},
[180474] = {
true,
false,
"fuchsia",
},
[129547] = {
true,
false,
"deepskyblue",
},
[183425] = {
true,
false,
"blue",
},
[115020] = {
true,
false,
"mediumpurple",
},
[105715] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[175861] = {
true,
false,
"fuchsia",
},
[176521] = {
true,
false,
"blue",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"mediumpurple",
},
[132532] = {
true,
false,
"palegreen",
},
[189886] = {
true,
false,
"gold",
},
[139949] = {
true,
false,
"honeydew",
},
[104246] = {
true,
false,
"blue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"blue",
},
[126848] = {
true,
false,
"deepskyblue",
},
[102232] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[169426] = {
true,
false,
"gold",
},
[144298] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"deepskyblue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[186242] = {
true,
false,
"blue",
},
[194745] = {
true,
false,
"fuchsia",
},
[114796] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[180104] = {
true,
false,
"deepskyblue",
},
[96574] = {
true,
false,
"mediumpurple",
},
[184581] = {
true,
false,
"fuchsia",
},
[191230] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[168658] = {
true,
false,
"fuchsia",
},
[206064] = {
true,
false,
"deepskyblue",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[186116] = {
true,
false,
"DRUID",
},
[131850] = {
true,
false,
"fuchsia",
},
[134150] = {
true,
false,
"navajowhite",
},
[184582] = {
true,
false,
"deepskyblue",
},
[133432] = {
true,
false,
"gold",
},
[154020] = {
true,
false,
"deepskyblue",
},
[92610] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[43873] = {
true,
false,
"DRUID",
},
[40935] = {
true,
false,
"deepskyblue",
},
[114542] = {
true,
false,
"blue",
},
[192955] = {
true,
false,
"fuchsia",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[134144] = {
true,
false,
"lightgreen",
},
[96512] = {
true,
false,
"mediumpurple",
},
[129788] = {
true,
false,
"fuchsia",
},
[199233] = {
true,
false,
"mediumpurple",
},
[165076] = {
true,
false,
"blue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[84520] = {
true,
false,
"mediumpurple",
},
[178171] = {
true,
false,
"fuchsia",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[177808] = {
true,
false,
"mediumpurple",
},
[56792] = {
true,
false,
"fuchsia",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[167962] = {
true,
true,
"fuchsia",
},
[134331] = {
true,
false,
"gold",
},
[133436] = {
true,
false,
"gold",
},
[204918] = {
true,
false,
"fuchsia",
},
[59555] = {
true,
false,
"fuchsia",
},
[164510] = {
true,
false,
"fuchsia",
},
[186121] = {
true,
false,
"DRUID",
},
[184331] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[166301] = {
true,
false,
"fuchsia",
},
[180495] = {
true,
false,
"fuchsia",
},
[199037] = {
true,
false,
"deepskyblue",
},
[40936] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[139422] = {
true,
false,
"gold",
},
[40577] = {
true,
false,
"mediumpurple",
},
[180091] = {
true,
false,
"mediumpurple",
},
[165919] = {
true,
false,
"mediumpurple",
},
[131585] = {
true,
false,
"blue",
},
[195842] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[104251] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[45572] = {
true,
false,
"fuchsia",
},
[186220] = {
true,
false,
"deepskyblue",
},
[101438] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[189901] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[127111] = {
true,
false,
"deepskyblue",
},
[45924] = {
true,
false,
"MAGE",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[167967] = {
true,
false,
"blue",
},
[100991] = {
true,
false,
"fuchsia",
},
[129699] = {
true,
false,
"DRUID",
},
[98370] = {
true,
false,
"fuchsia",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[198997] = {
true,
false,
"mediumpurple",
},
[193799] = {
true,
false,
"fuchsia",
},
[177817] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[83026] = {
true,
false,
"mediumpurple",
},
[171805] = {
true,
false,
"blue",
},
[98691] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"fuchsia",
},
[207969] = {
true,
false,
"fuchsia",
},
[114783] = {
true,
false,
"deepskyblue",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[174569] = {
false,
false,
"fuchsia",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[175576] = {
true,
false,
"fuchsia",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[125977] = {
true,
false,
"fuchsia",
},
[114804] = {
true,
false,
"blue",
},
[194315] = {
true,
false,
"mediumpurple",
},
[175517] = {
true,
false,
"blue",
},
[179010] = {
true,
false,
"deepskyblue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[187154] = {
true,
false,
"deepskyblue",
},
[192767] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[135365] = {
true,
false,
"mediumpurple",
},
[192781] = {
true,
false,
"MAGE",
},
[162038] = {
true,
false,
"mediumpurple",
},
[40633] = {
true,
false,
"deepskyblue",
},
[190407] = {
true,
false,
"deepskyblue",
},
[193293] = {
true,
false,
"mediumpurple",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[163882] = {
true,
false,
"mediumpurple",
},
[111563] = {
true,
false,
"blue",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[194816] = {
true,
false,
"mediumpurple",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[178142] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[168932] = {
true,
false,
"gold",
},
[178141] = {
true,
false,
"blue",
},
[115765] = {
true,
false,
"fuchsia",
},
[135240] = {
true,
false,
"blue",
},
[40788] = {
true,
false,
"mediumpurple",
},
[129529] = {
true,
false,
"fuchsia",
},
[130488] = {
true,
false,
"lightsalmon",
},
[156212] = {
true,
false,
"deepskyblue",
},
[190404] = {
true,
false,
"mediumpurple",
},
[168318] = {
true,
false,
"mediumpurple",
},
[184335] = {
true,
false,
"fuchsia",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[141284] = {
true,
false,
"gold",
},
[100485] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[133835] = {
true,
false,
"deepskyblue",
},
[199595] = {
true,
false,
"mediumpurple",
},
[189719] = {
true,
false,
"DRUID",
},
[164557] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[156245] = {
true,
false,
"mediumpurple",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[165805] = {
true,
false,
"mediumpurple",
},
[101637] = {
true,
false,
"mediumpurple",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[98696] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[141283] = {
true,
false,
"navajowhite",
},
[100486] = {
true,
false,
"fuchsia",
},
[192788] = {
true,
false,
"fuchsia",
},
[59546] = {
true,
false,
"deepskyblue",
},
[115640] = {
true,
false,
"fuchsia",
},
[102788] = {
true,
false,
"mediumpurple",
},
[169927] = {
true,
false,
"fuchsia",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[76446] = {
true,
false,
"blue",
},
[162099] = {
true,
false,
"fuchsia",
},
[87252] = {
true,
false,
"mediumpurple",
},
[131666] = {
true,
false,
"deepskyblue",
},
[155221] = {
true,
false,
"deepskyblue",
},
[134990] = {
true,
false,
"honeydew",
},
[138187] = {
true,
false,
"deepskyblue",
},
[41139] = {
true,
false,
"aqua",
},
[131436] = {
true,
false,
"mediumpurple",
},
[197905] = {
true,
false,
"deepskyblue",
},
[169159] = {
true,
false,
"gold",
},
[96587] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[189235] = {
true,
false,
"fuchsia",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[136934] = {
true,
false,
"navajowhite",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[201790] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[82597] = {
true,
false,
"fuchsia",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[177891] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[190174] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[163128] = {
true,
false,
"deepskyblue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[129517] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[171184] = {
true,
false,
"mediumpurple",
},
[198933] = {
true,
false,
"mediumpurple",
},
[162763] = {
true,
true,
"fuchsia",
},
[186658] = {
true,
false,
"deepskyblue",
},
[81820] = {
true,
false,
"fuchsia",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[189727] = {
true,
false,
"DRUID",
},
[192796] = {
true,
false,
"fuchsia",
},
[137511] = {
true,
false,
"navajowhite",
},
[176573] = {
true,
false,
"fuchsia",
},
[86547] = {
true,
false,
"blue",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[200126] = {
true,
false,
"fuchsia",
},
[186124] = {
true,
false,
"deepskyblue",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[170690] = {
true,
false,
"blue",
},
[189729] = {
true,
false,
"DRUID",
},
[167607] = {
true,
false,
"mediumpurple",
},
[156226] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"blue",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[59552] = {
true,
false,
"fuchsia",
},
[133593] = {
true,
false,
"honeydew",
},
[167964] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[190370] = {
true,
false,
"deepskyblue",
},
[157634] = {
true,
false,
"blue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[199717] = {
true,
false,
"mediumpurple",
},
[192800] = {
true,
false,
"blue",
},
[167876] = {
true,
false,
"fuchsia",
},
[129366] = {
true,
false,
"goldenrod",
},
[81819] = {
true,
false,
"deepskyblue",
},
[127799] = {
true,
false,
"blue",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[131849] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[131677] = {
true,
false,
"deepskyblue",
},
[186664] = {
true,
false,
"deepskyblue",
},
[184107] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"blue",
},
[166971] = {
true,
false,
"fuchsia",
},
[190381] = {
true,
false,
"fuchsia",
},
[152905] = {
true,
false,
"fuchsia",
},
[180015] = {
true,
false,
"blue",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[128434] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[189478] = {
true,
false,
"mediumpurple",
},
[134364] = {
true,
false,
"honeydew",
},
[166589] = {
true,
false,
"fuchsia",
},
[206230] = {
true,
false,
"fuchsia",
},
[84957] = {
true,
false,
"fuchsia",
},
[163520] = {
true,
false,
"mediumpurple",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[113537] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[198047] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[167998] = {
true,
false,
"mediumpurple",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[205337] = {
true,
false,
"fuchsia",
},
[194469] = {
true,
false,
"blue",
},
[101326] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
false,
"blue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[45932] = {
true,
false,
"fuchsia",
},
[135007] = {
true,
false,
"gold",
},
[190377] = {
true,
false,
"fuchsia",
},
[135263] = {
true,
false,
"maroon",
},
[133345] = {
true,
false,
"goldenrod",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[114626] = {
true,
false,
"fuchsia",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[205212] = {
true,
false,
"fuchsia",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[168384] = {
true,
false,
"blue",
},
[188244] = {
true,
false,
"mediumpurple",
},
[131812] = {
true,
false,
"fuchsia",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[98706] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[169905] = {
true,
false,
"blue",
},
[131685] = {
true,
false,
"deepskyblue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[186284] = {
true,
false,
"mediumpurple",
},
[177716] = {
true,
false,
"deepskyblue",
},
[150168] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[180070] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[196263] = {
true,
false,
"deepskyblue",
},
[167612] = {
true,
false,
"blue",
},
[95766] = {
true,
false,
"blue",
},
[164926] = {
true,
false,
"fuchsia",
},
[197406] = {
true,
false,
"fuchsia",
},
[115395] = {
true,
false,
"mediumpurple",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[104270] = {
true,
false,
"mediumpurple",
},
[80805] = {
true,
false,
"mediumpurple",
},
[195927] = {
true,
false,
"mediumpurple",
},
[205727] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[138465] = {
true,
false,
"lightcoral",
},
[98275] = {
true,
false,
"fuchsia",
},
[134629] = {
true,
false,
"navajowhite",
},
[188703] = {
true,
false,
"yellow",
},
[198311] = {
true,
false,
"mediumpurple",
},
[130485] = {
true,
false,
"peru",
},
[152898] = {
true,
false,
"fuchsia",
},
[150142] = {
true,
false,
"deepskyblue",
},
[175550] = {
true,
false,
"fuchsia",
},
[184023] = {
true,
false,
"blue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[99358] = {
true,
false,
"deepskyblue",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[187315] = {
true,
false,
"blue",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[168882] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[45919] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[137830] = {
true,
false,
"deepskyblue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176959] = {
true,
false,
"deepskyblue",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[167113] = {
true,
false,
"blue",
},
[133482] = {
true,
false,
"maroon",
},
[59553] = {
true,
false,
"mediumpurple",
},
[156244] = {
true,
false,
"mediumpurple",
},
[96664] = {
true,
false,
"blue",
},
[196115] = {
true,
false,
"fuchsia",
},
[95769] = {
true,
false,
"fuchsia",
},
[168109] = {
true,
false,
"deepskyblue",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"blue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[81432] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[134284] = {
true,
false,
"deepskyblue",
},
[114266] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[187192] = {
true,
false,
"mediumpurple",
},
[141285] = {
true,
false,
"lightgreen",
},
[95834] = {
true,
false,
"fuchsia",
},
[45935] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[114632] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"deepskyblue",
},
[192481] = {
true,
false,
"fuchsia",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[133870] = {
true,
false,
"fuchsia",
},
[184125] = {
true,
false,
"DRUID",
},
[95771] = {
true,
false,
"deepskyblue",
},
[155824] = {
true,
false,
"blue",
},
[151773] = {
true,
false,
"blue",
},
[189706] = {
true,
false,
"yellow",
},
[190405] = {
true,
false,
"mediumpurple",
},
[104275] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[168310] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[195930] = {
true,
false,
"mediumpurple",
},
[127879] = {
true,
false,
"blue",
},
[162691] = {
true,
false,
"fuchsia",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[164563] = {
true,
false,
"blue",
},
[151325] = {
true,
false,
"fuchsia",
},
[134418] = {
true,
false,
"deepskyblue",
},
[179269] = {
true,
false,
"fuchsia",
},
[206070] = {
true,
false,
"mediumpurple",
},
[171341] = {
true,
false,
"deepskyblue",
},
[178630] = {
true,
false,
"deepskyblue",
},
[171799] = {
true,
false,
"fuchsia",
},
[136249] = {
true,
false,
"plum",
},
[206065] = {
true,
false,
"fuchsia",
},
[194487] = {
true,
false,
"deepskyblue",
},
[195399] = {
true,
false,
"fuchsia",
},
[98970] = {
true,
false,
"mediumpurple",
},
[134514] = {
true,
false,
"lightgreen",
},
[204206] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"mediumpurple",
},
[126847] = {
true,
false,
"DRUID",
},
[179852] = {
true,
false,
"blue",
},
[100539] = {
true,
false,
"blue",
},
[118489] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[191164] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[84554] = {
true,
false,
"fuchsia",
},
[190207] = {
true,
false,
"fuchsia",
},
[114316] = {
true,
false,
"deepskyblue",
},
[75506] = {
true,
false,
"deepskyblue",
},
[137713] = {
true,
false,
"paleturquoise",
},
[104278] = {
true,
false,
"fuchsia",
},
[164567] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[184580] = {
true,
false,
"blue",
},
[179847] = {
true,
false,
"fuchsia",
},
[137458] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[122968] = {
true,
false,
"mediumpurple",
},
[187969] = {
true,
false,
"deepskyblue",
},
[98280] = {
true,
false,
"blue",
},
[189555] = {
true,
false,
"blue",
},
[150165] = {
true,
false,
"deepskyblue",
},
[134012] = {
true,
false,
"lightsalmon",
},
[114317] = {
true,
false,
"deepskyblue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[169428] = {
true,
false,
"gold",
},
[165137] = {
true,
false,
"mediumpurple",
},
[97197] = {
true,
false,
"deepskyblue",
},
[212778] = {
true,
false,
"fuchsia",
},
[83893] = {
true,
false,
"deepskyblue",
},
[122965] = {
true,
false,
"mediumpurple",
},
[183495] = {
true,
false,
"mediumpurple",
},
[187897] = {
true,
false,
"mediumpurple",
},
[169429] = {
true,
false,
"gold",
},
[169861] = {
true,
false,
"blue",
},
[190034] = {
true,
false,
"mediumpurple",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[86526] = {
true,
false,
"blue",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[196576] = {
true,
false,
"fuchsia",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[170480] = {
true,
false,
"mediumpurple",
},
[183497] = {
true,
false,
"blue",
},
[111068] = {
true,
false,
"mediumpurple",
},
[199124] = {
true,
false,
"deepskyblue",
},
[183033] = {
true,
false,
"mediumpurple",
},
[185032] = {
true,
false,
"mediumpurple",
},
[98792] = {
true,
false,
"deepskyblue",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[115406] = {
true,
false,
"deepskyblue",
},
[126919] = {
true,
false,
"blue",
},
[195135] = {
true,
false,
"fuchsia",
},
[80816] = {
true,
false,
"deepskyblue",
},
[200137] = {
true,
false,
"deepskyblue",
},
},
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Name"] = "Icon Padding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Name"] = "Texture Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Color Automation [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1705067856,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["HooksTemp"] = {
},
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Players Targeting a Target [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Name"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1703731894,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 290,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "@scriptname Options:",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Name"] = "Ants Amount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Name"] = "Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Name"] = "Ants length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Name"] = "Ants Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "antsBorder",
["Value"] = false,
["Name"] = "Ants Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outerGlow",
["Value"] = false,
["Name"] = "Outer Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["semver"] = "1.0.6",
["HooksTemp"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Scorch",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Name"] = "M+ Colouring",
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Mythic+ Colours:",
["Name"] = "Colors Header",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Name"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Name"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Key"] = "FMobs",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Focus Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Key"] = "DMobs",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Deadly Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Key"] = "DoMobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Name"] = "Dodge Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Key"] = "HMobs",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Healer Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Key"] = "IMobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Name"] = "Interruptable Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Key"] = "EnMobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Name"] = "Enrage Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Key"] = "ExMobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Name"] = "Expolsives Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Key"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Name"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Name"] = "Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option9",
["Value"] = 0,
["Name"] = "Option 9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option22",
["Value"] = "Addictional Options",
["Name"] = "Addictional Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "targetEnabled",
["Value"] = false,
["Name"] = "Use Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "raidMarkColors",
["Value"] = true,
["Name"] = "Raid Mark Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "colorHealthbar",
["Value"] = false,
["Name"] = "Color Healthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "threatColors",
["Value"] = false,
["Name"] = "ThreatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Key"] = "UseDefaultColor",
["Value"] = true,
["Name"] = "Use Default Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703700395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 485,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "readyColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Kick Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Key"] = "semiCooldownColor",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Name"] = "Kick Will Be Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Key"] = "cooldownColor",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Name"] = "Kick Will NOT Be Ready",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Key"] = "cooldownTolerance",
["Value"] = 500,
["Name"] = "Kick CD Tolerance (ms)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "protectedColor",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Name"] = "Protected Cast Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Key"] = "interruptedColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Interrupted Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Key"] = "cooldownLine",
["Value"] = true,
["Name"] = "Castbar CD Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["Name"] = "Interrupt CD Indicator",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Key"] = "setColor",
["Value"] = true,
["Name"] = "Set Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Key"] = "setNameColor",
["Value"] = false,
["Name"] = "Set Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Key"] = "setBorderColor",
["Value"] = false,
["Name"] = "Set Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Key"] = "vyColor",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Name"] = "Vy Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhColor",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Name"] = "Urh Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woColor",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Name"] = "Wo Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "pog",
["Value"] = 0,
["Name"] = "Divider",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setName",
["Value"] = true,
["Name"] = "Set Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Key"] = "vyName",
["Value"] = "Vy (Haste)",
["Name"] = "Vy Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "urhName",
["Value"] = "Urh (CDR)",
["Name"] = "Urh Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "woName",
["Value"] = "Wo (Stealth)",
["Name"] = "Wo Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setHeight",
["Value"] = false,
["Name"] = "Set Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "barHeight",
["Value"] = 20,
["Name"] = "Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setFontSize",
["Value"] = false,
["Name"] = "Set Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "fontSize",
["Value"] = 20,
["Name"] = "Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setTexture",
["Value"] = false,
["Name"] = "Set Bar Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Key"] = "barWarning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Name"] = "Bar Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setBackgroundColor",
["Value"] = false,
["Name"] = "Set Bar Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Key"] = "vyBGColor",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Name"] = "Vy Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhBGColor",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Name"] = "Urh Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woBGColor",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Name"] = "Wo Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "reloadWarning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Name"] = "Reload Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["Name"] = "Encrypted Names & Colors",
["LastHookEdited"] = "",
["semver"] = "1.0.7",
},
{
["OptionsValues"] = {
["color"] = {
0.6274510025978088,
1,
0.7568628191947937,
1,
},
["wrap"] = true,
["size"] = 2.449691534042358,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1704186652,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 338,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["version"] = 1,
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Border",
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Name"] = "size",
["Value"] = 2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "size",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "wrap",
["Value"] = true,
["Name"] = "Wrap border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
},
},
["disable_omnicc_on_auras"] = true,
["aura_width"] = 22,
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["range_check_enabled"] = false,
["quick_hide"] = true,
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Fixate On You"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Glowing [P]"] = 10,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Quick Flash"] = 2,
["Fixate"] = 11,
["Cast - Important Target [P]"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Cast - AoE With Range [P]"] = 2,
["Cast - Voidzone [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Very Important"] = 15,
["Add - Warning [P]"] = 5,
["Aura is Shield [P]"] = 5,
["Cast - Debuff [P]"] = 2,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Heal Cut [P]"] = 3,
["Auto Set Skull"] = 11,
["Spiteful Affix"] = 3,
["Aura - Buff Alert"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Countdown"] = 11,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Add - Explode on Die [P]"] = 1,
["Unit - Important"] = 11,
["Cast - Shining Green [P]"] = 3,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["click_space"] = {
125,
},
["castbar_target_font"] = "PT Sans Narrow",
["ui_parent_cast_level"] = 108,
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["target_shady_enabled"] = false,
["indicator_raidmark_scale"] = 0.99999994039536,
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["first_run3"] = true,
["health_selection_overlay_color"] = {
0.3450980484485626,
0.3843137621879578,
0.3921568989753723,
},
["ui_parent_scale_tune"] = 1.4099998474121,
["profile_name"] = "Default",
["health_statusbar_bgtexture"] = "Clean",
["ui_parent_target_strata"] = "MEDIUM",
["aura_show_enrage"] = true,
["global_offset_x"] = -0.6000003814697266,
["aura_tracker"] = {
["buff_tracked"] = {
["209859"] = true,
},
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["12486"] = false,
["236299"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
},
},
["castbar_target_show"] = true,
["update_throttle"] = 0.1499999910593033,
["tocversion"] = 100205,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["not_affecting_combat_alpha"] = 1,
["target_shady_alpha"] = 0.3199999928474426,
["target_highlight_height"] = 22,
["aggro_can_check_notank"] = true,
["version"] = 1,
["target_shady_combat_only"] = false,
["patch_version"] = 37,
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["number_region_first_run"] = true,
["hide_blizzard_castbar"] = true,
["health_animation_time_dilatation"] = 2.6199998855591,
["border_color"] = {
nil,
nil,
nil,
1,
},
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802696,
["__TrashAt"] = 1725103300,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Enabled"] = true,
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["version"] = -1,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802924,
["__TrashAt"] = 1725103300,
["url"] = "",
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = 610472,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["Options"] = {
},
["Enabled"] = true,
["Prio"] = 99,
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["__TrashAt"] = 1725103300,
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
},
["pet_width_scale"] = 0.8499999642372131,
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
0.960784375667572,
0.501960813999176,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
},
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["aura_alpha"] = 0.84999996423721,
["range_check_alpha_friendlies"] = 1,
["tank"] = {
["colors"] = {
["pulling_from_tank"] = {
0.5254902243614197,
0,
1,
},
["anothertank"] = {
0,
0.8901961445808411,
},
["aggro"] = {
0.1568627506494522,
0.1764705926179886,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["noaggro"] = {
[3] = 0.062745101749897,
},
["pulling"] = {
nil,
0.7843137979507446,
},
},
},
},
["Default"] = {
["target_highlight"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802706,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["Revision"] = 633,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["Name"] = "Aura - Buff Alert [Plater]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 188,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Time to Die",
["Value"] = "Time to Die",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Name"] = "Width",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "bgWidth",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Key"] = "bgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Name"] = "Text Size",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textSize",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Targeting",
["Value"] = "Targeting",
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 11",
["Value"] = 0,
["Key"] = "option11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["semver"] = "",
["NpcNames"] = {
"174773",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = false,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1688802707,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["Revision"] = 369,
["semver"] = "",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["Author"] = "Tercioo-Sylvanas",
["version"] = -1,
["Desc"] = "Add the debuff name in the trigger box.",
["Name"] = "Aura - Debuff Alert [Plater]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = false,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a special animation showing the explosion time.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Name"] = "Health Bar Height Mod",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowAlpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Key"] = "arrowWidth",
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Name"] = "Arrow Height",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowHeight",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Color List by SpellId",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Name"] = "Shake Amplitude",
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = false,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Only in Combat",
["Value"] = false,
["Key"] = "onlyInCombat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Auto set skull marker",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802694,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Revision"] = 210,
["Options"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Countdown",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
["Time"] = 1719788095,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 754,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
["SpellIds"] = {
431494,
426860,
448213,
434407,
439789,
434824,
453161,
435012,
439506,
443500,
434779,
451543,
439621,
441384,
441381,
447395,
456711,
448105,
323137,
321968,
331718,
331721,
325223,
340160,
321834,
320596,
324323,
333488,
323496,
333477,
256627,
257292,
454438,
269029,
257862,
425027,
449130,
428202,
448640,
427869,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
{
["Type"] = 6,
["Key"] = "option8",
["Value"] = 0,
["Name"] = "Option 8",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bChangeSpellName",
["Value"] = true,
["Name"] = "Change Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the spell name to the text entered below",
},
{
["Type"] = 3,
["Key"] = "spellNameText",
["Value"] = "Frontal",
["Name"] = "New Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "The customized spell name",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1688802690,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 271,
["Options"] = {
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Desc"] = "Show above the nameplate who is the player fixated",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802689,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 235,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "script desc",
["Value"] = "Show the power of the unit above the nameplate.",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show at 80% of Energy",
["Value"] = true,
["Key"] = "showLater",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 1,
["Name"] = "Font Color",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Key"] = "fontColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Name"] = "Enable Text Outline",
["Value"] = true,
["Key"] = "outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show the energy amount above the nameplate.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1688802691,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 268,
["semver"] = "",
["Enabled"] = true,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Author"] = "Tecno-Azralon",
["Prio"] = 99,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["Options"] = {
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["url"] = "https://wago.io/1TlaFYtDO/75",
["Icon"] = 2065634,
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Revision"] = 2918,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "ShowArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Arrow Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "ArrowAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Glow Alpha",
["Value"] = 0.7,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "GlowAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Nameplate Height Scale",
["Value"] = 1.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "NameplateSizeOffset",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Bombad£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["SpellIds"] = {
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["version"] = 75,
["PlaterCore"] = 1,
["Name"] = "M+ Explosive [Fixed]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["semver"] = "1.0.74",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Revision"] = 283,
["Options"] = {
{
["Type"] = 7,
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Value"] = {
{
"17",
"120, 16",
},
},
["Key"] = "customSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Width",
["Value"] = 120,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Name"] = "Cast Bar Height",
["Value"] = 16,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "height",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Name"] = "Cast Timer Size",
["Value"] = 12,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timerFontSize",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 7",
["Value"] = "Time Separators",
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Key"] = "separatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Width",
["Value"] = 1,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "separatorWidth",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["SpellIds"] = {
354080,
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Castbar is Timer [P]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Shows the target name in a separate box",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Frame Height",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameHeight",
},
},
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1688802705,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 379,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Blink Enabled",
["Value"] = true,
["Key"] = "blinkEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = true,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Name"] = "Change NamePlate Color",
["Value"] = false,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Name"] = "Timeleft to Blink",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeleftToBlink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Name"] = "Blink Speed",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkSpeed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Name"] = "Blink Max Alpha",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "blinkMaxAlpha",
},
{
["Type"] = 1,
["Name"] = "Blink Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "blinkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Timer Color Enabled",
["Value"] = true,
["Key"] = "timerColorEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftWarning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "timeLeftCritical",
},
{
["Type"] = 1,
["Name"] = "Warning Color",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Key"] = "warningColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Name"] = "Critical Color",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Key"] = "criticalColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Prio"] = 99,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["SpellIds"] = {
},
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["semver"] = "",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = false,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1688802692,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "Option 18",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Nameplate Color",
["Value"] = "Nameplate Color",
["Key"] = "option17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["Icon"] = 2175503,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 534,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Name"] = "Explosion Affix M+ [Plater]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = false,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1719452142,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 156,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["NpcNames"] = {
"214840",
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1705066622,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "changeNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Key"] = "dotsColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Extra Texture",
["Value"] = "Extra Texture",
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Key"] = "skullColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Name"] = "Alpha",
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Key"] = "skullScale",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["Revision"] = 575,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Name"] = "Add - Important [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = false,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Name"] = "Cast Color by SpellID",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Key"] = "castColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = false,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Key"] = "shakeAmplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1725033998,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 83,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["SpellIds"] = {
343470,
423228,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
["npcColor"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1705066619,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = true,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["Revision"] = 165,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["Name"] = "Add - Warning [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1688802707,
["Options"] = {
},
["url"] = "",
["Icon"] = 236209,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["Revision"] = 20,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["Name"] = "Aura While Casting [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1705067832,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Key"] = "scale",
["Value"] = 0.8,
["Name"] = "Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["Revision"] = 116,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "Add - Non Elite Trash [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = false,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Name"] = "Rotation Duration",
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Start Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Name"] = "Texture Scale",
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Name"] = "Amount of Segments",
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1688802690,
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 34,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Name"] = "Fixate by Unit Buff [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Enabled"] = true,
["NpcNames"] = {
},
["url"] = "",
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1705066826,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Reverse Health Bar",
["Value"] = false,
["Key"] = "useReverse",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Enable Shake",
["Value"] = false,
["Key"] = "useShake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Name"] = "Shake Amplitude",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 70,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Red Background",
["Value"] = true,
["Key"] = "useBackground",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["Revision"] = 110,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["Name"] = "Add - Explode on Die [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["Enabled"] = true,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
["Time"] = 1719711112,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
["Enabled"] = true,
["Revision"] = 831,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["SpellIds"] = {
432967,
446717,
451379,
451067,
448013,
448057,
322486,
341709,
321226,
429428,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation changing the cast bar color.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "To get a list of color names, use: /plater colors",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 6,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["version"] = -1,
["Name"] = "Cast - Important by Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711125,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
["Enabled"] = true,
["Revision"] = 873,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
["SpellIds"] = {
434802,
448248,
453840,
337249,
324293,
49184,
449455,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a big animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Flash",
["Value"] = "Flash:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Key"] = "flashDuration",
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Key"] = "shakeAmplitude",
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation",
["Value"] = "Dot Animation:",
["Key"] = "option14",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 19",
["Value"] = "Cast Bar",
["Key"] = "option19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["version"] = -1,
["Name"] = "Cast - Shining Green [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1719788204,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
["Enabled"] = true,
["Revision"] = 613,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["SpellIds"] = {
451026,
452127,
446615,
433766,
432117,
448560,
440218,
441289,
447146,
438860,
448847,
449687,
456751,
449939,
336499,
322550,
320208,
321894,
276068,
423200,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Arrow Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Special Ability [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1724073562,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 139,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["SpellIds"] = {
447141,
432967,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["Name"] = "Cast - Heroic Leap [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1719711134,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
["Enabled"] = true,
["Revision"] = 75,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Change the spark color to differentiate a cast from another.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
["SpellIds"] = {
453140,
456713,
450088,
322614,
323730,
257348,
272422,
429427,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "In the box at right, add the spell id and the color.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "To get a list of colors, use: /plater colors",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Spark Width Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "sparkWithScale",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "Spark Scale",
["Min"] = 1,
["Name"] = "Spark Height Scale",
["Value"] = 1,
["Key"] = "sparkHeightScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Key"] = "sparkColor",
["Value"] = {
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Spark Color [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719679972,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 551,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Healing effect that cannot be interrupted.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432520,
320822,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Heal Stun [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719757483,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
["Enabled"] = true,
["Revision"] = 318,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
["SpellIds"] = {
451102,
426787,
448888,
439811,
434796,
434793,
438879,
438473,
434252,
434829,
440468,
436205,
436246,
441395,
437533,
451965,
456902,
456900,
451996,
451939,
450077,
450079,
324909,
324922,
460092,
272711,
269266,
425974,
424879,
426771,
426786,
423324,
428879,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "How much time takes for one revolution.",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.2,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.05,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.9,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.6392157077789307,
0.6392157077789307,
0.6392157077789307,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE Hit All [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1719694337,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
["Enabled"] = true,
["Revision"] = 741,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
432448,
431309,
451107,
451119,
438618,
436322,
443507,
443436,
439341,
447261,
449444,
451224,
451241,
450095,
451612,
451395,
324987,
327393,
256709,
268230,
275836,
426308,
449153,
427461,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Name"] = "Spark Color",
["Value"] = {
0.9686275124549866,
0.9764706492424011,
1,
1,
},
["Key"] = "sparkColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Trail Color",
["Value"] = {
0.4901961088180542,
0,
0.5490196347236633,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Debuff [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719711128,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 958,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
431333,
442210,
443430,
443433,
451871,
76711,
334748,
334749,
328667,
338353,
445207,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["version"] = -1,
["Name"] = "Cast - Simple Interrupt [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
["Time"] = 1723155144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 158,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["SpellIds"] = {
431364,
423327,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Name"] = "Dots Y Offset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Key"] = "speed",
["Value"] = 0.4,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "minAlpha",
["Value"] = 0,
["Name"] = "Blink Min Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["Name"] = "Cast - Ongoing Cast [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1722866303,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1254,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450756,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
451097,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["version"] = -1,
["Name"] = "Cast - Heal Cut [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1720031975,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
["Enabled"] = true,
["Revision"] = 220,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
450784,
451423,
445813,
445838,
438658,
433845,
456696,
451391,
324923,
323138,
340189,
326021,
320571,
321780,
345623,
333479,
334476,
320772,
257882,
424903,
426345,
422233,
445541,
428703,
439559,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["version"] = -1,
["Name"] = "Cast - Voidzone [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719758013,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 281,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["SpellIds"] = {
453212,
451098,
427001,
438622,
446086,
447271,
437700,
439646,
448877,
451387,
331743,
320637,
327240,
257170,
257326,
257169,
423538,
428508,
428520,
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Key"] = "rotationDuration",
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Key"] = "animStartDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Name"] = "Texture Start Alpha",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureStartAlpha",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Key"] = "textureScale",
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 0.8,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
0.7411764860153198,
0.7411764860153198,
0.7411764860153198,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["version"] = -1,
["Name"] = "Cast - AoE With Range [P]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719788550,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
["Enabled"] = true,
["Revision"] = 27,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show a castbar for the aura duration.",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
["SpellIds"] = {
438494,
335141,
},
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["Name"] = "Aura - Is Cast Bar [P]",
["NpcNames"] = {
},
},
},
["show_healthbars_on_not_attackable"] = true,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4244: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4245: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6046: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6044>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:811: in function <Interface/AddOns/Details/Libs/DF/slider.lua:762>\n",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:213",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:6063: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:6061>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/mixins.lua\"]:372: in function `RunHooksForWidget'\n[string \"@Interface/AddOns/Details/Libs/DF/slider.lua\"]:749: in function <Interface/AddOns/Details/Libs/DF/slider.lua:713>\n",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:213",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4246: in function `ForceCVars'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:4242: in function <Interface/AddOns/Plater/Plater.lua:4242>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua\"]:72: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:187: in function `SetValueInternal'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/AddOns/Blizzard_Settings_Shared/Blizzard_Settings.lua\"]:229: in function `SetValue'\n[string \"FRIENDNAMEPLATES\"]:3: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["health_selection_overlay_color"] = {
0.3450980484485626,
0.3843137621879578,
0.3921568989753723,
},
["transparency_behavior"] = 4,
["spell_animations"] = false,
["hover_highlight_alpha"] = 0.2999999821186066,
["target_shady_enabled"] = false,
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_statusbar_bgtexture"] = "Clean",
["plate_config"] = {
["global_health_height"] = 13,
["friendlyplayer"] = {
["cast"] = {
121,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["show_guild_name"] = true,
["cast_incombat"] = {
121,
},
["actorname_use_class_color"] = true,
["only_thename"] = true,
},
["friendlynpc"] = {
["cast"] = {
121,
},
["big_actorname_text_size"] = 10,
["health"] = {
121,
13,
},
["health_incombat"] = {
121,
17,
},
["cast_incombat"] = {
121,
},
["actorname_text_size"] = 17,
["actorname_text_spacing"] = 16,
["enabled"] = false,
},
["global_health_width"] = 121,
["enemyplayer"] = {
["actorname_text_font"] = "PT Sans Narrow",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 8,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
121,
},
["all_names"] = true,
["big_actortitle_text_size"] = 10,
["actorname_text_outline"] = "OUTLINE",
["percent_text_size"] = 10,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
121,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_size"] = 11,
["quest_color_enabled"] = true,
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["quest_enabled"] = true,
["big_actorname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "PT Sans Narrow",
},
["enemynpc"] = {
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["castbar_offset"] = -0.2400054931640625,
["spellpercent_text_font"] = "Bebas Neue Cyrillic Regular",
["actorname_text_size"] = 10,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
124,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_outline"] = "OUTLINE",
["level_text_alpha"] = 0,
["percent_text_size"] = 10,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "Bebas Neue Cyrillic Regular",
["cast_incombat"] = {
124,
10,
},
["actorname_text_anchor"] = {
["y"] = 0.5799942016601562,
["x"] = -3.75,
["side"] = 1,
},
["health_incombat"] = {
121,
13,
},
["health"] = {
121,
13,
},
["spellname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["percent_text_anchor"] = {
["y"] = -0.2400054931640625,
["x"] = 0.8799972534179688,
["side"] = 11,
},
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "Bebas Neue Cyrillic Regular",
},
},
["health_selection_overlay"] = "Details Vidro",
["aura_y_offset"] = 5,
["use_ui_parent"] = true,
["global_offset_x"] = -0.6000003814697266,
["health_statusbar_texture"] = "You Are the Best!",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Combo Points"] = 6,
["Cast Bar Icon Config"] = 2,
["Attacking Specific Unit"] = 2,
["Extra Border"] = 2,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Execute Range"] = 1,
},
["expansion_triggerwipe"] = {
[9] = true,
[10] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["update_throttle"] = 0.1499999910593033,
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["resources_settings"] = {
["chr"] = {
["Player-3209-0B4EDE3D"] = "HolyPower",
["Player-3682-0B236980"] = "ArcaneCharges",
["Player-1597-0F7AB124"] = "ArcaneCharges",
["Player-3682-0B241018"] = "Essence",
["Player-1403-0A1C79B6"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B20292A"] = "HolyPower",
["Player-3209-0B2C0A65"] = "Chi",
["Player-1403-0A6909FE"] = "ComboPoints",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-1597-0F88EA0A"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3682-0B310D76"] = "HolyPower",
["Player-3682-0B2A13DE"] = "ComboPoints",
["Player-3682-0B155119"] = "SoulShards",
["Player-1403-0A70E106"] = "ComboPoints",
["Player-1303-0CF9BE7C"] = "ComboPoints",
},
},
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[69134] = {
"Kazra'jin",
"Throne of Thunder",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[169421] = {
"Felguard",
"Brackenhide Hollow",
"enUS",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
"enUS",
},
[59467] = {
"Candlestick Mage",
"Scholomance",
"enUS",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
"enUS",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[99200] = {
"Dresaron",
"Darkheart Thicket",
"enUS",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[70798] = {
"Kor'kron Emberguard",
"The Secrets of Ragefire",
"enUS",
},
[60043] = {
"Jade Guardian",
"Mogu'shan Vaults",
"enUS",
},
[22897] = {
"Summoned Windfury Totem",
"Black Temple",
"enUS",
},
[22929] = {
"Greater Shadowfiend",
"Black Temple",
"enUS",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
"enUS",
},
[133345] = {
"Feckless Assistant",
"The MOTHERLODE!!",
},
[164562] = {
"Depraved Houndmaster",
"Halls of Atonement",
},
[56589] = {
"Striker Ga'dok",
"Gate of the Setting Sun",
"enUS",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[56717] = {
"Hoptallus",
"Stormstout Brewery",
"enUS",
},
[164563] = {
"Vicious Gargon",
"Halls of Atonement",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
"enUS",
},
[169425] = {
"Felhound",
"Brackenhide Hollow",
"enUS",
},
[61387] = {
"Quilen Guardian",
"Mogu'shan Palace",
"enUS",
},
[73742] = {
"Thresher Turret",
"Siege of Orgrimmar",
"enUS",
},
[19507] = {
"Sunseeker Gene-Splicer",
"Tempest Keep: The Botanica",
"enUS",
},
[18419] = {
"Bloodwarder Greenkeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[168658] = {
"Forsworn Devastator",
"Spires of Ascension",
},
[61707] = {
"Abomination of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[165076] = {
"Gluttonous Tick",
"Sanguine Depths",
},
[169426] = {
"Infernal",
"Brackenhide Hollow",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
"enUS",
},
[219066] = {
"Afflicted Civilian",
"The Rookery",
"enUS",
},
[180429] = {
"Adorned Starseer",
"Tazavesh, the Veiled Market",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[70544] = {
"Hekima the Wise",
"Blood in the Snow",
"enUS",
},
[59915] = {
"Jasper Guardian",
"Mogu'shan Vaults",
"enUS",
},
[64393] = {
"Night Terror",
"Terrace of Endless Spring",
"enUS",
},
[100991] = {
"Strangling Roots",
"Darkheart Thicket",
"enUS",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
"enUS",
},
[59980] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[56718] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[69905] = {
"Gurubashi Berserker",
"Throne of Thunder",
"enUS",
},
[98691] = {
"Risen Scout",
"Black Rook Hold",
"enUS",
},
[201668] = {
"Neltharion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[62795] = {
"Sik'thik Warden",
"Siege of Niuzao Temple",
"enUS",
},
[169428] = {
"Wrathguard",
"Brackenhide Hollow",
"enUS",
},
[208578] = {
"Wild Sproutling",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[69906] = {
"Zandalari High Priest",
"Throne of Thunder",
"enUS",
},
[151773] = {
"Junkyard D.0.G.",
"Operation: Mechagon",
"enUS",
},
[168396] = {
"Plaguebelcher",
"Plaguefall",
},
[164567] = {
"Ingra Maloch",
"Mists of Tirna Scithe",
},
[211904] = {
"Tainted Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[197831] = {
"Quarry Stonebreaker",
"Vault of the Incarnates",
"enUS",
},
[169429] = {
"Shivarra",
"Brackenhide Hollow",
},
[18420] = {
"Sunseeker Geomancer",
"Tempest Keep: The Botanica",
"enUS",
},
[141283] = {
"Kul Tiran Halberd",
"Siege of Boralus",
},
[209090] = {
"Tindral Sageswift",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
"enUS",
},
[213696] = {
"Molten Scorpid",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[131812] = {
"Heartsbane Soulcharmer",
"Waycrest Manor",
"enUS",
},
[169430] = {
"Ur'zul",
"Brackenhide Hollow",
},
[136934] = {
"Weapons Tester",
"The MOTHERLODE!!",
},
[141284] = {
"Kul Tiran Wavetender",
"Siege of Boralus",
},
[180433] = {
"Wandering Pulsar",
"Tazavesh, the Veiled Market",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
"enUS",
},
[62348] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[22962] = {
"Mistress of Woe",
"Black Temple",
"enUS",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
"enUS",
},
[65807] = {
"Overseer Lurguk",
"Theramore's Fall (A)",
"enUS",
},
[141285] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[56719] = {
"Sha of Violence",
"Shado-Pan Monastery",
"enUS",
},
[60621] = {
"Corrupted Waters",
"Terrace of Endless Spring",
"enUS",
},
[133852] = {
"Living Rot",
"The Underrot",
"enUS",
},
[98949] = {
"Smashspite the Hateful",
"Black Rook Hold",
"enUS",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
"enUS",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
"enUS",
},
[131819] = {
"Coven Diviner",
"Waycrest Manor",
"enUS",
},
[168153] = {
"Plagueroc",
"Plaguefall",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69012] = {
"Lesser Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[67093] = {
"Sik'thik Battle-Mender",
"Siege of Niuzao Temple",
"enUS",
},
[197835] = {
"Kaurdyth",
"Vault of the Incarnates",
"enUS",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
"enUS",
},
[61389] = {
"Kargesh Highguard",
"Mogu'shan Palace",
"enUS",
},
[61453] = {
"Mu'Shiba",
"Mogu'shan Palace",
"enUS",
},
[100485] = {
"Soul-torn Vanguard",
"Black Rook Hold",
"enUS",
},
[176598] = {
"Torment Golem",
"Torghast, Tower of the Damned",
"enUS",
},
[102788] = {
"Felspite Dominator",
"Black Rook Hold",
"enUS",
},
[129527] = {
"Bilge Rat Buccaneer",
"Freehold",
"enUS",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
"enUS",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69013] = {
"Diffused Lightning",
"Throne of Thunder",
"enUS",
},
[59982] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[131821] = {
"Faceless Maiden",
"Waycrest Manor",
"enUS",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[175576] = {
"Containment Cell",
"Tazavesh, the Veiled Market",
},
[58319] = {
"Lesser Sha",
"Pandaria",
"enUS",
},
[192464] = {
"Raging Ember",
"Neltharus",
"enUS",
},
[168156] = {
"Remornia",
"Castle Nathria",
},
[69909] = {
"Amani'shi Flame Chanter",
"Throne of Thunder",
"enUS",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
"enUS",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[212673] = {
"Naz'jar Ravager",
"Throne of the Tides",
"enUS",
},
[138465] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[58831] = {
"Bound Servant",
"Scholomance",
"enUS",
},
[44566] = {
"Ozumat",
"Throne of the Tides",
},
[63053] = {
"Garalon's Leg",
"Heart of Fear",
"enUS",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
"enUS",
},
[131823] = {
"Sister Malady",
"Waycrest Manor",
"enUS",
},
[133870] = {
"Diseased Lasher",
"The Underrot",
"enUS",
},
[18421] = {
"Sunseeker Researcher",
"Tempest Keep: The Botanica",
"enUS",
},
[73226] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[131824] = {
"Sister Solena",
"Waycrest Manor",
"enUS",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
"enUS",
},
[69910] = {
"Drakkari Frost Warden",
"Throne of Thunder",
"enUS",
},
[98696] = {
"Illysanna Ravencrest",
"Black Rook Hold",
"enUS",
},
[129529] = {
"Blacktooth Scrapper",
"Freehold",
"enUS",
},
[201934] = {
"Shadowflame Amalgamation",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[212681] = {
"Vicious Snap Dragon",
"Throne of the Tides",
"enUS",
},
[113537] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[60047] = {
"Amethyst Guardian",
"Mogu'shan Vaults",
"enUS",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
"enUS",
},
[145898] = {
"Anointed Disciple",
"Battle of Dazar'alor",
"enUS",
},
[131825] = {
"Sister Briar",
"Waycrest Manor",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[22963] = {
"Bonechewer Worker",
"Black Temple",
"enUS",
},
[137713] = {
"Big Money Crab",
"The MOTHERLODE!!",
"enUS",
},
[23216] = {
"Ashtongue Defender",
"Black Temple",
"enUS",
},
[178139] = {
"Murkbrine Shellcrusher",
"Tazavesh, the Veiled Market",
},
[133361] = {
"Wasting Servant",
"Waycrest Manor",
"enUS",
},
[69911] = {
"Zandalari Warlord",
"Throne of Thunder",
"enUS",
},
[164578] = {
"Stitchflesh's Creation",
"The Necrotic Wake",
},
[98813] = {
"Bloodscent Felhound",
"Black Rook Hold",
"enUS",
},
[68248] = {
"Corpse Spider",
"Throne of Thunder",
"enUS",
},
[150251] = {
"Pistonhead Mechanic",
"Operation: Mechagon",
"enUS",
},
[69899] = {
"Farraki Sand Conjurer",
"Throne of Thunder",
"enUS",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[200913] = {
"Thadrion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[137458] = {
"Rotting Spore",
"The Underrot",
"enUS",
},
[150250] = {
"Pistonhead Blaster",
"Operation: Mechagon",
"enUS",
},
[205265] = {
"Time-Displaced Trooper",
"Dawn of the Infinite",
"enUS",
},
[62543] = {
"Blade Lord Ta'yak",
"Heart of Fear",
"enUS",
},
[22960] = {
"Dragonmaw Wyrmcaller",
"Black Temple",
"enUS",
},
[207796] = {
"Burning Colossus",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[19509] = {
"Sunseeker Harvester",
"Tempest Keep: The Botanica",
"enUS",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[221896] = {
"Web General Ab'enar",
"Earthcrawl Mines",
"enUS",
},
[22896] = {
"Ashtongue Searing Totem",
"Black Temple",
"enUS",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
"enUS",
},
[168420] = {
"Forsworn Champion",
"Spires of Ascension",
},
[72728] = {
"Kor'kron Blood Axe",
"Siege of Orgrimmar",
"enUS",
},
[178142] = {
"Murkbrine Fishmancer",
"Tazavesh, the Veiled Market",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
"enUS",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
"enUS",
},
[69017] = {
"Primordius",
"Throne of Thunder",
"enUS",
},
[18422] = {
"Sunseeker Botanist",
"Tempest Keep: The Botanica",
"enUS",
},
[168934] = {
"Enraged Spirit",
"De Other Side",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[126845] = {
"Captain Jolly",
"Freehold",
"enUS",
},
[62983] = {
"Lei Shi",
"Terrace of Endless Spring",
"enUS",
},
[198869] = {
"Sundered Devastator",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[145903] = {
"Darkforged Crusader",
"Battle of Dazar'alor",
"enUS",
},
[150253] = {
"Weaponized Crawler",
"Operation: Mechagon",
"enUS",
},
[168932] = {
"Doomguard",
"Brackenhide Hollow",
},
[56658] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[129788] = {
"Irontide Bonesaw",
"Freehold",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
"enUS",
},
[198870] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[126847] = {
"Captain Raoul",
"Freehold",
"enUS",
},
[114804] = {
"Spectral Charger",
"Return to Karazhan",
},
[59153] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
"enUS",
},
[53140] = {
"Son of Flame",
"Firelands",
"enUS",
},
[61392] = {
"Harthak Flameseeker",
"Mogu'shan Palace",
"enUS",
},
[147440] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[198871] = {
"Sundered Scaleguard",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[190174] = {
"Hypnosis Bat",
"Operation: Mechagon",
},
[71433] = {
"Spark of Life",
"Siege of Orgrimmar",
"enUS",
},
[84499] = {
"Entanglement",
"The Everbloom",
"enUS",
},
[70683] = {
"Dark Shaman Xorenth",
"The Secrets of Ragefire",
"enUS",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
"enUS",
},
[72986] = {
"Shanna Sparkfizz",
"Siege of Orgrimmar",
"enUS",
},
[60051] = {
"Cobalt Guardian",
"Mogu'shan Vaults",
"enUS",
},
[198872] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[17975] = {
"High Botanist Freywinn",
"Tempest Keep: The Botanica",
"enUS",
},
[169924] = {
"Veteran Stoneguard",
"Castle Nathria",
},
[91007] = {
"Dargrul",
"Neltharion's Lair",
"enUS",
},
[22964] = {
"Priestess of Delight",
"Black Temple",
"enUS",
},
[72456] = {
"Korgra the Snake",
"Siege of Orgrimmar",
"enUS",
},
[23028] = {
"Bonechewer Taskmaster",
"Black Temple",
"enUS",
},
[200926] = {
"Igira the Cruel",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[198873] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[74009] = {
"Crawler Mine",
"Siege of Orgrimmar",
"enUS",
},
[70153] = {
"Fungal Growth",
"Throne of Thunder",
"enUS",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[82590] = {
"Grimrail Scout",
"Grimrail Depot",
"enUS",
},
[135167] = {
"Spectral Berserker",
"Kings' Rest",
},
[177892] = {
"Mawforged Goliath",
"Sanctum of Domination",
},
[58898] = {
"Vigilant Watchman",
"Scarlet Halls",
"enUS",
},
[198874] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[168425] = {
"Forsworn Annihilator",
"Spires of Ascension",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[131585] = {
"Enthralled Guard",
"Waycrest Manor",
"enUS",
},
[167876] = {
"Inquisitor Sigar",
"Halls of Atonement",
},
[126848] = {
"Captain Eudora",
"Freehold",
"enUS",
},
[94224] = {
"Petrifying Totem",
"Neltharion's Lair",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[22965] = {
"Devoted Steward",
"Black Temple",
"enUS",
},
[67360] = {
"Horde Cannoneer",
"Naval Battle Scenario",
"enUS",
},
[134139] = {
"Shrine Templar",
"Shrine of the Storm",
"enUS",
},
[114317] = {
"Lady Catriona Von'Indi",
"Return to Karazhan",
},
[59794] = {
"Krik'thik Disruptor",
"Gate of the Setting Sun",
"enUS",
},
[73223] = {
"Pterrordax",
"Siege of Orgrimmar",
"enUS",
},
[70684] = {
"Frostmane Mauler",
"Blood in the Snow",
"enUS",
},
[172265] = {
"Remnant of Fury",
"Sanguine Depths",
},
[73095] = {
"Blackfuse Engineer",
"Siege of Orgrimmar",
"enUS",
},
[160495] = {
"Maniacal Soulbinder",
"Theater of Pain",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[60040] = {
"Commander Durand",
"Scarlet Monastery",
"enUS",
},
[101008] = {
"Stinging Swarm",
"Black Rook Hold",
"enUS",
},
[19958] = {
"White Seedling",
"Tempest Keep: The Botanica",
"enUS",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
"enUS",
},
[202971] = {
"Null Glimmer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[139269] = {
"Gloom Horror",
"Waycrest Manor",
"enUS",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
"enUS",
},
[72354] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[70557] = {
"Zandalari Prophet",
"Throne of Thunder",
"enUS",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
"enUS",
},
[17976] = {
"Commander Sarannis",
"Tempest Keep: The Botanica",
"enUS",
},
[98810] = {
"Wrathguard Bladelord",
"Black Rook Hold",
"enUS",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
},
[71712] = {
"Despair Spawn",
"Siege of Orgrimmar",
"enUS",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
"enUS",
},
[63569] = {
"Amber Searsting",
"Heart of Fear",
"enUS",
},
[59464] = {
"Hopper",
"Stormstout Brewery",
"enUS",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
"enUS",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[163524] = {
"Kyrian Dark-Praetor",
"Spires of Ascension",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
"enUS",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
"enUS",
},
[165872] = {
"Flesh Crafter",
"The Necrotic Wake",
},
[200927] = {
"Smolderon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22869] = {
"Illidari Boneslicer",
"Black Temple",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
},
[134144] = {
"Living Current",
"Shrine of the Storm",
"enUS",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[71454] = {
"Malkorok",
"Siege of Orgrimmar",
"enUS",
},
[102287] = {
"Emberhusk Dominator",
"Neltharion's Lair",
"enUS",
},
[73094] = {
"Healing Tide Totem",
"Siege of Orgrimmar",
"enUS",
},
[72485] = {
"Goma",
"Siege of Orgrimmar",
"enUS",
},
[131586] = {
"Banquet Steward",
"Waycrest Manor",
"enUS",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205790] = {
"Time-Lost Smack-o-Tron",
"Dawn of the Infinite",
"enUS",
},
[72350] = {
"Dragonmaw Elite Grunt",
"Siege of Orgrimmar",
"enUS",
},
[62982] = {
"Mindbender",
"Waycrest Manor",
"enUS",
},
[125828] = {
"Kronwel",
"Atal'Dazar",
"enUS",
},
[135169] = {
"Spirit Drain Totem",
"The Underrot",
"enUS",
},
[64339] = {
"Instructor Tak'thok",
"Heart of Fear",
"enUS",
},
[131587] = {
"Bewitched Captain",
"Waycrest Manor",
"enUS",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
"enUS",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[59220] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[67361] = {
"Horde Swashbuckler",
"Naval Battle Scenario",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[189878] = {
"Nathrezim Infiltrator",
"Operation: Mechagon",
},
[19511] = {
"Nethervine Inciter",
"Tempest Keep: The Botanica",
"enUS",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
"enUS",
},
[98706] = {
"Commander Shemdah'sohn",
"Black Rook Hold",
"enUS",
},
[86552] = {
"Gorged Burster",
"The Everbloom",
"enUS",
},
[72351] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[180473] = {
"Unstoppable Abomination",
"Sanctum of Domination",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[23222] = {
"Bonechewer Brawler",
"Black Temple",
"enUS",
},
[162038] = {
"Regal Mistdancer",
"Sanguine Depths",
},
[127879] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
"enUS",
},
[64453] = {
"Set'thik Windblade",
"Heart of Fear",
"enUS",
},
[64338] = {
"Instructor Kli'thak",
"Heart of Fear",
"enUS",
},
[69383] = {
"Quivering Blob",
"Throne of Thunder",
"enUS",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
"enUS",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162039] = {
"Wicked Oppressor",
"Sanguine Depths",
},
[170483] = {
"Atal'ai Deathwalker's Spirit",
"De Other Side",
},
[73349] = {
"Tormented Initiate",
"Siege of Orgrimmar",
"enUS",
},
[208365] = {
"Aerwynn",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72352] = {
"Dragonmaw Ebon Stalker",
"Siege of Orgrimmar",
"enUS",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[62995] = {
"Animated Protector",
"Terrace of Endless Spring",
"enUS",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[114319] = {
"Lady Keira Berrybuck",
"Return to Karazhan",
},
[131847] = {
"Waycrest Reveler",
"Waycrest Manor",
"enUS",
},
[134150] = {
"Runecarver Sorn",
"Shrine of the Storm",
"enUS",
},
[114316] = {
"Baroness Dorothea Millstipe",
"Return to Karazhan",
},
[168443] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
"enUS",
},
[64340] = {
"Instructor Maltik",
"Heart of Fear",
"enUS",
},
[59479] = {
"Yan-Zhu the Uncasked",
"Stormstout Brewery",
"enUS",
},
[134158] = {
"Shadow-Borne Champion",
"Kings' Rest",
},
[59605] = {
"Sodden Hozen Brawler",
"Pandaria",
"enUS",
},
[173044] = {
"Stitching Assistant",
"The Necrotic Wake",
},
[72353] = {
"Dragonmaw Flameslinger",
"Siege of Orgrimmar",
"enUS",
},
[72487] = {
"Kozish",
"Siege of Orgrimmar",
"enUS",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
"enUS",
},
[70690] = {
"Blood of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[137478] = {
"Queen Wasi",
"Kings' Rest",
},
[156157] = {
"Coldheart Ascendant",
"Torghast, Tower of the Damned",
},
[131849] = {
"Crazed Marksman",
"Waycrest Manor",
"enUS",
},
[95766] = {
"Crazed Razorbeak",
"Darkheart Thicket",
"enUS",
},
[58198] = {
"Shado-Pan Disciple",
"Shado-Pan Monastery",
"enUS",
},
[204262] = {
"Necrofrost",
"Dawn of the Infinite",
"enUS",
},
[23030] = {
"Dragonmaw Sky Stalker",
"Black Temple",
"enUS",
},
[126983] = {
"Harlan Sweete",
"Freehold",
"enUS",
},
[127111] = {
"Irontide Oarsman",
"Freehold",
"enUS",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[131850] = {
"Maddened Survivalist",
"Waycrest Manor",
"enUS",
},
[70179] = {
"Ritual Guard",
"Throne of Thunder",
"enUS",
},
[98965] = {
"Kur'talos Ravencrest",
"Black Rook Hold",
"enUS",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
"enUS",
},
[60885] = {
"Minion of Fear",
"Terrace of Endless Spring",
"enUS",
},
[70691] = {
"Mouth of Terror",
"Heart of the Old God Scenario",
"enUS",
},
[213219] = {
"Congealed Ooze",
"Throne of the Tides",
"enUS",
},
[69927] = {
"Zandalari Prelate",
"Throne of Thunder",
"enUS",
},
[114544] = {
"Skeletal Usher",
"Return to Karazhan",
},
[214439] = {
"Corrupted Oracle",
"The Rookery",
"enUS",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[183033] = {
"Grim Reflection",
"Sepulcher of the First Ones",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
"enUS",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[19512] = {
"Nethervine Reaper",
"Tempest Keep: The Botanica",
"enUS",
},
[72358] = {
"Kor'kron Cannon",
"Siege of Orgrimmar",
"enUS",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
"enUS",
},
[199659] = {
"Warlord Kagni",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72355] = {
"High Enforcer Thranok",
"Siege of Orgrimmar",
"enUS",
},
[72483] = {
"Sarok",
"Siege of Orgrimmar",
"enUS",
},
[64917] = {
"Sra'thik Ambercaller",
"Heart of Fear",
"enUS",
},
[133836] = {
"Reanimated Guardian",
"The Underrot",
"enUS",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
"enUS",
},
[166396] = {
"Noble Skirmisher",
"Sanguine Depths",
},
[91003] = {
"Rokmora",
"Neltharion's Lair",
"enUS",
},
[164861] = {
"Spriggan Barkbinder",
"De Other Side",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[67366] = {
"Horde Officer",
"Naval Battle Scenario",
"enUS",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
"enUS",
},
[68904] = {
"Suen",
"Throne of Thunder",
"enUS",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[56472] = {
"Fragrant Lotus",
"Shado-Pan Monastery",
"enUS",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[134157] = {
"Shadow-Borne Warrior",
"Kings' Rest",
},
[72356] = {
"Master Cannoneer Dagryn",
"Siege of Orgrimmar",
"enUS",
},
[72484] = {
"Zazo",
"Siege of Orgrimmar",
"enUS",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[138187] = {
"Grotesque Horror",
"The Underrot",
"enUS",
},
[137484] = {
"King A'akul",
"Kings' Rest",
},
[92538] = {
"Tarspitter Grub",
"Neltharion's Lair",
"enUS",
},
[173016] = {
"Corpse Collector",
"The Necrotic Wake",
},
[95769] = {
"Mindshattered Screecher",
"Darkheart Thicket",
"enUS",
},
[59223] = {
"Brother Korloff",
"Scarlet Monastery",
"enUS",
},
[61334] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[61398] = {
"Xin the Weaponmaster",
"Mogu'shan Palace",
"enUS",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
"enUS",
},
[155908] = {
"Deathspeaker",
"Torghast, Tower of the Damned",
"enUS",
},
[61701] = {
"Sik'thik Warrior",
"Siege of Niuzao Temple",
"enUS",
},
[174843] = {
"Stoneborn Maitre D'",
"Castle Nathria",
},
[205804] = {
"Risen Dragon",
"Dawn of the Infinite",
"enUS",
},
[72357] = {
"Lieutenant Krugruk",
"Siege of Orgrimmar",
"enUS",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
"enUS",
},
[61910] = {
"Resin Flake",
"Siege of Niuzao Temple",
"enUS",
},
[167612] = {
"Stoneborn Reaver",
"Halls of Atonement",
},
[137486] = {
"Queen Patlaa",
"Kings' Rest",
},
[22871] = {
"Teron Gorefiend",
"Black Temple",
"enUS",
},
[206065] = {
"Interval",
"Dawn of the Infinite",
"enUS",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
"enUS",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
"enUS",
},
[67368] = {
"Parrot",
"Naval Battle Scenario",
"enUS",
},
[60375] = {
"Zandalari Skullcharger",
"Mogu'shan Vaults",
"enUS",
},
[178171] = {
"Stormforged Guardian",
"Tazavesh, the Veiled Market",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
"enUS",
},
[207341] = {
"Blistering Spear",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[131858] = {
"Thornguard",
"Waycrest Manor",
"enUS",
},
[138255] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[23223] = {
"Bonechewer Spectator",
"Black Temple",
"enUS",
},
[72486] = {
"Doyo'da",
"Siege of Orgrimmar",
"enUS",
},
[136139] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[73091] = {
"Blackfuse Sellsword",
"Siege of Orgrimmar",
"enUS",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
"enUS",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
"enUS",
},
[95771] = {
"Dreadsoul Ruiner",
"Darkheart Thicket",
"enUS",
},
[134418] = {
"Drowned Depthbringer",
"Shrine of the Storm",
"enUS",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
"enUS",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
"enUS",
},
[63191] = {
"Garalon",
"Heart of Fear",
"enUS",
},
[59480] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[190128] = {
"Zul'gamux",
"Operation: Mechagon",
},
[56924] = {
"Inflamed Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[129547] = {
"Blacktooth Knuckleduster",
"Freehold",
"enUS",
},
[206064] = {
"Coalesced Moment",
"Dawn of the Infinite",
"enUS",
},
[59800] = {
"Krik'thik Rager",
"Gate of the Setting Sun",
"enUS",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[199595] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[70824] = {
"Fiery Anger",
"Heart of the Old God Scenario",
"enUS",
},
[68905] = {
"Lu'lin",
"Throne of Thunder",
"enUS",
},
[59801] = {
"Krik'thik Wind Shaper",
"Gate of the Setting Sun",
"enUS",
},
[19865] = {
"Mutate Horror",
"Tempest Keep: The Botanica",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
},
[206068] = {
"Temporal Fusion",
"Dawn of the Infinite",
"enUS",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[73767] = {
"Kor'kron Shredder",
"Siege of Orgrimmar",
"enUS",
},
[17978] = {
"Thorngrin the Tender",
"Tempest Keep: The Botanica",
"enUS",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
"enUS",
},
[203763] = {
"Alliance Footman",
"Dawn of the Infinite",
"enUS",
},
[206066] = {
"Timestream Leech",
"Dawn of the Infinite",
"enUS",
},
[127757] = {
"Reanimated Honor Guard",
"Atal'Dazar",
"enUS",
},
[212981] = {
"Hapless Assistant",
"The Everbloom",
"enUS",
},
[72744] = {
"Kor'kron Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
"enUS",
},
[82597] = {
"Grom'kar Captain",
"Grimrail Depot",
"enUS",
},
[131863] = {
"Raal the Gluttonous",
"Waycrest Manor",
"enUS",
},
[204536] = {
"Blight Chunk",
"Dawn of the Infinite",
"enUS",
},
[146371] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[203688] = {
"Horde Grunt",
"Dawn of the Infinite",
"enUS",
},
[65494] = {
"Rok'nah Skirmisher",
"Theramore's Fall (A)",
"enUS",
},
[72492] = {
"Shimra",
"Siege of Orgrimmar",
"enUS",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
"enUS",
},
[71979] = {
"Kor'kron Warbringer",
"Siege of Orgrimmar",
"enUS",
},
[131864] = {
"Gorak Tul",
"Waycrest Manor",
"enUS",
},
[136214] = {
"Windspeaker Heldis",
"Shrine of the Storm",
"enUS",
},
[136470] = {
"Refreshment Vendor",
"The MOTHERLODE!!",
},
[107288] = {
"Vilethorn Sapling",
"Darkheart Thicket",
"enUS",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[80935] = {
"Grom'kar Boomer",
"Grimrail Depot",
"enUS",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
"enUS",
},
[133912] = {
"Bloodsworn Defiler",
"The Underrot",
"enUS",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[71466] = {
"Iron Juggernaut",
"Siege of Orgrimmar",
"enUS",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[65581] = {
"Essence of Hate",
"Crypt of Forgotten Kings",
"enUS",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
"enUS",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
"enUS",
},
[206070] = {
"Chronaxie",
"Dawn of the Infinite",
"enUS",
},
[72490] = {
"Overseer Mojka",
"Siege of Orgrimmar",
"enUS",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
"enUS",
},
[150297] = {
"Mechagon Renormalizer",
"Operation: Mechagon",
"enUS",
},
[72194] = {
"Hellscream Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[98677] = {
"Rook Spiderling",
"Black Rook Hold",
"enUS",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
"enUS",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
},
[61337] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
"enUS",
},
[129552] = {
"Monzumi",
"Atal'Dazar",
"enUS",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[70060] = {
"Shadowed Voodoo Spirit",
"Throne of Thunder",
"enUS",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
"enUS",
},
[205820] = {
"Crawling Goo",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[68397] = {
"Lei Shen",
"Throne of Thunder",
"enUS",
},
[197801] = {
"Awakened Terrasentry",
"Vault of the Incarnates",
"enUS",
},
[99358] = {
"Rotheart Dryad",
"Darkheart Thicket",
"enUS",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
"enUS",
},
[205305] = {
"Fractured Causality",
"10.1.5 Time Rifts - Scourge (Azmourne)",
"enUS",
},
[150292] = {
"Mechagon Cavalry",
"Operation: Mechagon",
"enUS",
},
[146370] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[210423] = {
"Keeper of the Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[18587] = {
"Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[72365] = {
"Dragonmaw Cannoneer",
"Siege of Orgrimmar",
"enUS",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
"enUS",
},
[22873] = {
"Coilskar General",
"Black Temple",
"enUS",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[132126] = {
"Gilded Priestess",
"Atal'Dazar",
"enUS",
},
[206074] = {
"Pendule",
"Dawn of the Infinite",
"enUS",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
"enUS",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
"enUS",
},
[99359] = {
"Rotheart Keeper",
"Darkheart Thicket",
"enUS",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
"enUS",
},
[205307] = {
"Fury of N'zoth",
"10.1.5 Time Rifts - Black Empire (Azq'roth)",
"enUS",
},
[168717] = {
"Forsworn Justicar",
"Spires of Ascension",
},
[65304] = {
"Hateful Monstrosity",
"Crypt of Forgotten Kings",
"enUS",
},
[165137] = {
"Zolramus Gatekeeper",
"The Necrotic Wake",
},
[61338] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[114584] = {
"Phantom Crew",
"Return to Karazhan",
},
[167607] = {
"Stoneborn Slasher",
"Halls of Atonement",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
"enUS",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[168718] = {
"Forsworn Warden",
"Spires of Ascension",
},
[129553] = {
"Dinomancer Kish'o",
"Atal'Dazar",
"enUS",
},
[210170] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72493] = {
"Trak'gen",
"Siege of Orgrimmar",
"enUS",
},
[212739] = {
"Radiating Voidstone",
"The Rookery",
"enUS",
},
[99360] = {
"Vilethorn Blossom",
"Darkheart Thicket",
"enUS",
},
[22841] = {
"Shade of Akama",
"Black Temple",
"enUS",
},
[205309] = {
"Overlord Mechagon",
"10.1.5 Time Rifts - Robot (A.Z.E.R.O.T.H.)",
"enUS",
},
[114796] = {
"Wholesome Hostess",
"Return to Karazhan",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
"enUS",
},
[204030] = {
"Goblin Sapper",
"Dawn of the Infinite",
"enUS",
},
[98970] = {
"Latosius",
"Black Rook Hold",
"enUS",
},
[163862] = {
"Defender of Many Eyes",
"Plaguefall",
},
[122984] = {
"Dazar'ai Colossus",
"Atal'Dazar",
"enUS",
},
[59293] = {
"Scarlet Cannoneer",
"Scarlet Halls",
"enUS",
},
[65474] = {
"Rok'nah Peon",
"Theramore's Fall (A)",
"enUS",
},
[64729] = {
"Rok'nah Raider",
"Theramore's Fall (A)",
"enUS",
},
[72238] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[210172] = {
"Zaqali Juggernaut",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
"enUS",
},
[80938] = {
"Grom'kar Hulk",
"Grimrail Depot",
"enUS",
},
[22874] = {
"Coilskar Harpooner",
"Black Temple",
"enUS",
},
[70959] = {
"Urtharges the Destroyer",
"Heart of the Old God Scenario",
"enUS",
},
[213770] = {
"Ink of Ozumat",
"Throne of the Tides",
"enUS",
},
[95779] = {
"Festerhide Grizzly",
"Darkheart Thicket",
"enUS",
},
[210173] = {
"Zaqali Steelshaper",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[61339] = {
"Glintrok Oracle",
"Mogu'shan Palace",
"enUS",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
"enUS",
},
[137511] = {
"Bilge Rat Cutthroat",
"Siege of Boralus",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[201736] = {
"Sundered Arcanist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[210436] = {
"Flowering Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
"enUS",
},
[72367] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[70448] = {
"Ancient Python",
"Throne of Thunder",
"enUS",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
"enUS",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[153882] = {
"Deadsoul Spirit",
"Torghast, Tower of the Damned",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
"enUS",
},
[56863] = {
"Sleepy Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[56927] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"The Azure Vault",
"enUS",
},
[71475] = {
"Rook Stonetoe",
"Siege of Orgrimmar",
"enUS",
},
[135204] = {
"Spectral Hex Priest",
"Kings' Rest",
},
[17980] = {
"Laj",
"Tempest Keep: The Botanica",
"enUS",
},
[62619] = {
"Jade Destroyer",
"Greenstone Village",
"enUS",
},
[210437] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134629] = {
"Scaled Krolusk Rider",
"Temple of Sethraliss",
},
[189706] = {
"Chaotic Essence",
"Castle Nathria",
},
[72496] = {
"Overseer Thathung",
"Siege of Orgrimmar",
"enUS",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
"enUS",
},
[56862] = {
"Drunken Hozen Brawler",
"Stormstout Brewery",
"enUS",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
"enUS",
},
[138281] = {
"Faceless Corruptor",
"The Underrot",
"enUS",
},
[179733] = {
"Invigorating Fish Stick",
"Tazavesh, the Veiled Market",
},
[125977] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[71476] = {
"Embodied Misery",
"Siege of Orgrimmar",
"enUS",
},
[61340] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
"enUS",
},
[165911] = {
"Loyal Creation",
"The Necrotic Wake",
},
[73904] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[201222] = {
"Valow, Timesworn Keeper",
"Dawn of the Infinite",
"enUS",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
"enUS",
},
[66100] = {
"Apparition of Terror",
"Terrace of Endless Spring",
"enUS",
},
[73342] = {
"Fallen Pool Tender",
"Siege of Orgrimmar",
"enUS",
},
[64732] = {
"Rok'nah Grunt",
"Theramore's Fall (A)",
"enUS",
},
[144680] = {
"Frida Ironbellows",
"Battle of Dazar'alor",
"enUS",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
"enUS",
},
[137516] = {
"Ashvane Invader",
"Siege of Boralus",
},
[201223] = {
"Infinite Twilight Magus",
"Dawn of the Infinite",
"enUS",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
},
[71474] = {
"Embodied Despair",
"Siege of Orgrimmar",
"enUS",
},
[60381] = {
"Zandalari Infiltrator",
"Mogu'shan Vaults",
"enUS",
},
[165913] = {
"Ghastly Parishioner",
"Halls of Atonement",
},
[71858] = {
"Wavebinder Kardris",
"Siege of Orgrimmar",
"enUS",
},
[90998] = {
"Blightshard Shaper",
"Neltharion's Lair",
"enUS",
},
[58590] = {
"Scarlet Zealot",
"Scarlet Monastery",
"enUS",
},
[60701] = {
"Zian of the Endless Shadow",
"Mogu'shan Vaults",
"enUS",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
"enUS",
},
[72498] = {
"Theramore Citizen",
"Siege of Orgrimmar",
"enUS",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[99365] = {
"Taintheart Stalker",
"Darkheart Thicket",
"enUS",
},
[192781] = {
"Ore Elemental",
"Neltharus",
"enUS",
},
[70963] = {
"Lieutenant Fizzel",
"Naval Battle Scenario",
"enUS",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
"enUS",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
"enUS",
},
[114334] = {
"Damaged Golem",
"Return to Karazhan",
},
[61341] = {
"Mounted Mogu",
"Mogu'shan Vaults",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[71859] = {
"Earthbreaker Haromm",
"Siege of Orgrimmar",
"enUS",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[59614] = {
"Bored Student",
"Scholomance",
"enUS",
},
[129559] = {
"Cutwater Duelist",
"Freehold",
"enUS",
},
[168882] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[115486] = {
"Erudite Slayer",
"Return to Karazhan",
},
[71479] = {
"He Softfoot",
"Siege of Orgrimmar",
"enUS",
},
[167963] = {
"Headless Client",
"De Other Side",
},
[204560] = {
"Incorporeal Being",
"Freehold",
"enUS",
},
[115488] = {
"Infused Pyromancer",
"Return to Karazhan",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
"enUS",
},
[194469] = {
"Wither Slasher",
"Brackenhide Hollow",
"enUS",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
"enUS",
},
[155170] = {
"Risen Villager",
"Stratholme Pet Dungeon",
"enUS",
},
[216584] = {
"Nerubian Captain",
"Earthcrawl Mines",
"enUS",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[134338] = {
"Tidesage Enforcer",
"Shrine of the Storm",
"enUS",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
"enUS",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
"enUS",
},
[84400] = {
"Flourishing Ancient",
"The Everbloom",
"enUS",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
"enUS",
},
[58783] = {
"Scarlet Initiate",
"Scarlet Monastery",
"enUS",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[167965] = {
"Lubricator",
"De Other Side",
},
[186644] = {
"Leymor",
"The Azure Vault",
"enUS",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
"enUS",
},
[63106] = {
"Sik'thik Swarmer",
"Siege of Niuzao Temple",
"enUS",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
"enUS",
},
[59808] = {
"Shado-Pan Stormbringer",
"Shado-Pan Monastery",
"enUS",
},
[71477] = {
"Embodied Gloom",
"Siege of Orgrimmar",
"enUS",
},
[59359] = {
"Flesh Horror",
"Scholomance",
"enUS",
},
[165919] = {
"Skeletal Marauder",
"The Necrotic Wake",
},
[137517] = {
"Ashvane Destroyer",
"Siege of Boralus",
},
[59551] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[165410] = {
"High Adjudicator Aleez",
"Halls of Atonement",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[163620] = {
"Rotspew",
"The Necrotic Wake",
},
[216583] = {
"Chittering Fearmonger",
"Earthcrawl Mines",
"enUS",
},
[171805] = {
"Research Scribe",
"Sanguine Depths",
},
[167967] = {
"Sentient Oil",
"De Other Side",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
"enUS",
},
[22875] = {
"Coilskar Sea-Caller",
"Black Temple",
"enUS",
},
[73725] = {
"Xiang-Lin",
"Siege of Orgrimmar",
"enUS",
},
[22939] = {
"Temple Acolyte",
"Black Temple",
"enUS",
},
[197905] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[71478] = {
"Embodied Anguish",
"Siege of Orgrimmar",
"enUS",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[71734] = {
"Sha of Pride",
"Siege of Orgrimmar",
"enUS",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
"enUS",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
"enUS",
},
[168992] = {
"Risen Cultist",
"De Other Side",
},
[206352] = {
"Alliance Archer",
"Dawn of the Infinite",
"enUS",
},
[202256] = {
"Djaradin Lavamancer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[97197] = {
"Valarjar Purifier",
"UNKNOWN",
},
[56865] = {
"Aqua Dancer",
"Stormstout Brewery",
"enUS",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
"enUS",
},
[60384] = {
"Zandalari Pterror Wing",
"Mogu'shan Vaults",
"enUS",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
"enUS",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
"enUS",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
"enUS",
},
[206351] = {
"Alliance Conjuror",
"Dawn of the Infinite",
"enUS",
},
[59360] = {
"Meat Graft",
"Scholomance",
"enUS",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
"enUS",
},
[137521] = {
"Irontide Powdershot",
"Siege of Boralus",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[64734] = {
"Rok'nah Hag",
"Theramore's Fall (A)",
"enUS",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
"enUS",
},
[133685] = {
"Befouled Spirit",
"The Underrot",
"enUS",
},
[202258] = {
"Djaradin Skullcrusher",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22957] = {
"Mistress of Dementia",
"Black Temple",
"enUS",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
"enUS",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
"enUS",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
"enUS",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[70202] = {
"Manchu",
"Throne of Thunder",
"enUS",
},
[70586] = {
"Eternal Guardian",
"Throne of Thunder",
"enUS",
},
[71480] = {
"Sun Tenderheart",
"Siege of Orgrimmar",
"enUS",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[198933] = {
"Iridikron",
"Dawn of the Infinite",
"enUS",
},
[60576] = {
"Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
"enUS",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
"enUS",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[25755] = {
"Ahunite Hailstone",
"Coilfang: The Slave Pens",
"enUS",
},
[64479] = {
"Gatecrusher",
"Theramore's Fall (A)",
"enUS",
},
[133430] = {
"Venture Co. Mastermind",
"The MOTHERLODE!!",
},
[189470] = {
"Lava Flare",
"Neltharus",
"enUS",
},
[135989] = {
"Shieldbearer of Zul",
"Atal'Dazar",
"enUS",
},
[61216] = {
"Glintrok Hexxer",
"Mogu'shan Palace",
"enUS",
},
[23420] = {
"Essence of Anger",
"Black Temple",
"enUS",
},
[71481] = {
"Embodied Sorrow",
"Siege of Orgrimmar",
"enUS",
},
[136249] = {
"Guardian Elemental",
"Shrine of the Storm",
"enUS",
},
[59426] = {
"Bopper",
"Stormstout Brewery",
"enUS",
},
[71865] = {
"Garrosh Hellscream",
"Siege of Orgrimmar",
"enUS",
},
[71993] = {
"Desperation Spawn",
"Siege of Orgrimmar",
"enUS",
},
[59459] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[199703] = {
"Magma Mystic",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[33134] = {
"Sara",
"Ulduar",
"enUS",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
"enUS",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
"enUS",
},
[45672] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
"enUS",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
"enUS",
},
[213143] = {
"Manifested Dream",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
},
[71482] = {
"Embodied Desperation",
"Siege of Orgrimmar",
"enUS",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
"enUS",
},
[163882] = {
"Decaying Flesh Giant",
"Plaguefall",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
"enUS",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
"enUS",
},
[64735] = {
"Rok'nah Headhunter",
"Theramore's Fall (A)",
"enUS",
},
[23196] = {
"Bonechewer Behemoth",
"Black Temple",
"enUS",
},
[58722] = {
"Lilian Voss",
"Scholomance",
"enUS",
},
[202264] = {
"Primal Lava Elemental",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70587] = {
"Shale Stalker",
"Throne of Thunder",
"enUS",
},
[56867] = {
"Fiery Trickster",
"Stormstout Brewery",
"enUS",
},
[188703] = {
"Protoform Barrier",
"Castle Nathria",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
"enUS",
},
[207638] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[201753] = {
"Sundered Destroyer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
"enUS",
},
[61345] = {
"Mogu Archer",
"Mogu'shan Vaults",
"enUS",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
"enUS",
},
[19486] = {
"Sunseeker Chemist",
"Tempest Keep: The Botanica",
"enUS",
},
[205723] = {
"Time-Lost Aerobot",
"Dawn of the Infinite",
"enUS",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
"enUS",
},
[207639] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[201754] = {
"Sarkareth",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59746] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
"enUS",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
"enUS",
},
[168109] = {
"Empowered Mawsworn Ritualist",
"Torghast, Tower of the Damned",
},
[101549] = {
"Arcane Minion",
"Black Rook Hold",
"enUS",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
"enUS",
},
[168747] = {
"Venomfang",
"Plaguefall",
},
[60386] = {
"Zandalari Terror Rider",
"Mogu'shan Vaults",
"enUS",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
"enUS",
},
[69821] = {
"Thunder Lord",
"Throne of Thunder",
"enUS",
},
[83894] = {
"Dulhu",
"The Everbloom",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[100526] = {
"Tormented Bloodseeker",
"Darkheart Thicket",
"enUS",
},
[135474] = {
"Thistle Acolyte",
"Waycrest Manor",
"enUS",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
"enUS",
},
[201756] = {
"Whiiskeyz",
"Dawn of the Infinite",
"enUS",
},
[68222] = {
"Bow Fly Swarm",
"Throne of Thunder",
"enUS",
},
[70589] = {
"Cavern Burrower",
"Throne of Thunder",
"enUS",
},
[62945] = {
"Bloodthirsty Prowler",
"Greenstone Village",
"enUS",
},
[199325] = {
"Nokhud Stormcaller",
"The Nokhud Offensive",
},
[177889] = {
"Mawforged Souljudge",
"Sanctum of Domination",
},
[67391] = {
"Lieutenant Drak'on",
"Naval Battle Scenario",
"enUS",
},
[151476] = {
"Blastatron X-80",
"Operation: Mechagon",
"enUS",
},
[156212] = {
"Coldheart Agent",
"Torghast, Tower of the Damned",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[59299] = {
"Scarlet Guardian",
"Scarlet Halls",
"enUS",
},
[214421] = {
"Coalescing Void Diffuser",
"The Rookery",
"enUS",
},
[59684] = {
"Hozen Party Animal",
"Stormstout Brewery",
"enUS",
},
[100527] = {
"Dreadfire Imp",
"Darkheart Thicket",
"enUS",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
"enUS",
},
[72893] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[64353] = {
"Set'thik Gale-Slicer",
"Heart of Fear",
"enUS",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[25756] = {
"Ahunite Coldwave",
"Coilfang: The Slave Pens",
"enUS",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
"enUS",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
"enUS",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
"enUS",
},
[22877] = {
"Coilskar Wrangler",
"Black Temple",
"enUS",
},
[61155] = {
"Wily Woodling",
"Greenstone Village",
"enUS",
},
[203806] = {
"Whisper in the Dark",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
},
[199715] = {
"Nokhud Battleguard",
"The Nokhud Offensive",
"enUS",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
"enUS",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
"enUS",
},
[162099] = {
"General Kaal",
"Sanguine Depths",
},
[134331] = {
"King Rahu'ai",
"Kings' Rest",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
"enUS",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
"enUS",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[70463] = {
"Frostmane Snowstalker",
"Blood in the Snow",
"enUS",
},
[103344] = {
"Oakheart",
"Darkheart Thicket",
"enUS",
},
[98542] = {
"Amalgam of Souls",
"Black Rook Hold",
"enUS",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
"enUS",
},
[155824] = {
"Lumbering Creation",
"Torghast, Tower of the Damned",
"enUS",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
"enUS",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
"enUS",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
"enUS",
},
[61347] = {
"Kingsguard",
"Mogu'shan Vaults",
"enUS",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[135234] = {
"Diseased Mastiff",
"Waycrest Manor",
"enUS",
},
[100529] = {
"Hatespawn Slime",
"Darkheart Thicket",
"enUS",
},
[163126] = {
"Brittlebone Mage",
"The Necrotic Wake",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[203809] = {
"Entropic Hatred",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129699] = {
"Ludwig Von Tortollan",
"Freehold",
"enUS",
},
[70464] = {
"Frostmane Witch Doctor",
"Blood in the Snow",
"enUS",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
"enUS",
},
[135235] = {
"Spectral Beastmaster",
"Kings' Rest",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
"enUS",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
"enUS",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
"enUS",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
"enUS",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
"enUS",
},
[102962] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[64355] = {
"Kor'thik Silentwing",
"Heart of Fear",
"enUS",
},
[163894] = {
"Blighted Spinebreaker",
"Plaguefall",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[156226] = {
"Coldheart Binder",
"Torghast, Tower of the Damned",
},
[62691] = {
"Living Amber",
"Heart of Fear",
"enUS",
},
[203811] = {
"Incarnation of Entropy",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[206230] = {
"Infinite Diversionist",
"Dawn of the Infinite",
"enUS",
},
[70465] = {
"Frostmane Bonechiller",
"Blood in the Snow",
"enUS",
},
[180015] = {
"Burly Deckhand",
"Tazavesh, the Veiled Market",
},
[72768] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[166969] = {
"Baroness Frieda",
"Castle Nathria",
},
[81212] = {
"Grimrail Overseer",
"Grimrail Depot",
"enUS",
},
[61156] = {
"Vengeful Hui",
"Greenstone Village",
"enUS",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[163128] = {
"Zolramus Sorcerer",
"The Necrotic Wake",
},
[115757] = {
"Wrathguard Flamebringer",
"Return to Karazhan",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[202789] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[100531] = {
"Bloodtainted Fury",
"Darkheart Thicket",
"enUS",
},
[59302] = {
"Sergeant Verdone",
"Scarlet Halls",
"enUS",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
"enUS",
},
[32666] = {
"Training Dummy",
"Siege of Orgrimmar",
"enUS",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[70594] = {
"Mist Lurker",
"Throne of Thunder",
"enUS",
},
[135239] = {
"Spectral Witch Doctor",
"Kings' Rest",
},
[22846] = {
"Ashtongue Stormcaller",
"Black Temple",
"enUS",
},
[22878] = {
"Aqueous Lord",
"Black Temple",
"enUS",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
"enUS",
},
[164921] = {
"Drust Harvester",
"Mists of Tirna Scithe",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[73539] = {
"Kor'kron Den Mother",
"Siege of Orgrimmar",
"enUS",
},
[59240] = {
"Scarlet Hall Guardian",
"Scarlet Halls",
"enUS",
},
[135240] = {
"Soul Essence",
"Waycrest Manor",
"enUS",
},
[100532] = {
"Bloodtainted Burster",
"Darkheart Thicket",
"enUS",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
"enUS",
},
[68036] = {
"Durumu the Forgotten",
"Throne of Thunder",
"enUS",
},
[60709] = {
"Qiang the Merciless",
"Mogu'shan Vaults",
"enUS",
},
[208165] = {
"Alliance Knight",
"Dawn of the Infinite",
"enUS",
},
[177716] = {
"So' Cartel Assassin",
"Tazavesh, the Veiled Market",
},
[70595] = {
"Frostmane Prowler",
"Blood in the Snow",
"enUS",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
"enUS",
},
[205611] = {
"Molten Hound",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70979] = {
"Water Elemental",
"Blood in the Snow",
"enUS",
},
[61157] = {
"Sassy Seedling",
"Greenstone Village",
"enUS",
},
[166970] = {
"Lord Stavros",
"Castle Nathria",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
"enUS",
},
[71491] = {
"Guardian of Sacrifice",
"Crypt of Forgotten Kings",
"enUS",
},
[65507] = {
"Rok'nah Felcaster",
"Theramore's Fall (A)",
"enUS",
},
[69700] = {
"Large Anima Golem",
"Throne of Thunder",
"enUS",
},
[59494] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[201773] = {
"Eternal Blaze",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72131] = {
"Blind Blademaster",
"Siege of Orgrimmar",
"enUS",
},
[53545] = {
"Molten Spewer",
"Firelands",
"enUS",
},
[152898] = {
"Deadsoul Chorus",
"Torghast, Tower of the Damned",
},
[70468] = {
"Bonechiller Barafu",
"Blood in the Snow",
"enUS",
},
[65444] = {
"Captain Mousson",
"Theramore's Fall (A)",
"enUS",
},
[61989] = {
"Cursed Mogu Sculpture",
"Mogu'shan Vaults",
"enUS",
},
[69702] = {
"Ritualist Aridian",
"Throne of Thunder",
"enUS",
},
[64358] = {
"Set'thik Tempest",
"Heart of Fear",
"enUS",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[65609] = {
"Sky-Captain \"Dashing\" Dazrip",
"Theramore's Fall (A)",
"enUS",
},
[131666] = {
"Coven Thornshaper",
"Waycrest Manor",
"enUS",
},
[71492] = {
"Maragor",
"Crypt of Forgotten Kings",
"enUS",
},
[60585] = {
"Elder Regail",
"Terrace of Endless Spring",
"enUS",
},
[69701] = {
"Anima Golem",
"Throne of Thunder",
"enUS",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
"enUS",
},
[164414] = {
"Reanimated Mage",
"The Necrotic Wake",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[60710] = {
"Subetai the Swift",
"Mogu'shan Vaults",
"enUS",
},
[70341] = {
"Tormented Spirit",
"Throne of Thunder",
"enUS",
},
[152905] = {
"Tower Sentinel",
"Torghast, Tower of the Damned",
"enUS",
},
[212775] = {
"Faceless Seer",
"Throne of the Tides",
"enUS",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98362] = {
"Troubled Soul",
"Black Rook Hold",
"enUS",
},
[201261] = {
"Kazzara, the Hellforged",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[97720] = {
"Blightshard Skitter",
"Neltharion's Lair",
"enUS",
},
[59175] = {
"Master Archer",
"Scarlet Halls",
"enUS",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[59303] = {
"Houndmaster Braun",
"Scarlet Halls",
"enUS",
},
[134990] = {
"Charged Dust Devil",
"Temple of Sethraliss",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
"enUS",
},
[211241] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
},
[61670] = {
"Sik'thik Demolisher",
"Siege of Niuzao Temple",
"enUS",
},
[201774] = {
"Essence of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59751] = {
"Shado-Pan Warden",
"Shado-Pan Monastery",
"enUS",
},
[208698] = {
"Infinite Riftmage",
"Dawn of the Infinite",
"enUS",
},
[60009] = {
"Feng the Accursed",
"Mogu'shan Vaults",
"enUS",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
"enUS",
},
[14498] = {
"Tosamina",
"Siege of Orgrimmar",
"enUS",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[64357] = {
"Kor'thik Swarmer",
"Heart of Fear",
"enUS",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[212778] = {
"Minion of Ghur'sha",
"Throne of the Tides",
"enUS",
},
[81985] = {
"Everbloom Cultivator",
"The Everbloom",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[60583] = {
"Protector Kaolan",
"Terrace of Endless Spring",
"enUS",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
"enUS",
},
[58664] = {
"Instructor Chillheart's Phylactery",
"Scholomance",
"enUS",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
"enUS",
},
[70471] = {
"Frostmane Berserker",
"Blood in the Snow",
"enUS",
},
[212779] = {
"Umbraclaw",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205366] = {
"Time-Lost Wakethrasher",
"Dawn of the Infinite",
"enUS",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
"enUS",
},
[131667] = {
"Soulbound Goliath",
"Waycrest Manor",
"enUS",
},
[61159] = {
"Greenstone Terror",
"Greenstone Village",
"enUS",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
"enUS",
},
[59368] = {
"Krastinovian Carver",
"Scholomance",
"enUS",
},
[65610] = {
"Airship Crewman",
"Theramore's Fall (A)",
"enUS",
},
[70219] = {
"Putrid Waste",
"Throne of Thunder",
"enUS",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
"enUS",
},
[56875] = {
"Krik'thik Demolisher",
"Gate of the Setting Sun",
"enUS",
},
[203825] = {
"Voracious Magma Worm",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[59752] = {
"Shado-Pan Ambusher",
"Shado-Pan Monastery",
"enUS",
},
[59520] = {
"Fizzy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[212781] = {
"Dreamtalon",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[61929] = {
"Sik'thik Amber-Weaver",
"Siege of Niuzao Temple",
"enUS",
},
[72903] = {
"Kor'kron Siegemaster",
"Siege of Orgrimmar",
"enUS",
},
[131669] = {
"Jagged Hound",
"Waycrest Manor",
"enUS",
},
[71112] = {
"Quivering Blood",
"Heart of the Old God Scenario",
"enUS",
},
[203826] = {
"Colossal Draconic Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[73415] = {
"Ichor of Y'Shaarj",
"Siege of Orgrimmar",
"enUS",
},
[33717] = {
"Azure Consort",
"Ulduar",
"enUS",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
"enUS",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
"enUS",
},
[59372] = {
"Scarlet Scholar",
"Scarlet Halls",
"enUS",
},
[131670] = {
"Heartsbane Vinetwister",
"Waycrest Manor",
},
[205618] = {
"Thorak Greenscale",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[72264] = {
"Manifestation of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[33719] = {
"Emerald Consort",
"Ulduar",
"enUS",
},
[70473] = {
"Frostmane Headhunter",
"Blood in the Snow",
"enUS",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
"enUS",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[173729] = {
"Manifestation of Pride",
"Halls of Atonement",
},
[205363] = {
"Time-Lost Waveshaper",
"Dawn of the Infinite",
"enUS",
},
[205619] = {
"Sarek Cinderbreath",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[59241] = {
"Scarlet Treasurer",
"Scarlet Halls",
"enUS",
},
[60396] = {
"Emperor's Rage",
"Mogu'shan Vaults",
"enUS",
},
[65510] = {
"Rok'nah Wave-Caller",
"Theramore's Fall (A)",
"enUS",
},
[56876] = {
"Krik'thik Sapper",
"Gate of the Setting Sun",
"enUS",
},
[100539] = {
"Taintheart Deadeye",
"Darkheart Thicket",
"enUS",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
"enUS",
},
[205620] = {
"Malgosa Spellbinder",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[63593] = {
"Set'thik Zephyrian",
"Heart of Fear",
"enUS",
},
[151127] = {
"Lord of Torment",
"Torghast, Tower of the Damned",
"enUS",
},
[70474] = {
"Farastu",
"Blood in the Snow",
"enUS",
},
[61928] = {
"Sik'thik Guardian",
"Siege of Niuzao Temple",
"enUS",
},
[168007] = {
"Empowered Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
},
[22848] = {
"Storm Fury",
"Black Temple",
"enUS",
},
[22880] = {
"Shadowmoon Champion",
"Black Temple",
"enUS",
},
[179010] = {
"Fatespawn Anomaly",
"Sanctum of Domination",
},
[134232] = {
"Hired Assassin",
"The MOTHERLODE!!",
},
[115640] = {
"Fuming Imp",
"Faronaar",
},
[156245] = {
"Grand Automaton",
"Torghast, Tower of the Damned",
},
[212786] = {
"Voidrider",
"The Rookery",
"enUS",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[132532] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[205622] = {
"Krono Sandtongue",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[203831] = {
"Crystalline Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[23232] = {
"Mutant War Hound",
"Black Temple",
"enUS",
},
[56747] = {
"Gu Cloudstrike",
"Shado-Pan Monastery",
"enUS",
},
[128434] = {
"Feasting Skyscreamer",
"Atal'Dazar",
"enUS",
},
[115765] = {
"Abstract Nullifier",
"Return to Karazhan",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
"enUS",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
"enUS",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
"enUS",
},
[65786] = {
"Wave-Caller Zulga",
"Theramore's Fall (A)",
"enUS",
},
[59242] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
"enUS",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[98366] = {
"Ghostly Retainer",
"Black Rook Hold",
"enUS",
},
[63592] = {
"Set'thik Gustwing",
"Heart of Fear",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
},
[201792] = {
"Ahnzon",
"Dawn of the Infinite",
"enUS",
},
[179269] = {
"Oasis Security",
"Tazavesh, the Veiled Market",
},
[122973] = {
"Dazar'ai Confessor",
"Atal'Dazar",
"enUS",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
"enUS",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
"enUS",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
"enUS",
},
[53231] = {
"Lava Scion",
"Firelands",
"enUS",
},
[131677] = {
"Heartsbane Runeweaver",
"Waycrest Manor",
"enUS",
},
[69069] = {
"Living Fluid",
"Throne of Thunder",
"enUS",
},
[71244] = {
"Kor'kron Shadowblade",
"The Secrets of Ragefire",
"enUS",
},
[210231] = {
"Tainted Lasher",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[208440] = {
"Infinite Slayer",
"Dawn of the Infinite",
"enUS",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
"enUS",
},
[162133] = {
"General Kaal",
"Sanguine Depths",
},
[81522] = {
"Witherbark",
"The Everbloom",
"enUS",
},
[60586] = {
"Elder Asani",
"Terrace of Endless Spring",
"enUS",
},
[92610] = {
"Understone Drummer",
"Neltharion's Lair",
"enUS",
},
[201788] = {
"Dazhak",
"Dawn of the Infinite",
"enUS",
},
[72655] = {
"Fragment of Pride",
"Siege of Orgrimmar",
"enUS",
},
[98243] = {
"Soul-Torn Champion",
"Black Rook Hold",
"enUS",
},
[58605] = {
"Scarlet Judicator",
"Scarlet Monastery",
"enUS",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
"enUS",
},
[23339] = {
"Illidari Heartseeker",
"Black Temple",
"enUS",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[69070] = {
"Viscous Horror",
"Throne of Thunder",
"enUS",
},
[71245] = {
"Kor'kron Dark Shaman",
"The Secrets of Ragefire",
"enUS",
},
[136541] = {
"Bile Oozeling",
"Waycrest Manor",
"enUS",
},
[44404] = {
"Naz'jar Frost Witch",
"Throne of the Tides",
"enUS",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
"enUS",
},
[98368] = {
"Ghostly Protector",
"Black Rook Hold",
"enUS",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[61610] = {
"Seething Sha",
"Crypt of Forgotten Kings",
"enUS",
},
[205628] = {
"Twisted Elementium",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[201790] = {
"Loszkeleth",
"Dawn of the Infinite",
"enUS",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[155221] = {
"Faeleaf Tender",
"Torghast, Tower of the Damned",
"enUS",
},
[135007] = {
"Orb Guardian",
"Temple of Sethraliss",
},
[202814] = {
"Twisted Aberration",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22849] = {
"Ashtongue Feral Spirit",
"Black Temple",
"enUS",
},
[22881] = {
"Aqueous Surger",
"Black Temple",
"enUS",
},
[205629] = {
"Crazed Experiment",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[22945] = {
"Shadowmoon Blood Mage",
"Black Temple",
"enUS",
},
[62701] = {
"Mutated Construct",
"Heart of Fear",
"enUS",
},
[69455] = {
"Zandalari Water-Binder",
"Throne of Thunder",
"enUS",
},
[62442] = {
"Tsulong",
"Terrace of Endless Spring",
"enUS",
},
[59309] = {
"Obedient Hound",
"Scarlet Halls",
"enUS",
},
[72408] = {
"Anti-Air Turret",
"Siege of Orgrimmar",
"enUS",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[59503] = {
"Brittle Skeleton",
"Scholomance",
"enUS",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
"enUS",
},
[171343] = {
"Bladebeak Matriarch",
"De Other Side",
},
[208445] = {
"Larodar, Keeper of the Flame",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[23147] = {
"Shadowmoon Grunt",
"Black Temple",
"enUS",
},
[211339] = {
"Dream Seedling",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
"enUS",
},
[23083] = {
"Shadowmoon Riding Hound",
"Black Temple",
"enUS",
},
[128435] = {
"Toxic Saurid",
"Atal'Dazar",
"enUS",
},
[214075] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72658] = {
"Amalgamated Hubris",
"Siege of Orgrimmar",
"enUS",
},
[60397] = {
"Emperor's Strength",
"Mogu'shan Vaults",
"enUS",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
"enUS",
},
[73806] = {
"Kor'kron Machinist",
"Siege of Orgrimmar",
"enUS",
},
[63594] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[134514] = {
"Abyssal Cultist",
"Shrine of the Storm",
"enUS",
},
[176974] = {
"Soul Reaver",
"Sanctum of Domination",
},
[70224] = {
"Rotting Scavenger",
"Throne of Thunder",
"enUS",
},
[101991] = {
"Nightmare Dweller",
"Darkheart Thicket",
"enUS",
},
[213828] = {
"Candleclaw Pyromancer",
"New Candle, New Hope",
"enUS",
},
[115642] = {
"Umbral Imp",
"Faronaar",
},
[139949] = {
"Plague Doctor",
"Temple of Sethraliss",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
"enUS",
},
[131685] = {
"Runic Disciple",
"Waycrest Manor",
"enUS",
},
[19843] = {
"Nethervine Trickster",
"Tempest Keep: The Botanica",
"enUS",
},
[199748] = {
"Timeline Marauder",
"Dawn of the Infinite",
"enUS",
},
[157017] = {
"Lithic Watcher",
"Torghast, Tower of the Damned",
"enUS",
},
[71504] = {
"Siegecrafter Blackfuse",
"Siege of Orgrimmar",
"enUS",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[65783] = {
"Summoned Imp",
"Theramore's Fall (A)",
"enUS",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
"enUS",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
"enUS",
},
[84554] = {
"Venom-Crazed Pale One",
"The Everbloom",
},
[208193] = {
"Paladin of the Silver Hand",
"Dawn of the Infinite",
"enUS",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
"enUS",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
"enUS",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
"enUS",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[213831] = {
"Candleclaw Underboss",
"New Candle, New Hope",
"enUS",
},
[165471] = {
"Nathrian Duelist",
"Castle Nathria",
},
[63275] = {
"Corrupted Protector",
"Terrace of Endless Spring",
"enUS",
},
[136549] = {
"Ashvane Cannoneer",
"Siege of Boralus",
},
[18404] = {
"Bloodwarder Steward",
"Tempest Keep: The Botanica",
"enUS",
},
[59373] = {
"Scarlet Pupil",
"Scarlet Halls",
"enUS",
},
[144298] = {
"Defense Bot Mk III",
"Operation: Mechagon",
"enUS",
},
[59501] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[69078] = {
"Sul the Sandcrawler",
"Throne of Thunder",
"enUS",
},
[155812] = {
"Mawsworn Ritualist",
"Torghast, Tower of the Damned",
"enUS",
},
[115388] = {
"King",
"Return to Karazhan",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
"enUS",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[22882] = {
"Shadowmoon Deathshaper",
"Black Temple",
"enUS",
},
[130485] = {
"Mechanized Peacekeeper",
"The MOTHERLODE!!",
},
[136295] = {
"Sunken Denizen",
"Shrine of the Storm",
"enUS",
},
[71378] = {
"Quilen Guardian",
"Siege of Orgrimmar",
"enUS",
},
[194389] = {
"Lava Spawn",
"Neltharus",
"enUS",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
"enUS",
},
[209801] = {
"Quartermaster Koratite",
"The Rookery",
"enUS",
},
[165483] = {
"Court Hierarch",
"Castle Nathria",
},
[201288] = {
"Sundered Champion",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205638] = {
"Sundered Flame Banner",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70227] = {
"Skittering Spiderling",
"Throne of Thunder",
"enUS",
},
[166302] = {
"Corpse Harvester",
"The Necrotic Wake",
},
[127799] = {
"Dazar'ai Honor Guard",
"Atal'Dazar",
"enUS",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
"enUS",
},
[23330] = {
"Dragonmaw Wind Reaver",
"Black Temple",
"enUS",
},
[133482] = {
"Crawler Mine",
"The MOTHERLODE!!",
},
[23394] = {
"Promenade Sentinel",
"Black Temple",
"enUS",
},
[71123] = {
"Echo of Y'Shaarj",
"Heart of the Old God Scenario",
"enUS",
},
[209230] = {
"Kyrioss",
"The Rookery",
"enUS",
},
[208198] = {
"Whiiskeyz",
"Scarlet Monastery",
"enUS",
},
[19557] = {
"Greater Frayer",
"Tempest Keep: The Botanica",
"enUS",
},
[208521] = {
"Pumpkin Soldier",
"Scarlet Monastery",
"enUS",
},
[61485] = {
"General Pa'valak",
"Siege of Niuzao Temple",
"enUS",
},
[131436] = {
"Chosen Blood Matron",
"The Underrot",
"enUS",
},
[205384] = {
"Infinite Chronoweaver",
"Dawn of the Infinite",
"enUS",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
"enUS",
},
[134251] = {
"Seneschal M'bara",
"Kings' Rest",
},
[53617] = {
"Molten Erupter",
"Firelands",
"enUS",
},
[70232] = {
"Muckbat",
"Throne of Thunder",
"enUS",
},
[72791] = {
"Lingering Corruption",
"Siege of Orgrimmar",
"enUS",
},
[144296] = {
"Spider Tank",
"Operation: Mechagon",
"enUS",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
"enUS",
},
[213835] = {
"Candleclaw Scrambler",
"New Candle, New Hope",
"enUS",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
"enUS",
},
[166301] = {
"Mistveil Stalker",
"Mists of Tirna Scithe",
},
[71380] = {
"Animated Stone Mogu",
"Siege of Orgrimmar",
"enUS",
},
[114783] = {
"Reformed Maiden",
"Return to Karazhan",
},
[60398] = {
"Emperor's Courage",
"Mogu'shan Vaults",
"enUS",
},
[114627] = {
"Shrieking Terror",
"Return to Karazhan",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
"enUS",
},
[62637] = {
"Cursed Brew",
"Greenstone Village",
"enUS",
},
[213830] = {
"Candleclaw Kobold",
"New Candle, New Hope",
"enUS",
},
[72276] = {
"Amalgam of Corruption",
"Siege of Orgrimmar",
"enUS",
},
[62511] = {
"Amber-Shaper Un'sok",
"Heart of Fear",
"enUS",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
"enUS",
},
[178008] = {
"Decrepit Orb",
"Sanctum of Domination",
},
[61565] = {
"Quilen Statue",
"Crypt of Forgotten Kings",
"enUS",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
"enUS",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
"enUS",
},
[130488] = {
"Mech Jockey",
"The MOTHERLODE!!",
},
[71156] = {
"Kaz'tik the Manipulator",
"Siege of Orgrimmar",
"enUS",
},
[198998] = {
"Tyr, the Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[18405] = {
"Tempest-Forge Peacekeeper",
"Tempest Keep: The Botanica",
"enUS",
},
[114624] = {
"Arcane Warden",
"Return to Karazhan",
},
[71385] = {
"Sri'thik Bombardier",
"Siege of Orgrimmar",
"enUS",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
"enUS",
},
[213576] = {
"Verdant Boughwalker",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[205644] = {
"Oozing Sludge",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70230] = {
"Zandalari Blade Initiate",
"Throne of Thunder",
"enUS",
},
[63853] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[208459] = {
"Fiery Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72661] = {
"Zeal",
"Siege of Orgrimmar",
"enUS",
},
[70746] = {
"Frostmane Flesh-Eater",
"Blood in the Snow",
"enUS",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
"enUS",
},
[22883] = {
"Aqueous Spawn",
"Black Temple",
"enUS",
},
[213833] = {
"Candleclaw Knight",
"New Candle, New Hope",
"enUS",
},
[22947] = {
"Mother Shahraz",
"Black Temple",
"enUS",
},
[71382] = {
"Burial Urn",
"Siege of Orgrimmar",
"enUS",
},
[210507] = {
"Stalwart Bristlebruin",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[60399] = {
"Qin-xi",
"Mogu'shan Vaults",
"enUS",
},
[23172] = {
"Hand of Gorefiend",
"Black Temple",
"enUS",
},
[196946] = {
"Lurking Lunker",
"Vault of the Incarnates",
"enUS",
},
[23236] = {
"Bonechewer Shield Disciple",
"Black Temple",
"enUS",
},
[213834] = {
"Candleclaw Mole",
"New Candle, New Hope",
"enUS",
},
[186208] = {
"Rotbow Ranger",
"Brackenhide Hollow",
"enUS",
},
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
"enUS",
},
[208461] = {
"Scorching Brambles",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72662] = {
"Vanity",
"Siege of Orgrimmar",
"enUS",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[116549] = {
"Backup Singer",
"Return to Karazhan",
},
[207438] = {
"Headless Horseman",
"Scarlet Monastery",
"enUS",
},
[164707] = {
"Congealed Slime",
"Plaguefall",
},
[59184] = {
"Jandice Barov",
"Scholomance",
"enUS",
},
[71383] = {
"Kor'thik Warcaller",
"Siege of Orgrimmar",
"enUS",
},
[23523] = {
"Ashtongue Elementalist",
"Black Temple",
"enUS",
},
[114626] = {
"Forlorn Spirit",
"Return to Karazhan",
},
[23524] = {
"Ashtongue Spiritbinder",
"Black Temple",
"enUS",
},
[198995] = {
"Chronikar",
"Dawn of the Infinite",
"enUS",
},
[96587] = {
"Felsworn Infester",
"Vault of the Wardens",
"enUS",
},
[59632] = {
"Champion Sithiss",
"A Brewing Storm",
"enUS",
},
[203857] = {
"Horde Warlock",
"Dawn of the Infinite",
"enUS",
},
[68313] = {
"Roaming Fog",
"Throne of Thunder",
"enUS",
},
[72535] = {
"Stone Statue",
"Siege of Orgrimmar",
"enUS",
},
[72663] = {
"Arrogance",
"Siege of Orgrimmar",
"enUS",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[198996] = {
"Manifested Timeways",
"Dawn of the Infinite",
"enUS",
},
[154744] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[60208] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
"enUS",
},
[69465] = {
"Jin'rokh the Breaker",
"Throne of Thunder",
"enUS",
},
[60400] = {
"Jan-xi",
"Mogu'shan Vaults",
"enUS",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
"enUS",
},
[198997] = {
"Blight of Galakrond",
"Dawn of the Infinite",
"enUS",
},
[59518] = {
"Bloated Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[98406] = {
"Embershard Scorpion",
"Neltharion's Lair",
"enUS",
},
[180070] = {
"Mawsworn Scryer",
"Sanctum of Domination",
},
[165222] = {
"Zolramus Bonemender",
"The Necrotic Wake",
},
[210512] = {
"Ashen Treant",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[72412] = {
"Kor'kron Grunt",
"Siege of Orgrimmar",
"enUS",
},
[196198] = {
"Algeth'ar Security",
"Algeth'ar Academy",
},
[207186] = {
"Unruly Stormrook",
"The Rookery",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[205651] = {
"Bubbling Slime",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
"enUS",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
"enUS",
},
[165479] = {
"Court Enforcer",
"Castle Nathria",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
"enUS",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
"enUS",
},
[198999] = {
"Morchie",
"Dawn of the Infinite",
"enUS",
},
[71155] = {
"Korven the Prime",
"Siege of Orgrimmar",
"enUS",
},
[71773] = {
"Kor'kron Warshaman",
"Siege of Orgrimmar",
"enUS",
},
[203861] = {
"Horde Destroyer",
"Dawn of the Infinite",
"enUS",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
"enUS",
},
[214608] = {
"Screaming Soul",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
"enUS",
},
[66652] = {
"Lesser Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[199000] = {
"Chrono-Lord Deios",
"Dawn of the Infinite",
"enUS",
},
[22884] = {
"Leviathan",
"Black Temple",
"enUS",
},
[22917] = {
"Illidan Stormrage",
"Black Temple",
"enUS",
},
[22948] = {
"Gurtogg Bloodboil",
"Black Temple",
"enUS",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
"enUS",
},
[63036] = {
"Kor'thik Extremist",
"Heart of Fear",
"enUS",
},
[114629] = {
"Spectral Retainer",
"Return to Karazhan",
},
[71770] = {
"Kor'kron Ironblade",
"Siege of Orgrimmar",
"enUS",
},
[102095] = {
"Risen Lancer",
"Black Rook Hold",
"enUS",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
"enUS",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
"enUS",
},
[58674] = {
"Angry Hound",
"Scarlet Halls",
"enUS",
},
[58738] = {
"Viletongue Skirmisher",
"A Brewing Storm",
"enUS",
},
[72434] = {
"Treasury Guard",
"Siege of Orgrimmar",
"enUS",
},
[60913] = {
"Energy Charge",
"Mogu'shan Vaults",
"enUS",
},
[180323] = {
"Fatespawn Monstrosity",
"Sanctum of Domination",
},
[114633] = {
"Spectral Valet",
"Return to Karazhan",
},
[135552] = {
"Deathtouched Slaver",
"Waycrest Manor",
"enUS",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
"enUS",
},
[71259] = {
"Huntmaster S'thoc",
"A Brewing Storm",
"enUS",
},
[129366] = {
"Bilge Rat Buccaneer",
"Siege of Boralus",
},
[71515] = {
"General Nazgrim",
"Siege of Orgrimmar",
"enUS",
},
[207198] = {
"Cursed Thunderer",
"The Rookery",
"enUS",
},
[71771] = {
"Kor'kron Arcweaver",
"Siege of Orgrimmar",
"enUS",
},
[73310] = {
"Dragonmaw War Banner",
"Siege of Orgrimmar",
"enUS",
},
[63346] = {
"The Dark of Night",
"Terrace of Endless Spring",
"enUS",
},
[205656] = {
"Sundered Chemist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[70236] = {
"Crazed Storm-Caller",
"Throne of Thunder",
"enUS",
},
[72411] = {
"Kor'kron Provisioner",
"Siege of Orgrimmar",
"enUS",
},
[210518] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[202375] = {
"Zskarn",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205152] = {
"Lerai, Timesworn Maiden",
"Dawn of the Infinite",
"enUS",
},
[87252] = {
"Unruly Ogron",
"Iron Docks",
},
[164461] = {
"Sathel the Accursed",
"Theater of Pain",
},
[134012] = {
"Taskmaster Askari",
"The MOTHERLODE!!",
},
[69473] = {
"Ra-den",
"Throne of Thunder",
"enUS",
},
[64368] = {
"Apparition of Fear",
"Terrace of Endless Spring",
"enUS",
},
[181861] = {
"Magmatusk",
"Neltharus",
"enUS",
},
[60402] = {
"Zandalari Fire-Dancer",
"Mogu'shan Vaults",
"enUS",
},
[71772] = {
"Kor'kron Assassin",
"Siege of Orgrimmar",
"enUS",
},
[115019] = {
"Coldmist Widow",
"Return to Karazhan",
},
[33983] = {
"Constrictor Tentacle",
"Ulduar",
"enUS",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
"enUS",
},
[129600] = {
"Bilge Rat Brinescale",
"Freehold",
"enUS",
},
[58739] = {
"Borokhula the Destroyer",
"A Brewing Storm",
"enUS",
},
[58803] = {
"Residual Hatred",
"Shado-Pan Monastery",
"enUS",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[56884] = {
"Corrupted Taran Zhu",
"Shado-Pan Monastery",
"enUS",
},
[70877] = {
"Volatile Earth",
"Heart of the Old God Scenario",
"enUS",
},
[164463] = {
"Paceran the Virulent",
"Theater of Pain",
},
[72945] = {
"Dragonmaw Bonecrusher",
"Siege of Orgrimmar",
"enUS",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
"enUS",
},
[102094] = {
"Risen Swordsman",
"Black Rook Hold",
"enUS",
},
[71517] = {
"Kor'kron Arcweaver",
"Siege of Orgrimmar",
"enUS",
},
[114632] = {
"Spectral Attendant",
"Return to Karazhan",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
"enUS",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
"enUS",
},
[180336] = {
"Cartel Wiseguy",
"Tazavesh, the Veiled Market",
},
[73185] = {
"Enraged Mushan Beast",
"Siege of Orgrimmar",
"enUS",
},
[70238] = {
"Unblinking Eye",
"Throne of Thunder",
"enUS",
},
[206172] = {
"Nymue",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[134024] = {
"Devouring Maggot",
"Waycrest Manor",
"enUS",
},
[73188] = {
"Captive Cave Bat",
"Siege of Orgrimmar",
"enUS",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
"enUS",
},
[22853] = {
"Illidari Defiler",
"Black Temple",
"enUS",
},
[22885] = {
"Dragon Turtle",
"Black Temple",
"enUS",
},
[101839] = {
"Risen Companion",
"Black Rook Hold",
"enUS",
},
[22949] = {
"Gathios the Shatterer",
"Black Temple",
"enUS",
},
[197985] = {
"Flame Channeler",
"Ruby Life Pools",
"enUS",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
"enUS",
},
[131009] = {
"Spirit of Gold",
"Atal'Dazar",
"enUS",
},
[201320] = {
"Rashok",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[207197] = {
"Cursed Rookguard",
"The Rookery",
"enUS",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
"enUS",
},
[64947] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[129602] = {
"Irontide Enforcer",
"Freehold",
"enUS",
},
[23237] = {
"Bonechewer Blood Prophet",
"Black Temple",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
"enUS",
},
[71409] = {
"Commander Zak'tar",
"Siege of Orgrimmar",
"enUS",
},
[205151] = {
"Tyr's Vanguard",
"Dawn of the Infinite",
"enUS",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
"enUS",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[171376] = {
"Head Custodian Javlin",
"Sanguine Depths",
},
[208478] = {
"Volcoross",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[150146] = {
"Scrapbone Shaman",
"Operation: Mechagon",
"enUS",
},
[171384] = {
"Research Scribe",
"Sanguine Depths",
},
[207199] = {
"Cursed Rooktender",
"The Rookery",
"enUS",
},
[205408] = {
"Infinite Timeslicer",
"Dawn of the Infinite",
"enUS",
},
[71395] = {
"Modified Anima Golem",
"Siege of Orgrimmar",
"enUS",
},
[216155] = {
"Skittering Ambusher",
"Earthcrawl Mines",
"enUS",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
"enUS",
},
[179821] = {
"Commander Zo'far",
"Tazavesh, the Veiled Market",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
"enUS",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
"enUS",
},
[204931] = {
"Fyrakk",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
"enUS",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
"enUS",
},
[56766] = {
"Volatile Energy",
"Shado-Pan Monastery",
"enUS",
},
[71392] = {
"Shadow Ritualist Phylactery",
"Siege of Orgrimmar",
"enUS",
},
[67426] = {
"Admiral Hagman",
"Naval Battle Scenario",
"enUS",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
"enUS",
},
[205673] = {
"Sundered Devourer",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[73951] = {
"Commander Tik",
"Siege of Orgrimmar",
"enUS",
},
[33985] = {
"Corruptor Tentacle",
"Ulduar",
"enUS",
},
[23239] = {
"Bonechewer Combatant",
"Black Temple",
"enUS",
},
[207969] = {
"Horde Raider",
"Dawn of the Infinite",
"enUS",
},
[101074] = {
"Hatespawn Whelpling",
"Darkheart Thicket",
"enUS",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
"enUS",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
"enUS",
},
[180335] = {
"Cartel Smuggler",
"Tazavesh, the Veiled Market",
},
[207202] = {
"Void Fragment",
"The Rookery",
"enUS",
},
[150142] = {
"Scrapbone Trashtosser",
"Operation: Mechagon",
"enUS",
},
[73184] = {
"Starved Yeti",
"Siege of Orgrimmar",
"enUS",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
"enUS",
},
[186739] = {
"Azureblade",
"The Azure Vault",
"enUS",
},
[104273] = {
"Jazshariu",
"Court of Stars",
"enUS",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[208994] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[168310] = {
"Plagueroc",
"Plaguefall",
},
[115020] = {
"Arcanid",
"Return to Karazhan",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[98900] = {
"Wyrmtongue Trickster",
"Black Rook Hold",
"enUS",
},
[101075] = {
"Wormspeaker Devout",
"Neltharion's Lair",
"enUS",
},
[228953] = {
"Skittering Intruder",
"Earthcrawl Mines",
"enUS",
},
[147614] = {
"Dark Iron Primalist",
"Battle of Dazar'alor",
"enUS",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
"enUS",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
"enUS",
},
[71408] = {
"Kun-Da",
"Siege of Orgrimmar",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[22950] = {
"High Nethermancer Zerevor",
"Black Temple",
"enUS",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
"enUS",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
"enUS",
},
[126919] = {
"Irontide Stormcaller",
"Freehold",
"enUS",
},
[174197] = {
"Battlefield Ritualist",
"Theater of Pain",
},
[205158] = {
"Spurlok, Timesworn Sentinel",
"Dawn of the Infinite",
"enUS",
},
[52409] = {
"Ragnaros",
"Firelands",
"enUS",
},
[71152] = {
"Skeer the Bloodseeker",
"Siege of Orgrimmar",
"enUS",
},
[56631] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[72423] = {
"Auctioneer Fazdran",
"Siege of Orgrimmar",
"enUS",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
"enUS",
},
[135049] = {
"Dreadwing Raven",
"Waycrest Manor",
"enUS",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
"enUS",
},
[58998] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[23398] = {
"Angered Soul Fragment",
"Black Temple",
"enUS",
},
[205671] = {
"Shadow Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
"enUS",
},
[132491] = {
"Kul Tiran Marksman",
"Siege of Boralus",
},
[120651] = {
"Explosives",
"Operation: Mechagon",
},
[128967] = {
"Ashvane Sniper",
"Siege of Boralus",
},
[72421] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[207207] = {
"Voidstone Monstrosity",
"The Rookery",
"enUS",
},
[154758] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[205672] = {
"Flame Additive",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[136330] = {
"Soul Thorns",
"Waycrest Manor",
"enUS",
},
[115406] = {
"Knight",
"Return to Karazhan",
},
[69351] = {
"Greater Cave Bat",
"Throne of Thunder",
"enUS",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
"enUS",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
"enUS",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[201579] = {
"Magmorax",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214117] = {
"Stormflurry Totem",
"Throne of the Tides",
"enUS",
},
[23047] = {
"Shadowmoon Soldier",
"Black Temple",
"enUS",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
"enUS",
},
[175992] = {
"Dutiful Attendant",
"Castle Nathria",
},
[165762] = {
"Soul Infuser",
"Castle Nathria",
},
[17993] = {
"Bloodwarder Protector",
"Tempest Keep: The Botanica",
"enUS",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[136076] = {
"Agitated Nimbus",
"Temple of Sethraliss",
},
[70245] = {
"Training Dummy",
"Throne of Thunder",
"enUS",
},
[115407] = {
"Rook",
"Return to Karazhan",
},
[58807] = {
"Vestige of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[109908] = {
"Nightmare Abomination",
"Darkheart Thicket",
"enUS",
},
[61623] = {
"Sap Globule",
"Siege of Niuzao Temple",
"enUS",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
"enUS",
},
[213607] = {
"Deep Sea Murloc",
"Throne of the Tides",
"enUS",
},
[61174] = {
"Cursed Jade",
"Greenstone Village",
"enUS",
},
[59191] = {
"Commander Lindon",
"Scarlet Halls",
"enUS",
},
[71397] = {
"Zar'thik Amber Priest",
"Siege of Orgrimmar",
"enUS",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
"enUS",
},
[157571] = {
"Mawsworn Flametender",
"Torghast, Tower of the Damned",
},
[208239] = {
"Skittering Menace",
"Earthcrawl Mines",
"enUS",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[136353] = {
"Colossal Tentacle",
"Shrine of the Storm",
"enUS",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
"enUS",
},
[70246] = {
"Spirit Flayer",
"Throne of Thunder",
"enUS",
},
[183671] = {
"Monstrous Soul",
"Sepulcher of the First Ones",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
"enUS",
},
[157572] = {
"Mawsworn Firecaller",
"Torghast, Tower of the Damned",
},
[63031] = {
"Set'thik Fanatic",
"Heart of Fear",
"enUS",
},
[211306] = {
"Fiery Vines",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[22887] = {
"High Warlord Naj'entus",
"Black Temple",
"enUS",
},
[164737] = {
"Brood Ambusher",
"Plaguefall",
},
[22951] = {
"Lady Malande",
"Black Temple",
"enUS",
},
[71398] = {
"Zar'thik Swarmer",
"Siege of Orgrimmar",
"enUS",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[137103] = {
"Blood Visage",
"The Underrot",
"enUS",
},
[135329] = {
"Matron Bryndle",
"Waycrest Manor",
"enUS",
},
[23111] = {
"Shadowy Construct",
"Black Temple",
"enUS",
},
[33988] = {
"Immortal Guardian",
"Ulduar",
"enUS",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[70247] = {
"Venomous Head",
"Throne of Thunder",
"enUS",
},
[72422] = {
"Auctioneer Drezmit",
"Siege of Orgrimmar",
"enUS",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[180091] = {
"Ancient Core Hound",
"Tazavesh, the Veiled Market",
"enUS",
},
[63030] = {
"Enslaved Bonesmasher",
"Heart of Fear",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[23399] = {
"Suffering Soul Fragment",
"Black Temple",
"enUS",
},
[58876] = {
"Starving Hound",
"Scarlet Halls",
"enUS",
},
[67177] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[69352] = {
"Vampiric Cave Bat",
"Throne of Thunder",
"enUS",
},
[102232] = {
"Rockbound Trapper",
"Neltharion's Lair",
"enUS",
},
[165763] = {
"Vile Occultist",
"Castle Nathria",
},
[180348] = {
"Cartel Muscle",
"Tazavesh, the Veiled Market",
},
[166275] = {
"Mistveil Shaper",
"Mists of Tirna Scithe",
},
[168578] = {
"Fungalmancer",
"Plaguefall",
},
[58812] = {
"Hateful Essence",
"Shado-Pan Monastery",
"enUS",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
"enUS",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[165010] = {
"Congealed Slime",
"Plaguefall",
},
[208242] = {
"Nerubian Darkcaster",
"Earthcrawl Mines",
"enUS",
},
[150169] = {
"Toxic Lurker",
"Operation: Mechagon",
"enUS",
},
[166276] = {
"Mistveil Guardian",
"Mists of Tirna Scithe",
},
[208241] = {
"Ankle Biter",
"Earthcrawl Mines",
"enUS",
},
[170882] = {
"Bone Magus",
"Theater of Pain",
},
[122965] = {
"Vol'kaal",
"Atal'Dazar",
"enUS",
},
[23049] = {
"Shadowmoon Weapon Master",
"Black Temple",
"enUS",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[61946] = {
"Harthak Stormcaller",
"Pandaria",
"enUS",
},
[17994] = {
"Bloodwarder Falconer",
"Tempest Keep: The Botanica",
"enUS",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[58108] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[71401] = {
"Proto-Drake Whelp",
"The Secrets of Ragefire",
"enUS",
},
[72424] = {
"Auctioneer Ralinza",
"Siege of Orgrimmar",
"enUS",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
"enUS",
},
[176523] = {
"Painsmith Raznal",
"Sanctum of Domination",
},
[56890] = {
"Krik'thik Infiltrator",
"Gate of the Setting Sun",
"enUS",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
"enUS",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
"enUS",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
"enUS",
},
[59193] = {
"Boneweaver",
"Scholomance",
"enUS",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
"enUS",
},
[71529] = {
"Thok the Bloodthirsty",
"Siege of Orgrimmar",
"enUS",
},
[169861] = {
"Ickor Bileflesh",
"Plaguefall",
},
[64183] = {
"Enormous Stone Quilen",
"Mogu'shan Vaults",
"enUS",
},
[59771] = {
"Zombified Corpse",
"Scarlet Monastery",
"enUS",
},
[180864] = {
"High Torturer",
"Sanctum of Domination",
},
[53500] = {
"Living Meteor",
"Firelands",
"enUS",
},
[59705] = {
"Scarlet Flamethrower",
"Scarlet Monastery",
"enUS",
},
[72425] = {
"Auctioneer Xifa",
"Siege of Orgrimmar",
"enUS",
},
[179841] = {
"Veteran Sparkcaster",
"Tazavesh, the Veiled Market",
},
[22952] = {
"Veras Darkshadow",
"Black Temple",
"enUS",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
"enUS",
},
[66413] = {
"Yeasty Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[150160] = {
"Scrapbone Bully",
"Operation: Mechagon",
"enUS",
},
[213873] = {
"Waxy Globule",
"New Candle, New Hope",
"enUS",
},
[173189] = {
"Nathrian Hawkeye",
"Castle Nathria",
},
[208244] = {
"Nerubian Threadmancer",
"Earthcrawl Mines",
"enUS",
},
[179842] = {
"Commerce Enforcer",
"Tazavesh, the Veiled Market",
},
[71658] = {
"Kor'kron Jailer",
"Siege of Orgrimmar",
"enUS",
},
[204918] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[173190] = {
"Court Hawkeye",
"Castle Nathria",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
"enUS",
},
[134041] = {
"Infected Peasant",
"Waycrest Manor",
"enUS",
},
[183425] = {
"Wholesome Host",
"Return to Karazhan",
},
[208245] = {
"Skittering Swarmer",
"Earthcrawl Mines",
"enUS",
},
[56763] = {
"Regenerating Sha",
"Shado-Pan Monastery",
"enUS",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
"enUS",
},
[72810] = {
"Wise Mistweaver Spirit",
"Siege of Orgrimmar",
"enUS",
},
[180104] = {
"Tangling Bloom",
"The Shadowlands",
},
[23400] = {
"Illidari Archon",
"Black Temple",
"enUS",
},
[183423] = {
"Reformed Bachelor",
"Return to Karazhan",
},
[71405] = {
"Set'thik Wind Wielder",
"Siege of Orgrimmar",
"enUS",
},
[210293] = {
"Firelands Destroyer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[60731] = {
"Undying Shadows",
"Mogu'shan Vaults",
"enUS",
},
[70762] = {
"Lieutenant Sparklighter",
"Naval Battle Scenario",
"enUS",
},
[88163] = {
"Grom'kar Cinderseer",
"Grimrail Depot",
"enUS",
},
[205435] = {
"Epoch Ripper",
"Dawn of the Infinite",
"enUS",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
"enUS",
},
[70893] = {
"Lieutenant Blasthammer",
"Naval Battle Scenario",
"enUS",
},
[179847] = {
"Shadowsteel Horror",
"Sanctum of Domination",
},
[210294] = {
"Flamespreader",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[58555] = {
"Scarlet Fanatic",
"Scarlet Monastery",
"enUS",
},
[61945] = {
"Gurthan Iron Maw",
"Pandaria",
"enUS",
},
[62009] = {
"Shadows of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[18155] = {
"Bloodfalcon",
"Tempest Keep: The Botanica",
"enUS",
},
[202108] = {
"Djaradin Dragonhunter",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56636] = {
"Commander Ri'mok",
"Gate of the Setting Sun",
"enUS",
},
[179334] = {
"Portalmancer Zo'nyy",
"Tazavesh, the Veiled Market",
"enUS",
},
[210295] = {
"Flamewaker Infernoguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[69869] = {
"Essence of Anima",
"Throne of Thunder",
"enUS",
},
[150165] = {
"Slime Elemental",
"Operation: Mechagon",
"enUS",
},
[122963] = {
"Rezan",
"Atal'Dazar",
"enUS",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
"enUS",
},
[74091] = {
"Kor'kron Iron Sentinel",
"Siege of Orgrimmar",
"enUS",
},
[68078] = {
"Iron Qon",
"Throne of Thunder",
"enUS",
},
[58683] = {
"Scarlet Myrmidon",
"Scarlet Halls",
"enUS",
},
[72428] = {
"Horthus",
"Siege of Orgrimmar",
"enUS",
},
[56764] = {
"Consuming Sha",
"Shado-Pan Monastery",
"enUS",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
"enUS",
},
[72427] = {
"Orgrimmar Peon",
"Siege of Orgrimmar",
"enUS",
},
[176521] = {
"Stygian Abductor",
"Sanctum of Domination",
},
[207482] = {
"Invasive Sporecap",
"Earthcrawl Mines",
"enUS",
},
[205691] = {
"Iridikron's Creation",
"Dawn of the Infinite",
"enUS",
},
[61242] = {
"Glintrok Ironhide",
"Mogu'shan Palace",
"enUS",
},
[202109] = {
"Djaradin Commander",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
"enUS",
},
[61434] = {
"Sik'thik Vanguard",
"Siege of Niuzao Temple",
"enUS",
},
[63032] = {
"Sra'thik Shield Master",
"Heart of Fear",
"enUS",
},
[69870] = {
"Essence of Vita",
"Throne of Thunder",
"enUS",
},
[58810] = {
"Fragment of Hatred",
"Shado-Pan Monastery",
"enUS",
},
[68079] = {
"Ro'shak",
"Throne of Thunder",
"enUS",
},
[58684] = {
"Scarlet Scourge Hewer",
"Scarlet Halls",
"enUS",
},
[72429] = {
"Olvia",
"Siege of Orgrimmar",
"enUS",
},
[210290] = {
"Firelands Flameguard",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[33288] = {
"Yogg-Saron",
"Ulduar",
"enUS",
},
[208243] = {
"Nerubian Slasher",
"Earthcrawl Mines",
"enUS",
},
[72941] = {
"Dragonmaw Grunt",
"Siege of Orgrimmar",
"enUS",
},
[150168] = {
"Toxic Monstrosity",
"Operation: Mechagon",
"enUS",
},
[73197] = {
"Lesser Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[22953] = {
"Wrathbone Flayer",
"Black Temple",
"enUS",
},
[61240] = {
"Glintrok Skulker",
"Mogu'shan Palace",
"enUS",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
"enUS",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
"enUS",
},
[139422] = {
"Scaled Krolusk Tamer",
"Temple of Sethraliss",
},
[210288] = {
"Ancient Core Hound",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[127315] = {
"Reanimation Totem",
"Atal'Dazar",
"enUS",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
"enUS",
},
[56637] = {
"Ook-Ook",
"Stormstout Brewery",
"enUS",
},
[72430] = {
"Shan'ti",
"Siege of Orgrimmar",
"enUS",
},
[56765] = {
"Destroying Sha",
"Shado-Pan Monastery",
"enUS",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
"enUS",
},
[23337] = {
"Illidari Centurion",
"Black Temple",
"enUS",
},
[72942] = {
"Dragonmaw Flagbearer",
"Siege of Orgrimmar",
"enUS",
},
[23401] = {
"Hungering Soul Fragment",
"Black Temple",
"enUS",
},
[213883] = {
"Dripear the Waxy",
"New Candle, New Hope",
"enUS",
},
[69232] = {
"Ball Lightning",
"Throne of Thunder",
"enUS",
},
[71407] = {
"Amber",
"Siege of Orgrimmar",
"enUS",
},
[179852] = {
"Soulless Vengeance",
"The Shadowlands",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
"enUS",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
"enUS",
},
[131492] = {
"Devout Blood Priest",
"The Underrot",
"enUS",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[111068] = {
"Archmage Galeorn",
"Black Rook Hold",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[22855] = {
"Illidari Nightlord",
"Black Temple",
"enUS",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[61947] = {
"Kargesh Ribcrusher",
"Mogu'shan Palace",
"enUS",
},
[114266] = {
"Shoreline Tidespeaker",
"Return to Karazhan",
},
[72943] = {
"Dragonmaw Proto-Drake",
"Siege of Orgrimmar",
"enUS",
},
[128969] = {
"Ashvane Commander",
"Siege of Boralus",
},
[197509] = {
"Primal Thundercloud",
"Ruby Life Pools",
"enUS",
},
[199812] = {
"Zaqali Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[118489] = {
"Corrupted Risen Soldier",
"Black Rook Hold - Artifact Challenge",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[98275] = {
"Risen Archer",
"Black Rook Hold",
"enUS",
},
[122967] = {
"Priestess Alun'za",
"Atal'Dazar",
"enUS",
},
[212327] = {
"Zaqali Flamemancer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
"enUS",
},
[135052] = {
"Blight Toad",
"Waycrest Manor",
"enUS",
},
[58685] = {
"Scarlet Evangelist",
"Scarlet Halls",
"enUS",
},
[134284] = {
"Fallen Deathspeaker",
"The Underrot",
"enUS",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
"enUS",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
"enUS",
},
[63035] = {
"Zar'thik Zealot",
"Heart of Fear",
"enUS",
},
[61814] = {
"Jin Ironfist",
"Crypt of Forgotten Kings",
"enUS",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
"enUS",
},
[71153] = {
"Hisek the Swarmkeeper",
"Siege of Orgrimmar",
"enUS",
},
[128455] = {
"T'lonja",
"Atal'Dazar",
"enUS",
},
[65402] = {
"Gurthan Swiftblade",
"Mogu'shan Palace",
"enUS",
},
[61243] = {
"Gekkan",
"Mogu'shan Palace",
"enUS",
},
[61436] = {
"Sik'thik Bladedancer",
"Siege of Niuzao Temple",
"enUS",
},
[122968] = {
"Yazma",
"Atal'Dazar",
"enUS",
},
[71921] = {
"Darkfang",
"Siege of Orgrimmar",
"enUS",
},
[187021] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[135048] = {
"Gorestained Piglet",
"Waycrest Manor",
"enUS",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
"enUS",
},
[72433] = {
"Mokvar the Treasurer",
"Siege of Orgrimmar",
"enUS",
},
[150143] = {
"Scrapbone Grinder",
"Operation: Mechagon",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
"enUS",
},
[154014] = {
"Imprisoned Cabalist",
"Torghast, Tower of the Damned",
"enUS",
},
[40446] = {
"Skar'this the Summoner",
"Coilfang: The Slave Pens",
"enUS",
},
[71154] = {
"Ka'roz the Locust",
"Siege of Orgrimmar",
"enUS",
},
[22954] = {
"Illidari Fearbringer",
"Black Temple",
"enUS",
},
[118491] = {
"Corrupted Risen Mage",
"Black Rook Hold - Artifact Challenge",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[188302] = {
"Reconfiguration Emitter",
"Castle Nathria",
},
[122969] = {
"Zanchuli Witch-Doctor",
"Atal'Dazar",
"enUS",
},
[23397] = {
"Illidari Blood Lord",
"Black Temple",
"enUS",
},
[56511] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
"enUS",
},
[58676] = {
"Scarlet Defender",
"Scarlet Halls",
"enUS",
},
[207205] = {
"Stormguard Gorren",
"The Rookery",
"enUS",
},
[206214] = {
"Infinite Infiltrator",
"Dawn of the Infinite",
"enUS",
},
[72562] = {
"Poison Bolt Totem",
"Siege of Orgrimmar",
"enUS",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
"enUS",
},
[101476] = {
"Molten Charskin",
"Neltharion's Lair",
"enUS",
},
[99664] = {
"Restless Soul",
"Black Rook Hold",
"enUS",
},
[23402] = {
"Illidari Battle-mage",
"Black Temple",
"enUS",
},
[144293] = {
"Waste Processing Unit",
"Operation: Mechagon",
"enUS",
},
[157810] = {
"Mawsworn Endbringer",
"Torghast, Tower of the Damned",
"enUS",
},
[23498] = {
"Parasitic Shadowfiend",
"Black Temple",
"enUS",
},
[71388] = {
"Amber-Encased Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[23018] = {
"Shadowmoon Houndmaster",
"Black Temple",
"enUS",
},
[122970] = {
"Shadowblade Stalker",
"Atal'Dazar",
"enUS",
},
[71923] = {
"Bloodclaw",
"Siege of Orgrimmar",
"enUS",
},
[129367] = {
"Bilge Rat Tempest",
"Siege of Boralus",
},
[144294] = {
"Mechagon Tinkerer",
"Operation: Mechagon",
"enUS",
},
[164506] = {
"Ancient Captain",
"Theater of Pain",
},
[71518] = {
"Kor'kron Assassin",
"Siege of Orgrimmar",
"enUS",
},
[70235] = {
"Frozen Head",
"Throne of Thunder",
"enUS",
},
[25865] = {
"Frozen Core",
"Coilfang: The Slave Pens",
"enUS",
},
[147621] = {
"Dark Iron Vanguard",
"Battle of Dazar'alor",
"enUS",
},
[72947] = {
"Kor'kron Demolisher",
"Siege of Orgrimmar",
"enUS",
},
[81236] = {
"Grimrail Technician",
"Grimrail Depot",
"enUS",
},
[62205] = {
"Wing Leader Ner'onok",
"Siege of Niuzao Temple",
"enUS",
},
[58737] = {
"Viletongue Raider",
"A Brewing Storm",
"enUS",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[62397] = {
"Wind Lord Mel'jarak",
"Heart of Fear",
"enUS",
},
[208208] = {
"Alliance Destroyer",
"Dawn of the Infinite",
"enUS",
},
[122971] = {
"Dazar'ai Juggernaut",
"Atal'Dazar",
"enUS",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
"enUS",
},
[164510] = {
"Shambling Arbalest",
"Theater of Pain",
},
[209800] = {
"Cycle Warden",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
"enUS",
},
[177816] = {
"Interrogation Specialist",
"Tazavesh, the Veiled Market",
"enUS",
},
[72150] = {
"Kor'kron Shadowmage",
"Siege of Orgrimmar",
"enUS",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
"enUS",
},
[154020] = {
"Prisonbreak Cursewalker",
"Torghast, Tower of the Damned",
"enUS",
},
[62254] = {
"Quilen Watcher",
"Crypt of Forgotten Kings",
"enUS",
},
[71157] = {
"Xaril the Poisoned Mind",
"Siege of Orgrimmar",
"enUS",
},
[60143] = {
"Gara'jal the Spiritbinder",
"Mogu'shan Vaults",
"enUS",
},
[63597] = {
"Coagulated Amber",
"Heart of Fear",
"enUS",
},
[177817] = {
"Support Officer",
"Tazavesh, the Veiled Market",
"enUS",
},
[98280] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[122972] = {
"Dazar'ai Augur",
"Atal'Dazar",
"enUS",
},
[41096] = {
"Naz'jar Oracle",
"Throne of the Tides",
"enUS",
},
[129369] = {
"Irontide Raider",
"Siege of Boralus",
},
[98792] = {
"Wyrmtongue Scavenger",
"Black Rook Hold",
"enUS",
},
[115395] = {
"Queen",
"Return to Karazhan",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
"enUS",
},
[207177] = {
"Infinite Watchkeeper",
"Dawn of the Infinite",
"enUS",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
"enUS",
},
[64061] = {
"Mogu'shan Warden",
"Mogu'shan Vaults",
"enUS",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[71030] = {
"Overseer Elaglo",
"The Secrets of Ragefire",
"enUS",
},
[71158] = {
"Rik'kal the Dissector",
"Siege of Orgrimmar",
"enUS",
},
[22955] = {
"Charming Patron",
"Black Temple",
"enUS",
},
[72564] = {
"Doomlord",
"Siege of Orgrimmar",
"enUS",
},
[71542] = {
"Blood",
"Siege of Orgrimmar",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
},
[215177] = {
"Waximus",
"New Candle, New Hope",
"enUS",
},
[65785] = {
"Sergeant Grud",
"Theramore's Fall (A)",
"enUS",
},
[129370] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[22946] = {
"Shadowmoon War Hound",
"Black Temple",
"enUS",
},
[137830] = {
"Pallid Gorger",
"Waycrest Manor",
"enUS",
},
[175517] = {
"Symbiotic Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[72784] = {
"Kor'kron Gunner",
"Siege of Orgrimmar",
"enUS",
},
[199749] = {
"Timestream Anomaly",
"Dawn of the Infinite",
"enUS",
},
[70775] = {
"Horde Deckhand",
"Naval Battle Scenario",
"enUS",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[23403] = {
"Illidari Assassin",
"Black Temple",
"enUS",
},
[61183] = {
"Belligerent Blossom",
"Greenstone Village",
"enUS",
},
[61247] = {
"Glintrok Greenhorn",
"Mogu'shan Palace",
"enUS",
},
[98370] = {
"Ghostly Councilor",
"Black Rook Hold",
"enUS",
},
[71543] = {
"Immerseus",
"Siege of Orgrimmar",
"enUS",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
"enUS",
},
[33720] = {
"Obsidian Consort",
"Ulduar",
"enUS",
},
[98538] = {
"Lady Velandras Ravencrest",
"Black Rook Hold",
"enUS",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
"enUS",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
"enUS",
},
[205968] = {
"Fragment of Shadow",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[135263] = {
"Ashvane Spotter",
"Siege of Boralus",
},
[212793] = {
"Void Ascendant",
"The Rookery",
"enUS",
},
[206140] = {
"Coalesced Time",
"Dawn of the Infinite",
"enUS",
},
[156244] = {
"Winged Automaton",
"Torghast, Tower of the Damned",
},
[195222] = {
"Rotbow Sentry",
"Brackenhide Hollow",
"enUS",
},
[71160] = {
"Iyyokuk the Lucid",
"Siege of Orgrimmar",
"enUS",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[62633] = {
"Sik'thik Builder",
"Siege of Niuzao Temple",
"enUS",
},
[64446] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[69712] = {
"Ji-Kun",
"Throne of Thunder",
"enUS",
},
[60480] = {
"Titan Spark",
"Mogu'shan Vaults",
"enUS",
},
[101437] = {
"Burning Geode",
"UNKNOWN",
"enUS",
},
[208438] = {
"Infinite Saboteur",
"Dawn of the Infinite",
"enUS",
},
[61567] = {
"Vizier Jin'bak",
"Siege of Niuzao Temple",
"enUS",
},
[205623] = {
"Drazos Blackwing",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[56706] = {
"Krik'thik Bombardier",
"Gate of the Setting Sun",
"enUS",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
"enUS",
},
[130012] = {
"Irontide Ravager",
"Freehold",
"enUS",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[62632] = {
"Sik'thik Engineer",
"Siege of Niuzao Temple",
"enUS",
},
[71161] = {
"Kil'ruk the Wind-Reaver",
"Siege of Orgrimmar",
"enUS",
},
[205971] = {
"Fragment of Fire",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[101438] = {
"Vileshard Chunk",
"Neltharion's Lair",
"enUS",
},
[213806] = {
"Splotch",
"Throne of the Tides",
"enUS",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
"enUS",
},
[65611] = {
"Airship Marine",
"Theramore's Fall (A)",
"enUS",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[176959] = {
"Mawsworn Soulmage",
"Sanctum of Domination",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
"enUS",
},
[73541] = {
"Kor'kron Wolf Pup",
"Siege of Orgrimmar",
"enUS",
},
[70982] = {
"Frost Totem",
"Blood in the Snow",
"enUS",
},
[22847] = {
"Ashtongue Primalist",
"Black Temple",
"enUS",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[64063] = {
"Mogu'shan Arcanist",
"Mogu'shan Vaults",
"enUS",
},
[60033] = {
"Frenzied Spirit",
"Scarlet Monastery",
"enUS",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
"enUS",
},
[164926] = {
"Drust Boughbreaker",
"Mists of Tirna Scithe",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
"enUS",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[33716] = {
"Ruby Consort",
"Ulduar",
"enUS",
},
[166971] = {
"Castellan Niklaus",
"Castle Nathria",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[73538] = {
"Kor'kron War Wolf",
"Siege of Orgrimmar",
"enUS",
},
[135241] = {
"Bilge Rat Pillager",
"Siege of Boralus",
},
[203927] = {
"Failed Prototype",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[129758] = {
"Irontide Grenadier",
"Freehold",
"enUS",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
"enUS",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
"enUS",
},
[60197] = {
"Training Dummy",
"Scarlet Monastery",
"enUS",
},
[72954] = {
"Kor'thik Honor Guard",
"Siege of Orgrimmar",
"enUS",
},
[73152] = {
"Storeroom Guard",
"Siege of Orgrimmar",
"enUS",
},
[23436] = {
"Image of Dementia",
"Black Temple",
"enUS",
},
[203812] = {
"Voice From Beyond",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[214419] = {
"Void Cursed Crusher",
"The Rookery",
"enUS",
},
[53189] = {
"Molten Elemental",
"Firelands",
"enUS",
},
[72770] = {
"Kor'kron Dark Farseer",
"Siege of Orgrimmar",
"enUS",
},
[69756] = {
"Anima Orb",
"Throne of Thunder",
"enUS",
},
[59522] = {
"Sudsy Brew Alemental",
"Stormstout Brewery",
"enUS",
},
[60708] = {
"Meng the Demented",
"Mogu'shan Vaults",
"enUS",
},
[19598] = {
"Mutate Fleshlasher",
"Tempest Keep: The Botanica",
"enUS",
},
[63808] = {
"Faintly Glowing Gem",
"Mogu'shan Palace",
"enUS",
},
[59778] = {
"Krik'thik Striker",
"Gate of the Setting Sun",
"enUS",
},
[59458] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
"enUS",
},
[68221] = {
"Bore Worm",
"Throne of Thunder",
"enUS",
},
[176551] = {
"Vault Purifier",
"Tazavesh, the Veiled Market",
},
[101679] = {
"Dreadsoul Poisoner",
"Darkheart Thicket",
"enUS",
},
[22845] = {
"Ashtongue Mystic",
"Black Temple",
"enUS",
},
[33136] = {
"Guardian of Yogg-Saron",
"Ulduar",
"enUS",
},
[71420] = {
"Hungry Kunchong",
"Siege of Orgrimmar",
"enUS",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
"enUS",
},
[165805] = {
"Shade of Kael'thas",
"Castle Nathria",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
"enUS",
},
[210147] = {
"Harbinger of Incineration",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[67966] = {
"Whirl Turtle",
"Throne of Thunder",
"enUS",
},
[174773] = {
"Spiteful Shade",
"Atal'Dazar",
"enUS",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
"enUS",
},
[201746] = {
"Sundered Naturalist",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
"enUS",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
"enUS",
},
[72828] = {
"Nameless Windwalker Spirit",
"Siege of Orgrimmar",
"enUS",
},
[205337] = {
"Infinite Timebender",
"Dawn of the Infinite",
"enUS",
},
[130400] = {
"Irontide Crusher",
"Freehold",
"enUS",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
"enUS",
},
[61250] = {
"Sorcerer Mogu",
"Mogu'shan Vaults",
"enUS",
},
[69374] = {
"War-God Jalak",
"Throne of Thunder",
"enUS",
},
[133436] = {
"Venture Co. Skyscorcher",
"The MOTHERLODE!!",
},
[61442] = {
"Kuai the Brute",
"Mogu'shan Palace",
"enUS",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[205212] = {
"Infinite Keeper",
"Dawn of the Infinite",
"enUS",
},
[61634] = {
"Commander Vo'jak",
"Siege of Niuzao Temple",
"enUS",
},
[203799] = {
"Horde Axe Thrower",
"Dawn of the Infinite",
"enUS",
},
[133432] = {
"Venture Co. Alchemist",
"The MOTHERLODE!!",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
"enUS",
},
[72249] = {
"Galakras",
"Siege of Orgrimmar",
"enUS",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
"enUS",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
"enUS",
},
[22844] = {
"Ashtongue Battlelord",
"Black Temple",
"enUS",
},
[203678] = {
"Grommash Hellscream",
"Dawn of the Infinite",
"enUS",
},
[197793] = {
"Awakened Juggernaut",
"Vault of the Incarnates",
"enUS",
},
[165414] = {
"Depraved Obliterator",
"Halls of Atonement",
},
[62402] = {
"Kor'thik Elite Blademaster",
"Heart of Fear",
"enUS",
},
[194467] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[155830] = {
"Mawsworn Disciple",
"Torghast, Tower of the Damned",
"enUS",
},
[202259] = {
"Djaradin Wallclimber",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
"enUS",
},
[203679] = {
"Anduin Lothar",
"Dawn of the Infinite",
"enUS",
},
[69944] = {
"Sand Elemental",
"Throne of Thunder",
"enUS",
},
[58756] = {
"Scarlet Evoker",
"Scarlet Halls",
"enUS",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[155175] = {
"Gargoyle",
"Stratholme Pet Dungeon",
"enUS",
},
[155831] = {
"Mawsworn Soulbinder",
"Torghast, Tower of the Damned",
"enUS",
},
[72958] = {
"Dragonmaw Tidal Shaman",
"Siege of Orgrimmar",
"enUS",
},
[73086] = {
"Healing Tide Totem",
"Siege of Orgrimmar",
"enUS",
},
[205727] = {
"Time-Lost Rocketeer",
"Dawn of the Infinite",
"enUS",
},
[171184] = {
"Mythresh, Sky's Talons",
"De Other Side",
},
[155174] = {
"Unholy Skeleton",
"Stratholme Pet Dungeon",
"enUS",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
"enUS",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[59460] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
"enUS",
},
[202257] = {
"Djaradin Magmashaper",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[146365] = {
"Blazing Fireguard",
"Battle of Dazar'alor",
"enUS",
},
[53575] = {
"Lava Wielder",
"Firelands",
"enUS",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
"enUS",
},
[165556] = {
"Fleeting Manifestation",
"Sanguine Depths",
},
[73012] = {
"Klaxxi Skirmisher",
"Siege of Orgrimmar",
"enUS",
},
[134701] = {
"Blood Effigy",
"The Underrot",
"enUS",
},
[64733] = {
"Rok'nah Loa-Singer",
"Theramore's Fall (A)",
"enUS",
},
[168627] = {
"Plaguebinder",
"Plaguefall",
},
[146366] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[99366] = {
"Taintheart Summoner",
"Darkheart Thicket",
"enUS",
},
[72191] = {
"Overlord Runthak",
"Siege of Orgrimmar",
"enUS",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
"enUS",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
"enUS",
},
[71603] = {
"Sha Puddle",
"Siege of Orgrimmar",
"enUS",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
"enUS",
},
[146367] = {
"Char'golm",
"Battle of Dazar'alor",
"enUS",
},
[203939] = {
"Animation Fluid",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[58757] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
"enUS",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
"enUS",
},
[135365] = {
"Matron Alma",
"Waycrest Manor",
"enUS",
},
[131527] = {
"Lord Waycrest",
"Waycrest Manor",
"enUS",
},
[130404] = {
"Vermin Trapper",
"Freehold",
"enUS",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
"enUS",
},
[197799] = {
"Quarry Infuser",
"Vault of the Incarnates",
"enUS",
},
[59613] = {
"Professor Slate",
"Scholomance",
"enUS",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[61444] = {
"Ming the Cunning",
"Mogu'shan Palace",
"enUS",
},
[59461] = {
"Hopling",
"Stormstout Brewery",
"enUS",
},
[61699] = {
"Sik'thik Amberwing",
"Siege of Niuzao Temple",
"enUS",
},
[151325] = {
"Alarm-o-Bot",
"Operation: Mechagon",
"enUS",
},
[168886] = {
"Virulax Blightweaver",
"Plaguefall",
},
[73775] = {
"War Master Kragg",
"Siege of Orgrimmar",
"enUS",
},
[134599] = {
"Imbued Stormcaller",
"Temple of Sethraliss",
},
[91000] = {
"Vileshard Hulk",
"Neltharion's Lair",
"enUS",
},
[59804] = {
"Gripping Hatred",
"Shado-Pan Monastery",
"enUS",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[56541] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
"enUS",
},
[172981] = {
"Kyrian Stitchwerk",
"The Necrotic Wake",
},
[130661] = {
"Venture Co. Earthshaper",
"The MOTHERLODE!!",
},
[134600] = {
"Sandswept Marksman",
"Temple of Sethraliss",
},
[134174] = {
"Shadow-Borne Witch Doctor",
"Kings' Rest",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
"enUS",
},
[80936] = {
"Grom'kar Grenadier",
"Grimrail Depot",
"enUS",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
"enUS",
},
[205478] = {
"Conduit Guardian",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205734] = {
"Sundered Edgelord",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[66181] = {
"Zar'thik Supplicant",
"Heart of Fear",
"enUS",
},
[58758] = {
"Soul Fragment",
"Scholomance",
"enUS",
},
[58822] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[62980] = {
"Imperial Vizier Zor'lok",
"Heart of Fear",
"enUS",
},
[70787] = {
"Skullcrusher Gundu",
"Blood in the Snow",
"enUS",
},
[176565] = {
"Disruptive Patron",
"Tazavesh, the Veiled Market",
},
[59078] = {
"Failed Student",
"Scholomance",
"enUS",
},
[205735] = {
"Sundered Preserver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
"enUS",
},
[56731] = {
"Habanero Brew",
"Stormstout Brewery",
"enUS",
},
[114542] = {
"Ghostly Philanthropist",
"Return to Karazhan",
},
[61445] = {
"Haiyan the Unstoppable",
"Mogu'shan Palace",
"enUS",
},
[62360] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
"enUS",
},
[58971] = {
"Webbed Victim",
"Throne of Thunder",
"enUS",
},
[133835] = {
"Feral Bloodswarmer",
"The Underrot",
"enUS",
},
[205736] = {
"Sundered Siegemaster",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[205304] = {
"Freya",
"10.1.5 Time Rifts - Titan (Ulderoth)",
"enUS",
},
[72451] = {
"Kor'kron Dark Shaman",
"Siege of Orgrimmar",
"enUS",
},
[91002] = {
"Rotdrool Grabber",
"UNKNOWN",
"enUS",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
"enUS",
},
[64068] = {
"Mogu'shan Engine Keeper",
"Mogu'shan Vaults",
"enUS",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
"enUS",
},
[144071] = {
"Irontide Waveshaper",
"Siege of Boralus",
},
[205737] = {
"Sundered Manaweaver",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[95772] = {
"Frenzied Nightclaw",
"Darkheart Thicket",
"enUS",
},
[208367] = {
"Pip",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[62405] = {
"Sra'thik Amber-Trapper",
"Heart of Fear",
"enUS",
},
[61783] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[19513] = {
"Mutate Fear-Shrieker",
"Tempest Keep: The Botanica",
"enUS",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
"enUS",
},
[166589] = {
"Animated Weapon",
"Sanguine Depths",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
"enUS",
},
[206063] = {
"Temporal Deviation",
"Dawn of the Infinite",
"enUS",
},
[72452] = {
"Kor'kron Dire Wolf",
"Siege of Orgrimmar",
"enUS",
},
[58823] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[157634] = {
"Flameforge Enforcer",
"Torghast, Tower of the Damned",
},
[70789] = {
"Zandalari Rage Banner",
"Blood in the Snow",
"enUS",
},
[134417] = {
"Deepsea Ritualist",
"Shrine of the Storm",
"enUS",
},
[56473] = {
"Flying Snow",
"Shado-Pan Monastery",
"enUS",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
"enUS",
},
[180474] = {
"Soul Reaver",
"Sanctum of Domination",
},
[69382] = {
"Malignant Ooze",
"Throne of Thunder",
"enUS",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[2630] = {
"Earthbind Totem",
"Theramore's Fall (A)",
"enUS",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
"enUS",
},
[70822] = {
"Earthborn Hatred",
"Heart of the Old God Scenario",
"enUS",
},
[208363] = {
"Urctos",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[61766] = {
"Crypt Guardian",
"Crypt of Forgotten Kings",
"enUS",
},
[64916] = {
"Kor'thik Swarmguard",
"Heart of Fear",
"enUS",
},
[99192] = {
"Shade of Xavius",
"Darkheart Thicket",
"enUS",
},
[165824] = {
"Nar'zudah",
"The Necrotic Wake",
},
[210150] = {
"Flametouched Enforcer",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[19608] = {
"Frayer Wildling",
"Tempest Keep: The Botanica",
"enUS",
},
[71715] = {
"Orgrimmar Faithful",
"Siege of Orgrimmar",
"enUS",
},
[23318] = {
"Ashtongue Rogue",
"Black Temple",
"enUS",
},
[22959] = {
"Ardent Host",
"Black Temple",
"enUS",
},
[204206] = {
"Horde Farseer",
"Dawn of the Infinite",
"enUS",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[69639] = {
"Humming Crystal",
"Throne of Thunder",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[168384] = {
"Flesh Construct",
"The Necrotic Wake",
},
[98681] = {
"Rook Spinner",
"Black Rook Hold",
"enUS",
},
[58632] = {
"Armsmaster Harlan",
"Scarlet Halls",
"enUS",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
"enUS",
},
[56713] = {
"Master Snowdrift",
"Shado-Pan Monastery",
"enUS",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
"enUS",
},
[70663] = {
"Embercore",
"The Secrets of Ragefire",
"enUS",
},
[60999] = {
"Sha of Fear",
"Terrace of Endless Spring",
"enUS",
},
[176573] = {
"Mawsworn Woebringer",
"Torghast, Tower of the Damned",
"enUS",
},
[59080] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[67081] = {
"Forgotten King",
"Crypt of Forgotten Kings",
"enUS",
},
[179388] = {
"Hourglass Tidesage",
"Tazavesh, the Veiled Market",
},
[175550] = {
"Volatile Faerie",
"9.0 Bastion Arena - Path of Ascension",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[19505] = {
"Sunseeker Channeler",
"Tempest Keep: The Botanica",
"enUS",
},
[76446] = {
"Shadowmoon Enslaver",
"Shadowmoon Burial Grounds",
},
[175861] = {
"Glacial Spike",
"Sanctum of Domination",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
"enUS",
},
[19633] = {
"Bloodwarder Mender",
"Tempest Keep: The Botanica",
"enUS",
},
[72455] = {
"Overseer Komak",
"Siege of Orgrimmar",
"enUS",
},
[91006] = {
"Rockback Gnasher",
"Neltharion's Lair",
"enUS",
},
[63570] = {
"Sra'thik Pool-Tender",
"Heart of Fear",
"enUS",
},
[61139] = {
"Shan-xi Watershaper",
"Mogu'shan Vaults",
"enUS",
},
[176575] = {
"Mawsworn Soulwarden",
"Torghast, Tower of the Damned",
"enUS",
},
[170690] = {
"Diseased Horror",
"Theater of Pain",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[170480] = {
"Atal'ai Deathwalker",
"De Other Side",
},
[22997] = {
"Flame of Azzinoth",
"Black Temple",
"enUS",
},
[64454] = {
"Zar'thik Augurer",
"Heart of Fear",
"enUS",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
"enUS",
},
[114803] = {
"Spectral Stable Hand",
"Return to Karazhan",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
"enUS",
},
[58569] = {
"Scarlet Purifier",
"Scarlet Monastery",
"enUS",
},
[58633] = {
"Instructor Chillheart",
"Scholomance",
"enUS",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
"enUS",
},
[64902] = {
"Kor'thik Fleshrender",
"Heart of Fear",
"enUS",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[70665] = {
"Kor'kron Dire Soldier",
"The Secrets of Ragefire",
"enUS",
},
[56906] = {
"Saboteur Kip'tilak",
"Gate of the Setting Sun",
"enUS",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
"enUS",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
"enUS",
},
[136186] = {
"Tidesage Spiritualist",
"Shrine of the Storm",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[65414] = {
"Ethereal Sha",
"Shado-Pan Monastery",
"enUS",
},
[203230] = {
"Dragonfire Golem",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[61448] = {
"Sik'thik Soldier",
"Siege of Niuzao Temple",
"enUS",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
"enUS",
},
[134137] = {
"Temple Attendant",
"Shrine of the Storm",
"enUS",
},
[177891] = {
"Mawforged Summoner",
"Sanctum of Domination",
},
[129517] = {
"Reanimated Raptor",
"Atal'Dazar",
"enUS",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
"enUS",
},
[200918] = {
"Rionthus",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[91008] = {
"Rockbound Pelter",
"Neltharion's Lair",
"enUS",
},
[147439] = {
"Molten Hound",
"Battle of Dazar'alor",
"enUS",
},
[71578] = {
"Amber Parasite",
"Siege of Orgrimmar",
"enUS",
},
[131545] = {
"Lady Waycrest",
"Waycrest Manor",
"enUS",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
"enUS",
},
[69131] = {
"Frost King Malakk",
"Throne of Thunder",
"enUS",
},
[169159] = {
"Unstable Canister",
"Plaguefall",
},
[82579] = {
"Grom'kar Far Seer",
"Grimrail Depot",
"enUS",
},
[62408] = {
"Zar'thik Battle-Mender",
"Heart of Fear",
"enUS",
},
[169927] = {
"Putrid Butcher",
"Theater of Pain",
},
[56395] = {
"Shado-Pan Novice",
"Shado-Pan Monastery",
"enUS",
},
[133593] = {
"Expert Technician",
"The MOTHERLODE!!",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
"enUS",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[167113] = {
"Spinemaw Acidgullet",
"Mists of Tirna Scithe",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
"enUS",
},
[72983] = {
"Corrupted Skullsplitter",
"Siege of Orgrimmar",
"enUS",
},
[200912] = {
"Neldris",
"Aberrus, the Shadowed Crucible",
"enUS",
},
[63048] = {
"Kor'thik Slicer",
"Pandaria",
"enUS",
},
[209333] = {
"Gnarlroot",
"Amirdrassil, the Dream's Hope",
"enUS",
},
[73098] = {
"Kor'kron Overseer",
"Siege of Orgrimmar",
"enUS",
},
[69132] = {
"High Priestess Mar'li",
"Throne of Thunder",
"enUS",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[69388] = {
"Zandalari Spear-Shaper",
"Throne of Thunder",
"enUS",
},
[19508] = {
"Sunseeker Herbalist",
"Tempest Keep: The Botanica",
"enUS",
},
[178392] = {
"Gatewarden Zo'mazz",
"Tazavesh, the Veiled Market",
"enUS",
},
[100486] = {
"Risen Arcanist",
"Black Rook Hold",
"enUS",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
"enUS",
},
[213684] = {
"Void Chunk",
"The Rookery",
"enUS",
},
[102277] = {
"Deadeye Decoy",
"Darkheart Thicket",
"enUS",
},
[59722] = {
"Pile of Corpses",
"Scarlet Monastery",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[180432] = {
"Devoted Accomplice",
"Tazavesh, the Veiled Market",
},
[61709] = {
"Spawn of Anger",
"Crypt of Forgotten Kings",
"enUS",
},
[59150] = {
"Flameweaver Koegler",
"Scarlet Halls",
"enUS",
},
[178630] = {
"Mawsworn Seeker",
"Sanctum of Domination",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[69133] = {
"Unharnessed Power",
"Throne of Thunder",
"enUS",
},
[134364] = {
"Faithless Tender",
"Temple of Sethraliss",
},
[155090] = {
"Anodized Coilbearer",
"Operation: Mechagon",
"enUS",
},
[83846] = {
"Yalnu",
"The Everbloom",
"enUS",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[196798] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[102781] = {
"Fel Bat Pup",
"Black Rook Hold",
"enUS",
},
[213942] = {
"Sludge",
"Throne of the Tides",
"enUS",
},
[59213] = {
"Woven Boneguard",
"Scholomance",
"enUS",
},
[96512] = {
"Archdruid Glaidalis",
"Darkheart Thicket",
"enUS",
},
[180431] = {
"Focused Ritualist",
"Tazavesh, the Veiled Market",
},
[64458] = {
"Kor'thik Warsinger",
"Heart of Fear",
"enUS",
},
[63049] = {
"Set'thik Swiftblade",
"Heart of Fear",
"enUS",
},
[69390] = {
"Zandalari Storm-Caller",
"Throne of Thunder",
"enUS",
},
[61131] = {
"Mogu'shan Secret-Keeper",
"Mogu'shan Vaults",
"enUS",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
"enUS",
},
},
["tocversion"] = 100205,
["castbar_icon_show"] = false,
["global_offset_y"] = 4.430000305175781,
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["range_check_alpha_friendlies"] = 1,
["honor_blizzard_plate_alpha"] = true,
["health_selection_overlay_alpha"] = 1,
["profile_name"] = "Default",
["minor_height_scale"] = 0.94999998807907,
["border_thickness"] = 1.484683036804199,
["not_affecting_combat_alpha"] = 1,
["border_color"] = {
nil,
nil,
nil,
1,
},
["cast_statusbar_texture"] = "Wglass",
["health_animation_time_dilatation"] = 2.6199998855591,
["color_override_colors"] = {
[3] = {
0,
0.1450980454683304,
1,
},
},
["aura_height"] = 18,
["tank"] = {
["colors"] = {
["aggro"] = {
1,
0.03529411926865578,
0,
},
["noaggro"] = {
0,
0.5058823823928833,
1,
},
["nocombat"] = {
0.05882353335618973,
1,
},
["pulling"] = {
nil,
0.4196078777313232,
},
},
},
["first_run3"] = true,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Name"] = "Use Big Icon",
["Value"] = false,
["Key"] = "useFullSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Name"] = "Icon Size Offset",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconPadding",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Name"] = "Texture Width",
["Value"] = 10,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureHeightMod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Name"] = "Texture Position",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Name"] = "Texture Alpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "Constructor",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
},
["Time"] = 1688802814,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 51,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Automation [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Constructor",
["Name"] = "Execute Range [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1684153114,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 369,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Bar Color",
["Value"] = true,
["Key"] = "changeBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Border Color",
["Value"] = false,
["Key"] = "changeBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Reset Colors",
["Value"] = true,
["Key"] = "resetColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "Attacking Specific Unit [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Combo Points [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["version"] = -1,
["HooksTemp"] = {
},
["semver"] = "",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
},
["Time"] = 1705067856,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Initialization",
["Name"] = "Aura Reorder [Plater]",
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Key"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
},
{
["OptionsValues"] = {
["glowColor"] = {
1,
0,
0.01568627543747425,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1703731894,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 290,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "@scriptname Options:",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 4",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Name"] = "Ants Amount",
["Value"] = 6,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsAmount",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Name"] = "Speed",
["Value"] = 0.25,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "frequency",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants length",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsLength",
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Name"] = "Ants Thickness",
["Value"] = 2,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "antsThickness",
},
{
["Type"] = 4,
["Name"] = "Ants Border",
["Value"] = false,
["Key"] = "antsBorder",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Outer Glow",
["Value"] = false,
["Key"] = "outerGlow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["HooksTemp"] = {
},
["semver"] = "1.0.6",
["Name"] = "Steal/Purge Aura Glow",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "Nameplate Updated",
["Name"] = "Scorch",
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Colors Header",
["Value"] = "Mythic+ Colours:",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Key"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Key"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Name"] = "Focus Mobs",
["Value"] = {
0,
0,
1,
1,
},
["Key"] = "FMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Name"] = "Deadly Mobs",
["Value"] = {
0,
1,
1,
1,
},
["Key"] = "DMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Name"] = "Dodge Mobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Key"] = "DoMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Name"] = "Healer Mobs",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "HMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Name"] = "Interruptable Mobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Key"] = "IMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Name"] = "Enrage Mobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Key"] = "EnMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Name"] = "Expolsives Mobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Key"] = "ExMobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Name"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Key"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Target Color",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Key"] = "targetColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 9",
["Value"] = 0,
["Key"] = "option9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Addictional Options",
["Value"] = "Addictional Options",
["Key"] = "option22",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Target Color",
["Value"] = false,
["Key"] = "targetEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Raid Mark Colors",
["Value"] = true,
["Key"] = "raidMarkColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Color Healthbar",
["Value"] = false,
["Key"] = "colorHealthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "ThreatColors",
["Value"] = false,
["Key"] = "threatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Name"] = "Use Default Color",
["Value"] = true,
["Key"] = "UseDefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["LastHookEdited"] = "",
["Name"] = "M+ Colouring",
},
{
["OptionsValues"] = {
["cooldownColor"] = {
1,
0.01960784383118153,
0,
1,
},
["interruptedColor"] = {
1,
0.2823529541492462,
0.3568627536296845,
1,
},
},
["HooksTemp"] = {
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1703700395,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = false,
["Revision"] = 485,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Interrupt CD Indicator",
["Options"] = {
{
["Type"] = 1,
["Name"] = "Kick Ready Color",
["Value"] = {
0,
1,
0,
1,
},
["Key"] = "readyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Name"] = "Kick Will Be Ready Color",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Key"] = "semiCooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Name"] = "Kick Will NOT Be Ready",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Key"] = "cooldownColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Name"] = "Kick CD Tolerance (ms)",
["Value"] = 500,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "cooldownTolerance",
},
{
["Type"] = 1,
["Name"] = "Protected Cast Color",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Key"] = "protectedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Name"] = "Interrupted Color",
["Value"] = {
1,
0,
0,
1,
},
["Key"] = "interruptedColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Name"] = "Castbar CD Line",
["Value"] = true,
["Key"] = "cooldownLine",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["LastHookEdited"] = "",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
},
["Time"] = 1688801832,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = false,
["Revision"] = 497,
["Options"] = {
{
["Type"] = 4,
["Name"] = "Set Bar Color",
["Value"] = true,
["Key"] = "setColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Name"] = "Set Name Color",
["Value"] = false,
["Key"] = "setNameColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Name"] = "Set Border Color",
["Value"] = false,
["Key"] = "setBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Name"] = "Vy Color",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Key"] = "vyColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Color",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Key"] = "urhColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Color",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Key"] = "woColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider",
["Value"] = 0,
["Key"] = "pog",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Name",
["Value"] = true,
["Key"] = "setName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Name"] = "Vy Name",
["Value"] = "Vy (Haste)",
["Key"] = "vyName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Urh Name",
["Value"] = "Urh (CDR)",
["Key"] = "urhName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Name"] = "Wo Name",
["Value"] = "Wo (Stealth)",
["Key"] = "woName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Height",
["Value"] = false,
["Key"] = "setHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Bar Height",
["Value"] = 20,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "barHeight",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Font Size",
["Value"] = false,
["Key"] = "setFontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Name"] = "Font Size",
["Value"] = 20,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fontSize",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Texture",
["Value"] = false,
["Key"] = "setTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Name"] = "Bar Warning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Key"] = "barWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Set Bar Background Color",
["Value"] = false,
["Key"] = "setBackgroundColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Name"] = "Vy Background Color",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Key"] = "vyBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Urh Background Color",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Key"] = "urhBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Wo Background Color",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Key"] = "woBGColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Divider 2",
["Value"] = 0,
["Key"] = "deez",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Reload Warning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Key"] = "reloadWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["semver"] = "1.0.7",
["LastHookEdited"] = "",
["Name"] = "Encrypted Names & Colors",
},
{
["OptionsValues"] = {
["color"] = {
0.6274510025978088,
1,
0.7568628191947937,
1,
},
["wrap"] = true,
["size"] = 2.449691534042358,
},
["LastHookEdited"] = "",
["Hooks"] = {
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.TargetBorder) then\n        unitFrame.TargetBorder:Hide()\n    end\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateBorder (unitFrame)\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local size = modTable.config.size\n    local color = modTable.config.color\n    \n    \n    if (not unitFrame.TargetBorder) then\n        unitFrame.TargetBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")    \n    end\n    \n    function envTable.UpdateBorder (unitFrame)\n        if (UnitIsUnit (\"target\", unitFrame.unit)) then               \n            --ViragDevTool_AddData(unitFrame, 'frame')\n            --ViragDevTool_AddData(Plater.db.profile, \"db\")\n            local r, g, b, a = DetailsFramework:ParseColors (color)\n            unitFrame.TargetBorder:SetVertexColor (r, g, b, a)\n            \n            \n            unitFrame.TargetBorder:SetBorderSizes (size, size, size, size)\n            \n            if modTable.config.wrap then\n                envTable.UpdateSize(unitFrame.TargetBorder)    \n            else    \n                unitFrame.TargetBorder:UpdateSizes()\n            end\n            \n            unitFrame.TargetBorder:Show()\n        else\n            unitFrame.TargetBorder:Hide()\n        end\n    end\n    \n    function envTable.UpdateSize(b)\n        local offset = Plater.db.profile.border_thickness\n        local borderSize = b.borderSize or 1\n        local minPixels = b.borderSizeMinPixels or 2\n        local upwardExtendHeightPixels = b.upwardExtendHeightPixels or borderSize\n        local upwardExtendHeightMinPixels = b.upwardExtendHeightMinPixels or minPixels\n        \n        PixelUtil.SetWidth(b.Left, size, minPixels)\n        PixelUtil.SetPoint(b.Left, \"TOPRIGHT\", b, \"TOPLEFT\", -offset, upwardExtendHeightPixels + offset, -offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Left, \"BOTTOMRIGHT\", b, \"BOTTOMLEFT\", -offset, -size - offset, -offset, minPixels - offset)\n        \n        PixelUtil.SetWidth(b.Right, size, minPixels)\n        PixelUtil.SetPoint(b.Right, \"TOPLEFT\", b, \"TOPRIGHT\", offset, upwardExtendHeightPixels + offset, offset, upwardExtendHeightMinPixels + offset)\n        PixelUtil.SetPoint(b.Right, \"BOTTOMLEFT\", b, \"BOTTOMRIGHT\", offset, -size - offset, offset, minPixels - offset)\n        \n        PixelUtil.SetHeight(b.Bottom, size, minPixels)\n        PixelUtil.SetPoint(b.Bottom, \"TOPLEFT\", b, \"BOTTOMLEFT\", -offset, -offset)\n        PixelUtil.SetPoint(b.Bottom, \"TOPRIGHT\", b, \"BOTTOMRIGHT\", offset, -offset)\n        \n        if b.Top then\n            PixelUtil.SetHeight(b.Top, size, minPixels)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMLEFT\", b, \"TOPLEFT\", -offset, offset)\n            PixelUtil.SetPoint(b.Top, \"BOTTOMRIGHT\", b, \"TOPRIGHT\", offset, -offset)\n        end\n    end\nend",
},
["Time"] = 1704186652,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "https://wago.io/XR0IX1Suj/1",
["Icon"] = 3573824,
["Enabled"] = true,
["Revision"] = 338,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Add an extra border to your current target. Options included to wrap the border on top of the already existing border.",
["Prio"] = 99,
["Name"] = "Wrapping Target Border",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Color",
["Value"] = "Border",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 2,
["Key"] = "size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "size",
},
{
["Type"] = 6,
["Name"] = "Option 6",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Wrap border",
["Value"] = true,
["Key"] = "wrap",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Check this to place the border AROUND the default nameplate border instead of on top of it",
},
},
["HooksTemp"] = {
},
["version"] = 1,
},
},
["ignore_softinteract_objects"] = true,
["target_shady_combat_only"] = false,
["aura_width2"] = 22,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.077178478241",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "1",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "1",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateOtherAtBase"] = "0",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["SoftTargetNameplateInteract"] = "1",
["nameplateShowFriendlyGuardians"] = "1",
["nameplateOccludedAlphaMult"] = "0.29999998211861",
["NamePlateHorizontalScale"] = "1",
["ShowNamePlateLoseAggroFlash"] = "1",
["SoftTargetIconGameObject"] = "0",
["nameplateShowOnlyNames"] = "1",
},
["ghost_auras"] = {
["auras"] = {
["ROGUE"] = {
[5] = {
},
},
},
},
["ui_parent_cast_level"] = 108,
["target_shady_alpha"] = 0.3199999928474426,
["disable_omnicc_on_auras"] = true,
["health_statusbar_bgcolor"] = {
0,
0,
0,
1,
},
["aura_width"] = 22,
["aura_height2"] = 18,
["castbar_target_notank"] = true,
["target_highlight_height"] = 22,
["aura_show_enrage"] = true,
["aggro_can_check_notank"] = true,
["login_counter"] = 19941,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1688802696,
["__TrashAt"] = 1725088425,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["Revision"] = 148,
["semver"] = "",
["Name"] = "Add - Health Markers [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["version"] = -1,
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1688802924,
["__TrashAt"] = 1725088425,
["Options"] = {
},
["url"] = "",
["Icon"] = 610472,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["Revision"] = 69,
["semver"] = "",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Name"] = "Aura is Shield [P]",
["Prio"] = 99,
["SpellIds"] = {
},
["PlaterCore"] = 1,
["NpcNames"] = {
},
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["__TrashAt"] = 1725088425,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.73,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Key"] = "animSpeed",
["Value"] = 0.2,
["Name"] = "Animation Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            self.FrameOverlay.LeapArrow1:Show()\n            self.FrameOverlay.LeapArrow2:Show()\n            self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n\n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1719716101,
["url"] = "",
["Icon"] = 236171,
["Enabled"] = true,
["Revision"] = 107,
["semver"] = "",
["Author"] = "Tennah-These Go To Eleven",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
["__TrashAt"] = 1725104586,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/2\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(16, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = fadeInDuration\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
["Name"] = "Cast - Heroic Leap [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Play an animation when the cast is a Heroic Leap",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bRenameSpell",
["Value"] = true,
["Name"] = "Rename Spell",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Rename the name of the spell.",
},
{
["Type"] = 3,
["Key"] = "spellName",
["Value"] = "Heroic Leap",
["Name"] = "Spell Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Name to show in the spell cast bar.",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "bUseCastbarColor",
["Value"] = false,
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change the cast bar color to the color selected below.",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
0.364705890417099,
0.1058823615312576,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
},
["version"] = -1,
["SpellIds"] = {
447141,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1719710916,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 79,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["__TrashAt"] = 1725104586,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["Options"] = {
},
["version"] = -1,
["SpellIds"] = {
343470,
423228,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n   self.Text:Hide() \nend\n\n\n",
["Time"] = 1719711114,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
["Enabled"] = true,
["Revision"] = 154,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["__TrashAt"] = 1725104586,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    print(envTable.dotAnimation1.dotTexture:GetAlpha())\n    print(envTable.dotAnimation1.dotTexture:GetVertexColor())\n    print(envTable.dotAnimation1.dotTexture:IsShown())\n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
["Name"] = "Cast - Ongoing Cast [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Name"] = "Dots X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "minAlpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.5254902243614197,
0.5137255191802979,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["version"] = -1,
["SpellIds"] = {
431364,
423327,
},
["NpcNames"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1719693487,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
["Enabled"] = true,
["Revision"] = 1249,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["__TrashAt"] = 1725104586,
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    self.Text:Hide()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Cast - Heal Cut [P]",
["PlaterCore"] = 1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
["version"] = -1,
["SpellIds"] = {
450756,
451097,
452162,
322938,
322939,
324776,
324914,
326046,
340544,
335143,
327130,
256957,
275826,
429109,
},
["NpcNames"] = {
},
},
},
["range_check_enabled"] = false,
["pet_width_scale"] = 0.8499999642372131,
["version"] = 1,
["ui_parent_target_strata"] = "MEDIUM",
["ui_parent_scale_tune"] = 1.4099998474121,
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["quick_hide"] = true,
["patch_version"] = 37,
["aura_stack_font"] = "PT Sans Narrow",
["script_auto_imported"] = {
["Cast - Important by Color [P]"] = 2,
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 3,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Unit - Show Energy"] = 11,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Circular Swipe"] = 4,
["Cast - Special Ability [P]"] = 3,
["Cast - Tank Interrupt"] = 12,
["Aura - Is Cast Bar [P]"] = 1,
["Cast - Spark Color [P]"] = 2,
["Cast - Heal Stun [P]"] = 2,
["Cast - Important Target [P]"] = 2,
["Add - Explode on Die [P]"] = 1,
["Unit - Important"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - AoE With Range [P]"] = 2,
["Cast - On Going Cast [P]"] = 2,
["Cast - Very Important"] = 15,
["Cast - AoE Hit All [P]"] = 3,
["Cast - Shining Green [P]"] = 3,
["Cast - Debuff [P]"] = 2,
["Aura is Shield [P]"] = 5,
["Add - Warning [P]"] = 5,
["Cast - Simple Interrupt [P]"] = 2,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Ongoing Cast [P]"] = 4,
["Relics 9.2 M Dungeons"] = 2,
["Cast - Heal Cut [P]"] = 3,
["Cast - Alert + Timer [P]"] = 4,
["Spiteful Affix"] = 3,
["Auto Set Skull"] = 11,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Shield Interrupt"] = 2,
["Countdown"] = 11,
["Cast - Voidzone [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 17,
["Fixate"] = 11,
["Cast - Stop Casting"] = 4,
["Cast - Heroic Leap [P]"] = 3,
["Cast - Glowing [P]"] = 10,
["Fixate On You"] = 11,
},
["target_highlight_color"] = {
0.02745098248124123,
0.2745098173618317,
},
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["indicator_raidmark_scale"] = 0.99999994039536,
["number_region_first_run"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["cast_statusbar_bgcolor"] = {
0,
0,
0,
0.8900000005960464,
},
["range_check_alpha"] = 1,
["click_space"] = {
125,
},
["aura_tracker"] = {
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["236299"] = true,
["12486"] = false,
},
["buff_tracked"] = {
["209859"] = true,
},
["buff_banned"] = {
["206150"] = true,
["61573"] = true,
["61574"] = true,
["333553"] = true,
},
},
["castbar_target_font"] = "PT Sans Narrow",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["semver"] = "1.0.0",
["castbar_target_show"] = true,
["npc_colors"] = {
[190404] = {
true,
false,
"mediumpurple",
},
[196798] = {
true,
false,
"blue",
},
[186696] = {
true,
false,
"fuchsia",
},
[109908] = {
true,
false,
"fuchsia",
},
[213806] = {
true,
false,
"fuchsia",
},
[190405] = {
true,
false,
"mediumpurple",
},
[196671] = {
true,
false,
"mediumpurple",
},
[180431] = {
true,
false,
"deepskyblue",
},
[115407] = {
true,
false,
"blue",
},
[150253] = {
true,
false,
"mediumpurple",
},
[184140] = {
true,
false,
"fuchsia",
},
[99359] = {
true,
false,
"fuchsia",
},
[180432] = {
true,
false,
"blue",
},
[165471] = {
true,
false,
"blue",
},
[190407] = {
true,
false,
"deepskyblue",
},
[129602] = {
true,
false,
"mediumpurple",
},
[180433] = {
true,
false,
"fuchsia",
},
[131585] = {
true,
false,
"blue",
},
[120651] = {
true,
false,
"gold",
},
[131009] = {
true,
false,
"fuchsia",
},
[99360] = {
true,
false,
"blue",
},
[197697] = {
true,
false,
"mediumpurple",
},
[176598] = {
true,
false,
"blue",
},
[164578] = {
true,
false,
"blue",
},
[134144] = {
true,
false,
"lightgreen",
},
[81522] = {
true,
false,
"mediumpurple",
},
[40825] = {
true,
false,
"mediumpurple",
},
[131587] = {
true,
false,
"deepskyblue",
},
[208440] = {
true,
false,
"mediumpurple",
},
[164707] = {
true,
false,
"mediumpurple",
},
[196548] = {
true,
false,
"fuchsia",
},
[135552] = {
true,
false,
"fuchsia",
},
[84400] = {
true,
false,
"fuchsia",
},
[186191] = {
true,
false,
"deepskyblue",
},
[135169] = {
true,
false,
"fuchsia",
},
[201792] = {
true,
false,
"mediumpurple",
},
[206140] = {
true,
false,
"mediumpurple",
},
[83761] = {
true,
false,
"mediumpurple",
},
[184018] = {
true,
false,
"DRUID",
},
[178008] = {
true,
false,
"yellow",
},
[126983] = {
true,
false,
"DRUID",
},
[127111] = {
true,
false,
"deepskyblue",
},
[168418] = {
true,
false,
"deepskyblue",
},
[200387] = {
true,
false,
"mediumpurple",
},
[213942] = {
true,
false,
"deepskyblue",
},
[199748] = {
true,
false,
"fuchsia",
},
[165222] = {
true,
false,
"blue",
},
[184020] = {
true,
false,
"mediumpurple",
},
[199749] = {
true,
false,
"mediumpurple",
},
[168420] = {
true,
false,
"blue",
},
[165479] = {
true,
false,
"mediumpurple",
},
[170850] = {
true,
true,
"fuchsia",
},
[134150] = {
true,
false,
"navajowhite",
},
[75451] = {
true,
false,
"fuchsia",
},
[83763] = {
true,
false,
"deepskyblue",
},
[184022] = {
true,
false,
"deepskyblue",
},
[128967] = {
true,
false,
"palegreen",
},
[75899] = {
true,
false,
"fuchsia",
},
[196043] = {
true,
false,
"fuchsia",
},
[131850] = {
true,
false,
"fuchsia",
},
[134024] = {
true,
false,
"fuchsia",
},
[178141] = {
true,
false,
"blue",
},
[196044] = {
true,
false,
"fuchsia",
},
[40923] = {
true,
false,
"DEATHKNIGHT",
},
[83892] = {
true,
false,
"fuchsia",
},
[135048] = {
true,
false,
"DEATHKNIGHT",
},
[178142] = {
true,
false,
"deepskyblue",
},
[98406] = {
false,
false,
"fuchsia",
},
[137478] = {
true,
false,
"gold",
},
[194894] = {
true,
false,
"deepskyblue",
},
[196045] = {
true,
false,
"deepskyblue",
},
[165483] = {
true,
false,
"fuchsia",
},
[135049] = {
true,
false,
"fuchsia",
},
[139269] = {
true,
false,
"deepskyblue",
},
[168425] = {
true,
false,
"fuchsia",
},
[164461] = {
true,
false,
"blue",
},
[168681] = {
true,
true,
"fuchsia",
},
[128969] = {
true,
false,
"goldenrod",
},
[99366] = {
true,
false,
"deepskyblue",
},
[82039] = {
true,
false,
"blue",
},
[177889] = {
true,
false,
"fuchsia",
},
[187224] = {
true,
false,
"deepskyblue",
},
[136330] = {
true,
false,
"fuchsia",
},
[194897] = {
true,
false,
"fuchsia",
},
[164463] = {
true,
false,
"deepskyblue",
},
[83894] = {
true,
false,
"blue",
},
[98280] = {
true,
false,
"blue",
},
[134157] = {
true,
false,
"peru",
},
[75966] = {
true,
false,
"fuchsia",
},
[205384] = {
true,
false,
"fuchsia",
},
[212673] = {
true,
false,
"mediumpurple",
},
[136076] = {
true,
false,
"lightcoral",
},
[134158] = {
true,
false,
"navajowhite",
},
[172265] = {
true,
false,
"deepskyblue",
},
[208198] = {
true,
false,
"fuchsia",
},
[150143] = {
true,
false,
"blue",
},
[177892] = {
true,
false,
"blue",
},
[165872] = {
true,
false,
"mediumpurple",
},
[137484] = {
true,
false,
"gold",
},
[131858] = {
true,
false,
"blue",
},
[40765] = {
true,
false,
"mediumpurple",
},
[45912] = {
true,
false,
"deepskyblue",
},
[207177] = {
true,
false,
"mediumpurple",
},
[174569] = {
false,
false,
"fuchsia",
},
[40925] = {
true,
false,
"mediumpurple",
},
[190426] = {
true,
false,
"fuchsia",
},
[189531] = {
true,
false,
"fuchsia",
},
[137486] = {
true,
false,
"gold",
},
[98538] = {
true,
false,
"mediumpurple",
},
[150146] = {
true,
false,
"fuchsia",
},
[137103] = {
true,
false,
"fuchsia",
},
[101991] = {
true,
false,
"mediumpurple",
},
[165108] = {
true,
true,
"fuchsia",
},
[82682] = {
true,
false,
"mediumpurple",
},
[156157] = {
true,
false,
"blue",
},
[75713] = {
true,
false,
"fuchsia",
},
[186208] = {
true,
false,
"fuchsia",
},
[138255] = {
true,
false,
"maroon",
},
[122963] = {
true,
false,
"mediumpurple",
},
[162040] = {
true,
false,
"fuchsia",
},
[198996] = {
true,
false,
"mediumpurple",
},
[81212] = {
true,
false,
"mediumpurple",
},
[181861] = {
true,
false,
"mediumpurple",
},
[52019] = {
true,
false,
"fuchsia",
},
[83578] = {
true,
false,
"mediumpurple",
},
[171376] = {
true,
false,
"blue",
},
[131863] = {
true,
false,
"mediumpurple",
},
[203857] = {
true,
false,
"fuchsia",
},
[195929] = {
true,
false,
"mediumpurple",
},
[207438] = {
true,
false,
"mediumpurple",
},
[131864] = {
true,
false,
"mediumpurple",
},
[75459] = {
true,
false,
"fuchsia",
},
[198999] = {
true,
false,
"mediumpurple",
},
[205265] = {
true,
false,
"DEATHKNIGHT",
},
[193373] = {
true,
false,
"blue",
},
[184422] = {
true,
false,
"DRUID",
},
[199000] = {
true,
false,
"mediumpurple",
},
[39616] = {
true,
false,
"DEATHKNIGHT",
},
[133912] = {
true,
false,
"fuchsia",
},
[136214] = {
true,
false,
"plum",
},
[136470] = {
true,
false,
"honeydew",
},
[75652] = {
true,
false,
"mediumpurple",
},
[134041] = {
true,
false,
"DEATHKNIGHT",
},
[197595] = {
true,
false,
"mediumpurple",
},
[203861] = {
true,
false,
"mediumpurple",
},
[155908] = {
true,
false,
"fuchsia",
},
[98542] = {
true,
false,
"mediumpurple",
},
[179821] = {
true,
false,
"fuchsia",
},
[83389] = {
true,
false,
"mediumpurple",
},
[157571] = {
true,
false,
"deepskyblue",
},
[173044] = {
true,
false,
"deepskyblue",
},
[154758] = {
true,
false,
"fuchsia",
},
[162047] = {
true,
false,
"mediumpurple",
},
[118491] = {
true,
false,
"deepskyblue",
},
[115486] = {
true,
false,
"mediumpurple",
},
[90998] = {
true,
false,
"blue",
},
[157572] = {
true,
false,
"deepskyblue",
},
[164861] = {
true,
false,
"blue",
},
[122967] = {
true,
false,
"mediumpurple",
},
[105704] = {
true,
false,
"deepskyblue",
},
[166396] = {
true,
false,
"blue",
},
[127315] = {
true,
false,
"fuchsia",
},
[83390] = {
true,
false,
"deepskyblue",
},
[187240] = {
true,
false,
"mediumpurple",
},
[132126] = {
true,
false,
"fuchsia",
},
[45915] = {
true,
false,
"fuchsia",
},
[171384] = {
true,
false,
"blue",
},
[168443] = {
true,
false,
"blue",
},
[77700] = {
true,
false,
"deepskyblue",
},
[84989] = {
true,
false,
"deepskyblue",
},
[184300] = {
true,
false,
"mediumpurple",
},
[122968] = {
true,
false,
"mediumpurple",
},
[101549] = {
true,
false,
"blue",
},
[170490] = {
true,
false,
"deepskyblue",
},
[168572] = {
true,
false,
"blue",
},
[191206] = {
true,
false,
"deepskyblue",
},
[184301] = {
true,
false,
"deepskyblue",
},
[115488] = {
true,
false,
"blue",
},
[91000] = {
true,
false,
"mediumpurple",
},
[84990] = {
true,
false,
"blue",
},
[81985] = {
true,
false,
"fuchsia",
},
[122969] = {
true,
false,
"deepskyblue",
},
[100527] = {
true,
false,
"fuchsia",
},
[197985] = {
true,
false,
"fuchsia",
},
[150160] = {
true,
false,
"mediumpurple",
},
[178165] = {
true,
false,
"fuchsia",
},
[197219] = {
true,
false,
"mediumpurple",
},
[165762] = {
true,
false,
"fuchsia",
},
[122970] = {
true,
false,
"blue",
},
[131492] = {
true,
false,
"fuchsia",
},
[76104] = {
true,
false,
"mediumpurple",
},
[165763] = {
true,
false,
"deepskyblue",
},
[135329] = {
true,
false,
"mediumpurple",
},
[81603] = {
true,
false,
"mediumpurple",
},
[166275] = {
true,
false,
"deepskyblue",
},
[91002] = {
true,
false,
"fuchsia",
},
[174843] = {
true,
false,
"mediumpurple",
},
[136353] = {
true,
false,
"royalblue",
},
[166276] = {
true,
false,
"mediumpurple",
},
[168578] = {
true,
false,
"deepskyblue",
},
[150292] = {
true,
false,
"blue",
},
[205790] = {
true,
false,
"DEATHKNIGHT",
},
[45917] = {
true,
false,
"DRUID",
},
[162057] = {
true,
false,
"mediumpurple",
},
[205151] = {
true,
false,
"DEATHKNIGHT",
},
[91003] = {
true,
false,
"DRUID",
},
[186226] = {
true,
false,
"fuchsia",
},
[135204] = {
true,
false,
"honeydew",
},
[196712] = {
true,
false,
"fuchsia",
},
[205152] = {
true,
false,
"mediumpurple",
},
[92538] = {
true,
false,
"fuchsia",
},
[170882] = {
true,
false,
"blue",
},
[99891] = {
true,
false,
"mediumpurple",
},
[200137] = {
true,
false,
"deepskyblue",
},
[180473] = {
true,
false,
"blue",
},
[80816] = {
true,
false,
"deepskyblue",
},
[129547] = {
true,
false,
"deepskyblue",
},
[196202] = {
true,
false,
"blue",
},
[103344] = {
true,
false,
"mediumpurple",
},
[126919] = {
true,
false,
"blue",
},
[164873] = {
true,
false,
"fuchsia",
},
[122973] = {
true,
false,
"fuchsia",
},
[75979] = {
true,
false,
"fuchsia",
},
[183671] = {
true,
false,
"fuchsia",
},
[114319] = {
true,
false,
"blue",
},
[129367] = {
true,
false,
"honeydew",
},
[168153] = {
true,
false,
"fuchsia",
},
[186229] = {
true,
false,
"mediumpurple",
},
[129559] = {
true,
false,
"blue",
},
[175576] = {
true,
false,
"fuchsia",
},
[189266] = {
true,
false,
"deepskyblue",
},
[186741] = {
true,
false,
"fuchsia",
},
[98792] = {
true,
false,
"deepskyblue",
},
[150169] = {
true,
false,
"mediumpurple",
},
[150297] = {
true,
false,
"deepskyblue",
},
[185032] = {
true,
false,
"mediumpurple",
},
[183033] = {
true,
false,
"mediumpurple",
},
[174210] = {
true,
false,
"deepskyblue",
},
[199124] = {
true,
false,
"deepskyblue",
},
[111068] = {
true,
false,
"mediumpurple",
},
[182778] = {
true,
false,
"fuchsia",
},
[178392] = {
true,
false,
"fuchsia",
},
[170480] = {
true,
false,
"mediumpurple",
},
[199233] = {
true,
false,
"mediumpurple",
},
[102962] = {
true,
false,
"fuchsia",
},
[199368] = {
true,
false,
"fuchsia",
},
[163086] = {
true,
false,
"blue",
},
[196576] = {
true,
false,
"fuchsia",
},
[204262] = {
true,
false,
"fuchsia",
},
[91006] = {
true,
false,
"blue",
},
[114783] = {
true,
false,
"deepskyblue",
},
[201788] = {
true,
false,
"fuchsia",
},
[129553] = {
true,
false,
"mediumpurple",
},
[173189] = {
true,
false,
"deepskyblue",
},
[86526] = {
true,
false,
"blue",
},
[205158] = {
true,
false,
"mediumpurple",
},
[205366] = {
true,
false,
"DEATHKNIGHT",
},
[129369] = {
true,
false,
"lightsalmon",
},
[97720] = {
true,
false,
"fuchsia",
},
[180336] = {
true,
false,
"deepskyblue",
},
[43873] = {
true,
false,
"DRUID",
},
[195696] = {
true,
false,
"mediumpurple",
},
[173190] = {
true,
false,
"deepskyblue",
},
[187768] = {
true,
false,
"deepskyblue",
},
[91007] = {
true,
false,
"DRUID",
},
[83846] = {
true,
false,
"mediumpurple",
},
[81864] = {
true,
false,
"blue",
},
[97197] = {
true,
false,
"deepskyblue",
},
[138281] = {
true,
false,
"mediumpurple",
},
[134701] = {
true,
false,
"fuchsia",
},
[153882] = {
true,
false,
"deepskyblue",
},
[186107] = {
true,
false,
"fuchsia",
},
[187897] = {
true,
false,
"mediumpurple",
},
[129370] = {
true,
false,
"gold",
},
[151325] = {
true,
false,
"fuchsia",
},
[129552] = {
true,
false,
"deepskyblue",
},
[84550] = {
true,
false,
"mediumpurple",
},
[169861] = {
true,
false,
"blue",
},
[154744] = {
true,
false,
"fuchsia",
},
[189816] = {
true,
false,
"deepskyblue",
},
[188026] = {
true,
false,
"fuchsia",
},
[91008] = {
true,
false,
"deepskyblue",
},
[168717] = {
true,
false,
"deepskyblue",
},
[144293] = {
true,
false,
"mediumpurple",
},
[137516] = {
true,
false,
"lightsalmon",
},
[183423] = {
true,
false,
"deepskyblue",
},
[165137] = {
true,
false,
"mediumpurple",
},
[187771] = {
true,
false,
"blue",
},
[175992] = {
true,
false,
"fuchsia",
},
[98681] = {
true,
false,
"blue",
},
[168718] = {
true,
false,
"blue",
},
[144294] = {
true,
false,
"deepskyblue",
},
[184319] = {
true,
false,
"fuchsia",
},
[165010] = {
true,
false,
"mediumpurple",
},
[137517] = {
true,
false,
"peru",
},
[83893] = {
true,
false,
"deepskyblue",
},
[114584] = {
true,
false,
"mediumpurple",
},
[174197] = {
true,
false,
"deepskyblue",
},
[122972] = {
true,
false,
"deepskyblue",
},
[122965] = {
true,
false,
"mediumpurple",
},
[95779] = {
true,
false,
"mediumpurple",
},
[183425] = {
true,
false,
"blue",
},
[187969] = {
true,
false,
"deepskyblue",
},
[105715] = {
true,
false,
"blue",
},
[134012] = {
true,
false,
"lightsalmon",
},
[150165] = {
true,
false,
"deepskyblue",
},
[132532] = {
true,
false,
"palegreen",
},
[98810] = {
true,
false,
"mediumpurple",
},
[205804] = {
true,
false,
"mediumpurple",
},
[179334] = {
true,
false,
"fuchsia",
},
[135474] = {
true,
false,
"blue",
},
[176521] = {
true,
false,
"blue",
},
[104246] = {
true,
false,
"blue",
},
[139949] = {
true,
false,
"honeydew",
},
[186242] = {
true,
false,
"blue",
},
[130012] = {
true,
false,
"fuchsia",
},
[163862] = {
true,
false,
"blue",
},
[214117] = {
true,
false,
"fuchsia",
},
[191739] = {
true,
false,
"mediumpurple",
},
[164567] = {
true,
false,
"deepskyblue",
},
[104278] = {
true,
false,
"fuchsia",
},
[168594] = {
true,
false,
"mediumpurple",
},
[137713] = {
true,
false,
"paleturquoise",
},
[144298] = {
true,
false,
"blue",
},
[133430] = {
true,
false,
"cornflowerblue",
},
[43875] = {
true,
false,
"DRUID",
},
[137521] = {
true,
false,
"cornflowerblue",
},
[176523] = {
true,
false,
"mediumpurple",
},
[133685] = {
true,
false,
"deepskyblue",
},
[213607] = {
true,
false,
"DEATHKNIGHT",
},
[190206] = {
true,
false,
"blue",
},
[180104] = {
true,
false,
"deepskyblue",
},
[114316] = {
true,
false,
"deepskyblue",
},
[114796] = {
true,
false,
"blue",
},
[184580] = {
true,
false,
"blue",
},
[191230] = {
true,
false,
"fuchsia",
},
[96574] = {
true,
false,
"mediumpurple",
},
[206064] = {
true,
false,
"deepskyblue",
},
[190207] = {
true,
false,
"fuchsia",
},
[184131] = {
true,
false,
"deepskyblue",
},
[84554] = {
true,
false,
"fuchsia",
},
[191164] = {
true,
false,
"fuchsia",
},
[184581] = {
true,
false,
"fuchsia",
},
[129758] = {
true,
false,
"fuchsia",
},
[104247] = {
true,
false,
"fuchsia",
},
[135052] = {
true,
false,
"DEATHKNIGHT",
},
[186116] = {
true,
false,
"DRUID",
},
[178139] = {
true,
false,
"mediumpurple",
},
[133432] = {
true,
false,
"gold",
},
[206065] = {
true,
false,
"fuchsia",
},
[184582] = {
true,
false,
"deepskyblue",
},
[154020] = {
true,
false,
"deepskyblue",
},
[180474] = {
true,
false,
"fuchsia",
},
[165529] = {
true,
false,
"blue",
},
[191232] = {
true,
false,
"blue",
},
[98813] = {
true,
false,
"deepskyblue",
},
[165913] = {
true,
false,
"fuchsia",
},
[45922] = {
true,
false,
"fuchsia",
},
[206066] = {
true,
false,
"fuchsia",
},
[175861] = {
true,
false,
"fuchsia",
},
[114542] = {
true,
false,
"blue",
},
[40935] = {
true,
false,
"deepskyblue",
},
[169426] = {
true,
false,
"gold",
},
[186246] = {
true,
false,
"deepskyblue",
},
[115757] = {
true,
false,
"mediumpurple",
},
[155812] = {
true,
false,
"blue",
},
[100539] = {
true,
false,
"blue",
},
[96512] = {
true,
false,
"mediumpurple",
},
[204206] = {
true,
false,
"mediumpurple",
},
[180864] = {
true,
false,
"fuchsia",
},
[98970] = {
true,
false,
"mediumpurple",
},
[197698] = {
true,
false,
"mediumpurple",
},
[194487] = {
true,
false,
"deepskyblue",
},
[92610] = {
true,
false,
"fuchsia",
},
[206068] = {
true,
false,
"DEATHKNIGHT",
},
[166299] = {
true,
false,
"fuchsia",
},
[167962] = {
true,
true,
"fuchsia",
},
[56792] = {
true,
false,
"fuchsia",
},
[186120] = {
true,
false,
"DRUID",
},
[190340] = {
true,
false,
"deepskyblue",
},
[136249] = {
true,
false,
"plum",
},
[134331] = {
true,
false,
"gold",
},
[133436] = {
true,
false,
"gold",
},
[186121] = {
true,
false,
"DRUID",
},
[178630] = {
true,
false,
"deepskyblue",
},
[164510] = {
true,
false,
"fuchsia",
},
[171799] = {
true,
false,
"fuchsia",
},
[184331] = {
true,
false,
"mediumpurple",
},
[167963] = {
true,
false,
"blue",
},
[206070] = {
true,
false,
"mediumpurple",
},
[180495] = {
true,
false,
"fuchsia",
},
[166301] = {
true,
false,
"fuchsia",
},
[40936] = {
true,
false,
"mediumpurple",
},
[114544] = {
true,
false,
"fuchsia",
},
[186122] = {
true,
false,
"blue",
},
[190342] = {
true,
false,
"fuchsia",
},
[101437] = {
true,
false,
"fuchsia",
},
[122984] = {
true,
false,
"mediumpurple",
},
[41096] = {
true,
false,
"fuchsia",
},
[166302] = {
true,
false,
"deepskyblue",
},
[114334] = {
true,
false,
"mediumpurple",
},
[134418] = {
true,
false,
"deepskyblue",
},
[144296] = {
true,
false,
"mediumpurple",
},
[204918] = {
true,
false,
"fuchsia",
},
[167965] = {
true,
false,
"blue",
},
[40577] = {
true,
false,
"mediumpurple",
},
[195842] = {
true,
false,
"deepskyblue",
},
[127879] = {
true,
false,
"blue",
},
[104251] = {
true,
false,
"fuchsia",
},
[45572] = {
true,
false,
"fuchsia",
},
[163618] = {
true,
false,
"blue",
},
[139422] = {
true,
false,
"gold",
},
[101438] = {
true,
false,
"blue",
},
[165919] = {
true,
false,
"mediumpurple",
},
[162691] = {
true,
false,
"fuchsia",
},
[167967] = {
true,
false,
"blue",
},
[45924] = {
true,
false,
"MAGE",
},
[189706] = {
true,
false,
"yellow",
},
[186125] = {
true,
false,
"fuchsia",
},
[190345] = {
true,
false,
"blue",
},
[184335] = {
true,
false,
"fuchsia",
},
[100991] = {
true,
false,
"fuchsia",
},
[129699] = {
true,
false,
"DRUID",
},
[98370] = {
true,
false,
"fuchsia",
},
[165410] = {
true,
false,
"mediumpurple",
},
[205435] = {
true,
false,
"mediumpurple",
},
[163620] = {
true,
false,
"blue",
},
[205691] = {
true,
false,
"blue",
},
[83025] = {
true,
false,
"blue",
},
[154014] = {
true,
false,
"deepskyblue",
},
[193799] = {
true,
false,
"fuchsia",
},
[177817] = {
true,
false,
"blue",
},
[179733] = {
true,
false,
"fuchsia",
},
[135234] = {
true,
false,
"DEATHKNIGHT",
},
[171805] = {
true,
false,
"blue",
},
[98691] = {
true,
false,
"blue",
},
[168992] = {
true,
false,
"deepskyblue",
},
[134338] = {
true,
false,
"navajowhite",
},
[204030] = {
true,
false,
"DEATHKNIGHT",
},
[45477] = {
true,
false,
"blue",
},
[196102] = {
true,
false,
"blue",
},
[177816] = {
true,
false,
"deepskyblue",
},
[98243] = {
true,
false,
"mediumpurple",
},
[188302] = {
true,
false,
"yellow",
},
[83026] = {
true,
false,
"mediumpurple",
},
[114803] = {
true,
false,
"deepskyblue",
},
[40586] = {
true,
false,
"mediumpurple",
},
[131825] = {
true,
false,
"mediumpurple",
},
[81236] = {
true,
false,
"deepskyblue",
},
[130404] = {
true,
false,
"fuchsia",
},
[189901] = {
true,
false,
"mediumpurple",
},
[163458] = {
true,
false,
"deepskyblue",
},
[135235] = {
true,
false,
"goldenrod",
},
[82579] = {
true,
false,
"deepskyblue",
},
[198997] = {
true,
false,
"mediumpurple",
},
[131527] = {
true,
false,
"mediumpurple",
},
[165414] = {
true,
false,
"deepskyblue",
},
[122971] = {
true,
false,
"mediumpurple",
},
[193291] = {
true,
false,
"fuchsia",
},
[151476] = {
true,
false,
"mediumpurple",
},
[207969] = {
true,
false,
"fuchsia",
},
[155824] = {
true,
false,
"blue",
},
[187154] = {
true,
false,
"deepskyblue",
},
[175517] = {
true,
false,
"blue",
},
[184125] = {
true,
false,
"DRUID",
},
[133870] = {
true,
false,
"fuchsia",
},
[194315] = {
true,
false,
"mediumpurple",
},
[104300] = {
true,
false,
"fuchsia",
},
[135365] = {
true,
false,
"mediumpurple",
},
[130661] = {
true,
false,
"lightgreen",
},
[192781] = {
true,
false,
"MAGE",
},
[192767] = {
true,
false,
"mediumpurple",
},
[193293] = {
true,
false,
"mediumpurple",
},
[187155] = {
true,
false,
"deepskyblue",
},
[194316] = {
true,
false,
"mediumpurple",
},
[192481] = {
true,
false,
"fuchsia",
},
[163882] = {
true,
false,
"mediumpurple",
},
[184124] = {
true,
false,
"DRUID",
},
[195851] = {
true,
false,
"blue",
},
[134599] = {
true,
false,
"gold",
},
[201222] = {
true,
false,
"mediumpurple",
},
[173729] = {
true,
false,
"fuchsia",
},
[194317] = {
true,
false,
"mediumpurple",
},
[168310] = {
true,
false,
"fuchsia",
},
[135239] = {
true,
false,
"paleturquoise",
},
[98949] = {
true,
false,
"mediumpurple",
},
[196203] = {
true,
false,
"deepskyblue",
},
[134600] = {
true,
false,
"peru",
},
[201223] = {
true,
false,
"blue",
},
[125977] = {
true,
false,
"fuchsia",
},
[198326] = {
true,
false,
"mediumpurple",
},
[115765] = {
true,
false,
"fuchsia",
},
[135240] = {
true,
false,
"blue",
},
[95834] = {
true,
false,
"fuchsia",
},
[141285] = {
true,
false,
"lightgreen",
},
[187192] = {
true,
false,
"mediumpurple",
},
[156212] = {
true,
false,
"deepskyblue",
},
[195265] = {
true,
false,
"mediumpurple",
},
[114266] = {
true,
false,
"deepskyblue",
},
[134284] = {
true,
false,
"deepskyblue",
},
[135241] = {
true,
false,
"peru",
},
[102019] = {
true,
false,
"fuchsia",
},
[189265] = {
true,
false,
"fuchsia",
},
[100485] = {
true,
false,
"deepskyblue",
},
[104273] = {
true,
false,
"mediumpurple",
},
[133835] = {
true,
false,
"deepskyblue",
},
[80936] = {
true,
false,
"blue",
},
[165805] = {
true,
false,
"mediumpurple",
},
[59873] = {
true,
false,
"mediumpurple",
},
[155830] = {
true,
false,
"deepskyblue",
},
[192786] = {
true,
false,
"blue",
},
[183707] = {
true,
false,
"deepskyblue",
},
[116549] = {
true,
false,
"deepskyblue",
},
[133836] = {
true,
false,
"blue",
},
[182045] = {
true,
false,
"fuchsia",
},
[81432] = {
true,
false,
"deepskyblue",
},
[192788] = {
true,
false,
"fuchsia",
},
[155831] = {
true,
false,
"fuchsia",
},
[192787] = {
false,
false,
"fuchsia",
},
[206214] = {
true,
false,
"mediumpurple",
},
[102788] = {
true,
false,
"mediumpurple",
},
[187033] = {
true,
false,
"fuchsia",
},
[168747] = {
true,
false,
"fuchsia",
},
[136139] = {
true,
false,
"peru",
},
[95769] = {
true,
false,
"fuchsia",
},
[100486] = {
true,
false,
"fuchsia",
},
[163121] = {
true,
false,
"blue",
},
[59546] = {
true,
false,
"deepskyblue",
},
[76446] = {
true,
false,
"blue",
},
[98696] = {
true,
false,
"mediumpurple",
},
[141283] = {
true,
false,
"navajowhite",
},
[190359] = {
true,
false,
"blue",
},
[189464] = {
true,
false,
"fuchsia",
},
[168109] = {
true,
false,
"deepskyblue",
},
[162099] = {
true,
false,
"fuchsia",
},
[96587] = {
true,
false,
"deepskyblue",
},
[196115] = {
true,
false,
"fuchsia",
},
[156244] = {
true,
false,
"mediumpurple",
},
[134990] = {
true,
false,
"honeydew",
},
[138187] = {
true,
false,
"deepskyblue",
},
[59553] = {
true,
false,
"mediumpurple",
},
[133482] = {
true,
false,
"maroon",
},
[197905] = {
true,
false,
"deepskyblue",
},
[167113] = {
true,
false,
"blue",
},
[131666] = {
true,
false,
"deepskyblue",
},
[164506] = {
true,
false,
"blue",
},
[170483] = {
true,
false,
"fuchsia",
},
[176959] = {
true,
false,
"deepskyblue",
},
[189466] = {
true,
false,
"mediumpurple",
},
[45928] = {
true,
false,
"blue",
},
[131819] = {
true,
false,
"deepskyblue",
},
[176551] = {
true,
false,
"deepskyblue",
},
[131667] = {
true,
false,
"mediumpurple",
},
[144071] = {
true,
false,
"gold",
},
[137830] = {
true,
false,
"deepskyblue",
},
[190362] = {
true,
false,
"fuchsia",
},
[189467] = {
true,
false,
"blue",
},
[196198] = {
true,
false,
"blue",
},
[98965] = {
true,
false,
"mediumpurple",
},
[59547] = {
true,
false,
"mediumpurple",
},
[196117] = {
true,
false,
"mediumpurple",
},
[208521] = {
true,
false,
"deepskyblue",
},
[82597] = {
true,
false,
"fuchsia",
},
[189340] = {
true,
false,
"mediumpurple",
},
[130400] = {
true,
false,
"deepskyblue",
},
[163459] = {
true,
false,
"blue",
},
[163126] = {
true,
false,
"deepskyblue",
},
[193944] = {
true,
false,
"deepskyblue",
},
[131669] = {
true,
false,
"DEATHKNIGHT",
},
[165556] = {
true,
false,
"fuchsia",
},
[115642] = {
true,
false,
"blue",
},
[95842] = {
true,
false,
"deepskyblue",
},
[163894] = {
true,
false,
"blue",
},
[45919] = {
true,
false,
"mediumpurple",
},
[168156] = {
true,
false,
"fuchsia",
},
[129517] = {
true,
false,
"fuchsia",
},
[131670] = {
true,
false,
"palegreen",
},
[198933] = {
true,
false,
"mediumpurple",
},
[187315] = {
true,
false,
"blue",
},
[168882] = {
true,
false,
"fuchsia",
},
[81820] = {
true,
false,
"fuchsia",
},
[171184] = {
true,
false,
"mediumpurple",
},
[163128] = {
true,
false,
"deepskyblue",
},
[169924] = {
true,
false,
"mediumpurple",
},
[192796] = {
true,
false,
"fuchsia",
},
[168627] = {
true,
false,
"deepskyblue",
},
[204560] = {
true,
false,
"fuchsia",
},
[94224] = {
true,
false,
"fuchsia",
},
[189471] = {
true,
false,
"deepskyblue",
},
[186658] = {
true,
false,
"deepskyblue",
},
[189727] = {
true,
false,
"DRUID",
},
[99358] = {
true,
false,
"deepskyblue",
},
[155090] = {
true,
false,
"deepskyblue",
},
[184023] = {
true,
false,
"blue",
},
[175550] = {
true,
false,
"fuchsia",
},
[86552] = {
true,
false,
"deepskyblue",
},
[189472] = {
true,
false,
"deepskyblue",
},
[185508] = {
true,
false,
"red",
},
[115388] = {
true,
false,
"fuchsia",
},
[131545] = {
true,
false,
"mediumpurple",
},
[150142] = {
true,
false,
"deepskyblue",
},
[152898] = {
true,
false,
"fuchsia",
},
[168942] = {
true,
false,
"blue",
},
[190368] = {
true,
false,
"fuchsia",
},
[164921] = {
true,
false,
"deepskyblue",
},
[198311] = {
true,
false,
"mediumpurple",
},
[189729] = {
true,
false,
"DRUID",
},
[188703] = {
true,
false,
"yellow",
},
[156226] = {
true,
false,
"deepskyblue",
},
[188067] = {
true,
false,
"blue",
},
[213770] = {
true,
false,
"mediumpurple",
},
[168886] = {
true,
false,
"deepskyblue",
},
[134232] = {
true,
false,
"goldenrod",
},
[45930] = {
true,
false,
"deepskyblue",
},
[134629] = {
true,
false,
"navajowhite",
},
[133593] = {
true,
false,
"honeydew",
},
[98275] = {
true,
false,
"fuchsia",
},
[40943] = {
true,
false,
"fuchsia",
},
[157634] = {
true,
false,
"blue",
},
[190370] = {
true,
false,
"deepskyblue",
},
[166969] = {
true,
false,
"deepskyblue",
},
[197671] = {
true,
false,
"blue",
},
[192800] = {
true,
false,
"blue",
},
[205727] = {
true,
false,
"deepskyblue",
},
[195927] = {
true,
false,
"mediumpurple",
},
[81819] = {
true,
false,
"deepskyblue",
},
[104270] = {
true,
false,
"mediumpurple",
},
[190371] = {
true,
false,
"blue",
},
[166970] = {
true,
false,
"blue",
},
[82590] = {
true,
false,
"blue",
},
[206074] = {
true,
false,
"DEATHKNIGHT",
},
[166971] = {
true,
false,
"fuchsia",
},
[131677] = {
true,
false,
"deepskyblue",
},
[128434] = {
true,
false,
"fuchsia",
},
[189478] = {
true,
false,
"mediumpurple",
},
[172981] = {
true,
false,
"blue",
},
[203799] = {
true,
false,
"deepskyblue",
},
[95766] = {
true,
false,
"blue",
},
[152905] = {
true,
false,
"fuchsia",
},
[163520] = {
true,
false,
"mediumpurple",
},
[164414] = {
true,
false,
"deepskyblue",
},
[133852] = {
true,
false,
"blue",
},
[197406] = {
true,
false,
"fuchsia",
},
[190373] = {
true,
false,
"deepskyblue",
},
[164926] = {
true,
false,
"fuchsia",
},
[134364] = {
true,
false,
"honeydew",
},
[167612] = {
true,
false,
"blue",
},
[206230] = {
true,
false,
"fuchsia",
},
[166589] = {
true,
false,
"fuchsia",
},
[199325] = {
true,
false,
"deepskyblue",
},
[114624] = {
true,
false,
"mediumpurple",
},
[197535] = {
true,
false,
"mediumpurple",
},
[180070] = {
true,
false,
"fuchsia",
},
[132491] = {
true,
false,
"palegreen",
},
[150168] = {
true,
false,
"fuchsia",
},
[198047] = {
true,
false,
"mediumpurple",
},
[205337] = {
true,
false,
"fuchsia",
},
[165824] = {
true,
false,
"fuchsia",
},
[128435] = {
true,
false,
"maroon",
},
[194467] = {
true,
false,
"blue",
},
[201756] = {
true,
false,
"fuchsia",
},
[86684] = {
true,
false,
"deepskyblue",
},
[76518] = {
true,
false,
"fuchsia",
},
[176565] = {
true,
false,
"deepskyblue",
},
[177716] = {
true,
false,
"deepskyblue",
},
[190377] = {
true,
false,
"fuchsia",
},
[101326] = {
true,
false,
"fuchsia",
},
[186284] = {
true,
false,
"mediumpurple",
},
[164929] = {
true,
false,
"blue",
},
[102287] = {
true,
false,
"mediumpurple",
},
[136541] = {
true,
false,
"deepskyblue",
},
[192934] = {
true,
false,
"blue",
},
[99664] = {
true,
false,
"fuchsia",
},
[133345] = {
true,
false,
"goldenrod",
},
[135007] = {
true,
false,
"gold",
},
[194469] = {
true,
false,
"blue",
},
[135263] = {
true,
false,
"maroon",
},
[45932] = {
true,
false,
"fuchsia",
},
[102094] = {
true,
false,
"deepskyblue",
},
[84767] = {
true,
false,
"mediumpurple",
},
[169905] = {
true,
false,
"blue",
},
[163524] = {
true,
false,
"fuchsia",
},
[189227] = {
true,
false,
"fuchsia",
},
[131586] = {
true,
false,
"mediumpurple",
},
[168384] = {
true,
false,
"blue",
},
[192680] = {
true,
false,
"mediumpurple",
},
[195877] = {
true,
false,
"fuchsia",
},
[205212] = {
true,
false,
"fuchsia",
},
[131812] = {
true,
false,
"fuchsia",
},
[98706] = {
true,
false,
"mediumpurple",
},
[212681] = {
true,
false,
"deepskyblue",
},
[203678] = {
true,
false,
"mediumpurple",
},
[188244] = {
true,
false,
"mediumpurple",
},
[101008] = {
true,
false,
"fuchsia",
},
[102095] = {
true,
false,
"fuchsia",
},
[114626] = {
true,
false,
"fuchsia",
},
[131685] = {
true,
false,
"deepskyblue",
},
[198308] = {
true,
false,
"mediumpurple",
},
[114627] = {
true,
false,
"blue",
},
[167998] = {
true,
false,
"mediumpurple",
},
[195928] = {
true,
false,
"mediumpurple",
},
[204536] = {
true,
false,
"blue",
},
[113537] = {
true,
false,
"mediumpurple",
},
[192333] = {
true,
false,
"mediumpurple",
},
[84957] = {
true,
false,
"fuchsia",
},
[196263] = {
true,
false,
"deepskyblue",
},
[180015] = {
true,
false,
"blue",
},
[190381] = {
true,
false,
"fuchsia",
},
[184107] = {
true,
false,
"mediumpurple",
},
[186664] = {
true,
false,
"deepskyblue",
},
[115395] = {
true,
false,
"mediumpurple",
},
[131849] = {
true,
false,
"blue",
},
[127799] = {
true,
false,
"blue",
},
[80805] = {
true,
false,
"mediumpurple",
},
[129366] = {
true,
false,
"goldenrod",
},
[167876] = {
true,
false,
"fuchsia",
},
[199717] = {
true,
false,
"mediumpurple",
},
[138465] = {
true,
false,
"lightcoral",
},
[167964] = {
true,
false,
"fuchsia",
},
[59552] = {
true,
false,
"fuchsia",
},
[167607] = {
true,
false,
"mediumpurple",
},
[170690] = {
true,
false,
"blue",
},
[130485] = {
true,
false,
"peru",
},
[186124] = {
true,
false,
"deepskyblue",
},
[200126] = {
true,
false,
"fuchsia",
},
[99192] = {
true,
false,
"mediumpurple",
},
[86547] = {
true,
false,
"blue",
},
[176573] = {
true,
false,
"fuchsia",
},
[137511] = {
true,
false,
"navajowhite",
},
[190128] = {
true,
false,
"yellow",
},
[114629] = {
true,
false,
"blue",
},
[162763] = {
true,
true,
"fuchsia",
},
[186420] = {
true,
false,
"deepskyblue",
},
[167111] = {
true,
false,
"deepskyblue",
},
[136549] = {
true,
false,
"lightcoral",
},
[190174] = {
true,
false,
"fuchsia",
},
[151127] = {
true,
false,
"fuchsia",
},
[177891] = {
true,
false,
"mediumpurple",
},
[189234] = {
true,
false,
"mediumpurple",
},
[129527] = {
true,
false,
"deepskyblue",
},
[168007] = {
true,
false,
"blue",
},
[179388] = {
true,
false,
"deepskyblue",
},
[101075] = {
true,
false,
"fuchsia",
},
[176575] = {
true,
false,
"deepskyblue",
},
[201790] = {
true,
false,
"deepskyblue",
},
[136934] = {
true,
false,
"navajowhite",
},
[189235] = {
true,
false,
"fuchsia",
},
[80935] = {
true,
false,
"deepskyblue",
},
[136295] = {
true,
false,
"peru",
},
[169159] = {
true,
false,
"gold",
},
[131436] = {
true,
false,
"mediumpurple",
},
[41139] = {
true,
false,
"aqua",
},
[155221] = {
true,
false,
"deepskyblue",
},
[96664] = {
true,
false,
"blue",
},
[87252] = {
true,
false,
"mediumpurple",
},
[169927] = {
true,
false,
"fuchsia",
},
[115640] = {
true,
false,
"fuchsia",
},
[185528] = {
true,
false,
"blue",
},
[185656] = {
true,
false,
"fuchsia",
},
[101637] = {
true,
false,
"mediumpurple",
},
[156245] = {
true,
false,
"mediumpurple",
},
[164557] = {
true,
false,
"mediumpurple",
},
[189719] = {
true,
false,
"DRUID",
},
[199595] = {
true,
false,
"mediumpurple",
},
[134251] = {
true,
false,
"honeydew",
},
[185529] = {
true,
false,
"fuchsia",
},
[141284] = {
true,
false,
"gold",
},
[168932] = {
true,
false,
"gold",
},
[194816] = {
true,
false,
"mediumpurple",
},
[131847] = {
true,
false,
"DEATHKNIGHT",
},
[130488] = {
true,
false,
"lightsalmon",
},
[129529] = {
true,
false,
"fuchsia",
},
[40788] = {
true,
false,
"mediumpurple",
},
[45935] = {
true,
false,
"fuchsia",
},
[162038] = {
true,
false,
"mediumpurple",
},
[189878] = {
true,
false,
"yellow",
},
[104274] = {
true,
false,
"mediumpurple",
},
[131823] = {
true,
false,
"mediumpurple",
},
[111563] = {
true,
false,
"blue",
},
[114632] = {
true,
false,
"deepskyblue",
},
[134139] = {
true,
false,
"gold",
},
[186220] = {
true,
false,
"deepskyblue",
},
[134417] = {
true,
false,
"gold",
},
[168396] = {
true,
false,
"mediumpurple",
},
[86372] = {
true,
false,
"blue",
},
[131824] = {
true,
false,
"mediumpurple",
},
[179010] = {
true,
false,
"deepskyblue",
},
[95771] = {
true,
false,
"deepskyblue",
},
[114804] = {
true,
false,
"blue",
},
[151773] = {
true,
false,
"blue",
},
[178171] = {
true,
false,
"fuchsia",
},
[195930] = {
true,
false,
"mediumpurple",
},
[104275] = {
true,
false,
"mediumpurple",
},
[126845] = {
true,
false,
"fuchsia",
},
[114633] = {
true,
false,
"mediumpurple",
},
[80938] = {
true,
false,
"mediumpurple",
},
[88163] = {
true,
false,
"fuchsia",
},
[118489] = {
true,
false,
"fuchsia",
},
[157017] = {
true,
false,
"blue",
},
[169421] = {
true,
false,
"gold",
},
[170572] = {
true,
false,
"blue",
},
[164562] = {
true,
false,
"fuchsia",
},
[40633] = {
true,
false,
"deepskyblue",
},
[180091] = {
true,
false,
"mediumpurple",
},
[107288] = {
true,
false,
"deepskyblue",
},
[133361] = {
true,
false,
"fuchsia",
},
[162133] = {
true,
false,
"fuchsia",
},
[189555] = {
true,
false,
"blue",
},
[199037] = {
true,
false,
"deepskyblue",
},
[164563] = {
true,
false,
"blue",
},
[206063] = {
true,
false,
"DEATHKNIGHT",
},
[44566] = {
true,
false,
"mediumpurple",
},
[179269] = {
true,
false,
"fuchsia",
},
[164737] = {
true,
false,
"fuchsia",
},
[171341] = {
true,
false,
"deepskyblue",
},
[59555] = {
true,
false,
"fuchsia",
},
[190034] = {
true,
false,
"mediumpurple",
},
[177808] = {
true,
false,
"mediumpurple",
},
[135167] = {
true,
false,
"peru",
},
[84520] = {
true,
false,
"mediumpurple",
},
[134174] = {
true,
false,
"honeydew",
},
[165076] = {
true,
false,
"blue",
},
[134514] = {
true,
false,
"lightgreen",
},
[129788] = {
true,
false,
"fuchsia",
},
[180323] = {
true,
false,
"fuchsia",
},
[126847] = {
true,
false,
"DRUID",
},
[179852] = {
true,
false,
"blue",
},
[198995] = {
true,
false,
"mediumpurple",
},
[128455] = {
true,
false,
"fuchsia",
},
[185537] = {
true,
false,
"blue",
},
[171343] = {
true,
false,
"fuchsia",
},
[169425] = {
true,
false,
"gold",
},
[115019] = {
true,
false,
"deepskyblue",
},
[168658] = {
true,
false,
"fuchsia",
},
[212775] = {
true,
false,
"deepskyblue",
},
[165911] = {
true,
false,
"fuchsia",
},
[160495] = {
true,
false,
"deepskyblue",
},
[194745] = {
true,
false,
"fuchsia",
},
[75506] = {
true,
false,
"deepskyblue",
},
[189886] = {
true,
false,
"gold",
},
[102232] = {
true,
false,
"fuchsia",
},
[126848] = {
true,
false,
"deepskyblue",
},
[184132] = {
true,
false,
"fuchsia",
},
[192955] = {
true,
false,
"fuchsia",
},
[179847] = {
true,
false,
"fuchsia",
},
[137458] = {
true,
false,
"deepskyblue",
},
[168318] = {
true,
false,
"mediumpurple",
},
[192464] = {
true,
false,
"fuchsia",
},
[115020] = {
true,
false,
"mediumpurple",
},
[198998] = {
true,
false,
"mediumpurple",
},
[97068] = {
true,
false,
"mediumpurple",
},
[81984] = {
true,
false,
"mediumpurple",
},
[157810] = {
true,
false,
"deepskyblue",
},
[114317] = {
true,
false,
"deepskyblue",
},
[180335] = {
true,
false,
"deepskyblue",
},
[169428] = {
true,
false,
"gold",
},
[127757] = {
true,
false,
"mediumpurple",
},
[179842] = {
true,
false,
"fuchsia",
},
[212778] = {
true,
false,
"fuchsia",
},
[101476] = {
true,
false,
"fuchsia",
},
[65317] = {
true,
false,
"mediumpurple",
},
[183495] = {
true,
false,
"mediumpurple",
},
[179841] = {
true,
false,
"deepskyblue",
},
[169429] = {
true,
false,
"gold",
},
[173016] = {
true,
false,
"deepskyblue",
},
[180348] = {
true,
false,
"blue",
},
[176974] = {
true,
false,
"fuchsia",
},
[190401] = {
true,
false,
"mediumpurple",
},
[136186] = {
true,
false,
"honeydew",
},
[208698] = {
true,
false,
"fuchsia",
},
[191847] = {
true,
false,
"deepskyblue",
},
[169430] = {
true,
false,
"gold",
},
[205363] = {
true,
false,
"deepskyblue",
},
[205408] = {
true,
false,
"deepskyblue",
},
[39960] = {
true,
false,
"DEATHKNIGHT",
},
[134137] = {
true,
false,
"deepskyblue",
},
[197857] = {
true,
false,
"deepskyblue",
},
[183497] = {
true,
false,
"blue",
},
[195399] = {
true,
false,
"fuchsia",
},
[40634] = {
true,
false,
"deepskyblue",
},
[208438] = {
true,
false,
"deepskyblue",
},
[150250] = {
true,
false,
"deepskyblue",
},
[44404] = {
true,
false,
"fuchsia",
},
[190403] = {
true,
false,
"mediumpurple",
},
[129600] = {
true,
false,
"fuchsia",
},
[180429] = {
true,
false,
"mediumpurple",
},
[115406] = {
true,
false,
"deepskyblue",
},
[168934] = {
true,
false,
"fuchsia",
},
[195135] = {
true,
false,
"fuchsia",
},
[150251] = {
true,
false,
"blue",
},
[162039] = {
true,
false,
"deepskyblue",
},
},
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
0.960784375667572,
0.501960813999176,
},
["aggro"] = {
0.8666667342185974,
0.08627451211214066,
0.08627451211214066,
},
["noaggro"] = {
0,
0.250980406999588,
},
["pulling"] = {
nil,
0.2980392277240753,
0.168627455830574,
},
},
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["pet_height_scale"] = 0.8499999642372131,
["usePlaterWidget"] = false,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
["aura_alpha"] = 0.84999996423721,
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["aura_timer_text_font"] = "PT Sans Narrow",
["minor_width_scale"] = 0.89999997615814,
["aura_consolidate"] = true,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
},
["Mage-MOD"] = {
["target_shady_combat_only"] = false,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Add the buff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
398151,
},
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1614608904,
["NpcNames"] = {
"174773",
},
["url"] = "",
["Icon"] = 135945,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["Revision"] = 188,
["semver"] = "",
["Desc"] = "Time to die Spiteful affix",
["version"] = -1,
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Name"] = "M+ Spiteful",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
392488,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Desc"] = "Add the debuff name in the trigger box.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["NpcNames"] = {
},
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.168627455830574,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
384194,
392451,
392924,
397889,
209413,
207980,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1622577650,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Revision"] = 64,
["semver"] = "",
["Desc"] = "Auto set skull marker",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Auto Set Skull",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = false,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775244,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["Revision"] = 209,
["semver"] = "",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["version"] = -1,
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Countdown",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["NpcNames"] = {
},
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
209495,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1628775247,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 1029718,
["Options"] = {
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["Revision"] = 270,
["semver"] = "",
["Desc"] = "Show above the nameplate who is the player fixated",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Name"] = "Fixate [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1622577644,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = 136048,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Key"] = "fontSize",
["Value"] = 16,
["Name"] = "Text Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["Revision"] = 234,
["semver"] = "",
["Desc"] = "Show the energy amount above the nameplate.",
["version"] = -1,
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["Name"] = "Unit - Show Energy [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775245,
["url"] = "",
["Icon"] = 841383,
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["Revision"] = 267,
["semver"] = "",
["NpcNames"] = {
},
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["version"] = -1,
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Prio"] = 99,
["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["OptionsValues"] = {
["NameplateSizeOffset"] = 1.3500000238419,
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["Time"] = 1648170127,
["NpcNames"] = {
},
["url"] = "https://wago.io/1TlaFYtDO/75",
["Icon"] = 2065634,
["Options"] = {
{
["Type"] = 4,
["Key"] = "ShowArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "ArrowAlpha",
["Value"] = 1,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Key"] = "GlowAlpha",
["Value"] = 0.7,
["Name"] = "Glow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 1,
["Key"] = "NameplateSizeOffset",
["Value"] = 1.25,
["Name"] = "Nameplate Height Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.channeling = nil\n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health [2]\n        if Plater.IsInCombat() then\n            nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n            nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        end\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, nameplateHeight)\n        \n        unitFrame.enlargedByScript = false\n    end\nend",
["Revision"] = 2918,
["semver"] = "1.0.74",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["version"] = 75,
["Author"] = "Bombad£o-Azralon",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
["Name"] = "M+ Explosive [Fixed]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        if not envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = true\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        if envTable.channeling then\n            envTable.overlaySpark:ClearAllPoints()\n            envTable.topArrow:ClearAllPoints()\n            envTable.channeling = false\n        end\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
["SpellIds"] = {
240446,
347363,
339415,
318406,
331223,
326607,
327885,
334625,
328016,
324527,
344005,
321999,
340219,
328986,
320576,
322358,
341445,
336451,
332672,
331398,
331379,
334664,
334967,
320230,
328146,
320631,
322493,
324372,
327240,
322939,
328756,
331745,
340304,
319685,
326827,
342481,
356548,
356537,
356407,
349987,
349663,
350090,
355782,
350922,
355438,
357404,
357189,
347150,
355057,
355139,
355429,
355584,
358131,
350517,
357260,
351119,
351646,
350180,
335783,
294533,
353782,
347855,
353769,
331935,
336383,
342160,
353742,
353444,
277039,
278192,
329909,
358328,
325632,
81008,
296355,
355224,
296839,
310392,
367380,
297966,
332002,
329904,
294517,
329423,
329905,
353124,
358270,
295985,
184381,
318995,
260344,
301952,
362820,
329930,
355212,
332165,
358327,
359770,
364040,
361644,
363088,
361989,
363024,
365008,
365805,
365958,
360717,
361923,
363533,
364386,
364114,
362028,
362617,
365385,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n    }    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["OptionsValues"] = {
["customSize"] = {
{
"17",
"120, 16",
},
},
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1628775232,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_is_timer",
["Options"] = {
{
["Type"] = 7,
["Key"] = "customSize",
["Value"] = {
{
"17",
"120, 16",
},
},
["Name"] = "Customized Size (Key = Spell ID, Value = Width, Height)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Enter the spellId into the Key and width,height into the Value. Example: Key 17 Value 120,16",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "",
["Min"] = 5,
["Key"] = "width",
["Value"] = 120,
["Name"] = "Cast Bar Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 5,
["Key"] = "height",
["Value"] = 16,
["Name"] = "Cast Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Set the size of the cast time",
["Min"] = 8,
["Key"] = "timerFontSize",
["Value"] = 12,
["Name"] = "Cast Timer Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option7",
["Value"] = "Time Separators",
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "separatorColor",
["Value"] = {
1,
1,
1,
0.5992676615715,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "",
["Min"] = 1,
["Key"] = "separatorWidth",
["Value"] = 1,
["Name"] = "Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.HideLines(unitFrame)\n    \nend\n\n\n",
["Revision"] = 283,
["semver"] = "",
["Desc"] = "When a spell resembles more a timer than a spell being cast",
["version"] = -1,
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    envTable.UpdateLinePositions(unitFrame) \n    \n    unitFrame.castBar:SetAlpha(1)\nend\n\n\n\n\n",
["Name"] = "Cast - Castbar is Timer [P]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --override the update frequency to run every tick\n    unitFrame.castBar.ThrottleUpdate = -1\n    \n    \n    local lineTable = unitFrame.CastbarIsTimerVerticalLines\n    for i = 1, #lineTable do\n        local line = lineTable[i]\n        \n        if (not line.playedAnim)  then\n            if (envTable._CastPercent > line.percent) then\n                line.anim:Play()\n                line.playedAnim = true\n                \n                if (unitFrame.castBar.Spark.bumpAnimation:IsPlaying()) then\n                    unitFrame.castBar.Spark.bumpAnimation:Stop()\n                end\n                unitFrame.castBar.Spark.bumpAnimation:Play()                    \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
354080,
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.SetCastbarSize(unitFrame, envTable, unitId, scriptTable)\n        local spellId = envTable._SpellID\n        local overridedSize = scriptTable.config.customSize[tostring(spellId)]\n        \n        if (overridedSize) then\n            local width, height = Plater.GetNumbersFromString(overridedSize)\n            Plater.SetCastBarSize(unitFrame, width, height)\n        else\n            local castBarWidth = scriptTable.config.width\n            local castBarHeight = scriptTable.config.height\n            Plater.SetCastBarSize(unitFrame, castBarWidth, castBarHeight)\n        end\n        \n        --update timer text\n        Plater:SetFontSize (unitFrame.castBar.percentText, scriptTable.config.timerFontSize)\n    end\n    \n    --sub divisions\n    \n    unitFrame.CastbarIsTimerVerticalLines = unitFrame.CastbarIsTimerVerticalLines or {}\n    local amountOfLines = 6\n    local animationSpeed = 0.2\n    \n    local onAnimationStop = function(self)\n        self:GetParent():Hide()\n    end\n    \n    if (not unitFrame.CastbarIsTimerVerticalLines[1]) then\n        for i = 1, amountOfLines do\n            local verticalLine = unitFrame.castBar:CreateTexture(nil, \"border\", nil, -3)\n            unitFrame.CastbarIsTimerVerticalLines[i] = verticalLine\n            verticalLine:SetColorTexture(1, 1, 1, 1)\n            \n            local animationHub = Plater:CreateAnimationHub(verticalLine, onPlayFunc, onAnimationStop)       \n            Plater:CreateAnimation (animationHub, \"scale\", 1, animationSpeed, 1, 1, 2.5, 2.5)\n            Plater:CreateAnimation (animationHub, \"alpha\", 1, animationSpeed, 1, 0)\n            Plater:CreateAnimation (animationHub, \"translation\", 1, animationSpeed, -16, 0)\n            verticalLine.anim = animationHub\n        end\n        \n        --make an animation on the spark texture\n        local spark = unitFrame.castBar.Spark\n        local animationHub = Plater:CreateAnimationHub(spark, onPlayFunc, onStopFunc)\n        Plater:CreateAnimation (animationHub, \"scale\", 1, 0.2, 1.2, 1.2, 1, 1)\n        --Plater:CreateAnimation (animationHub, \"scale\", 1, 0.3, 1, 1, 1.2, 1.2)\n        --Plater:CreateAnimation (animationHub, \"scale\", 2, 0.2, 1.2, 1.2, 1, 1)\n        spark.bumpAnimation = animationHub\n        --Plater:CreateAnimation (animationHub, \"alpha\", 1, 0.5, 1, 0)\n        \n    end\n    \n    function envTable.UpdateLinePositions(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        local castBarWidth = unitFrame.castBar:GetWidth()\n        local castBarHeight = unitFrame.castBar:GetHeight()\n\n        local spaceBetweenLines = castBarWidth / amountOfLines\n        local r, g, b, a = Plater:ParseColors(scriptTable.config.separatorColor)        \n        \n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:ClearAllPoints()\n            local xLocation = spaceBetweenLines * i\n            line:SetPoint(\"left\", unitFrame.castBar, \"left\", xLocation, 0)\n            line:SetSize(scriptTable.config.separatorWidth, castBarHeight)\n            line:SetColorTexture(r, g, b, a)\n            line:Show()\n            line:SetAlpha(1)\n            line:SetScale(1)\n            line.percent = xLocation / castBarWidth * 100\n            line.playedAnim = false\n            \n            if (i == amountOfLines) then\n                line:Hide()\n            end\n        end\n    end\n    \n    function envTable.HideLines(unitFrame)\n        local lineTable = unitFrame.CastbarIsTimerVerticalLines\n        for i = 1, amountOfLines do\n            local line = lineTable[i]\n            line:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Highlight the target name",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
["timerList"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1648647350,
["NpcNames"] = {
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Key"] = "timeleftToBlink",
["Value"] = 3,
["Name"] = "Timeleft to Blink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Key"] = "blinkSpeed",
["Value"] = 1,
["Name"] = "Blink Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Key"] = "blinkMaxAlpha",
["Value"] = 0.6,
["Name"] = "Blink Max Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftWarning",
["Value"] = 8,
["Name"] = "Time Left Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Key"] = "timeLeftCritical",
["Value"] = 3,
["Name"] = "Time Left Critical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["Revision"] = 377,
["semver"] = "",
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["version"] = -1,
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["Name"] = "Aura - Blink by Time Left [Plater]",
["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Prio"] = 99,
["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Enabled"] = true,
["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["NpcNames"] = {
},
["SpellIds"] = {
191284,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["NpcNames"] = {
},
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
},
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1669340967,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 137,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Name"] = "Vertical Line Alpha",
["Value"] = 0.79,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "indicatorAlpha",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Fill Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "fillColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Show a different animation for the cast bar.",
["NpcNames"] = {
},
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Play a very fast flash when the cast start",
["NpcNames"] = {
},
["SpellIds"] = {
392640,
397888,
209033,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Change the color of  add",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["NpcNames"] = {
},
["SpellIds"] = {
372743,
372749,
384933,
},
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["NpcNames"] = {
},
["SpellIds"] = {
373688,
391050,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["NpcNames"] = {
},
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Just stop casting",
["NpcNames"] = {
},
["SpellIds"] = {
377004,
381516,
196543,
199726,
},
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["NpcNames"] = {
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["NpcNames"] = {
},
["SpellIds"] = {
388886,
209676,
377912,
},
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
},
},
["pet_height_scale"] = 0.8499999642372131,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4537",
["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13415",
["SoftTargetIconGameObject"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:184",
["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:14010",
["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6610",
["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6549",
["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4535",
["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4536",
["nameplateMotion"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6927",
["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6548",
["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6964",
["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13414",
["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:6917",
["SoftTargetInteract"] = "Interface/AddOns/BetterFishing/BetterFishing.lua:180",
["nameplateShowSelf"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:352: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:348>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:143: in function <Interface/SharedXML/CallbackRegistry.lua:142>\n[string \"=[C]\"]: ?\n[string \"@Interface/SharedXML/CallbackRegistry.lua\"]:146: in function `TriggerEvent'\n[string \"@Interface/SharedXML/Settings/Blizzard_SettingControls.lua\"]:301: in function <...face/SharedXML/Settings/Blizzard_SettingControls.lua:300>\n",
["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:13440",
["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2932",
},
["url"] = "https://wago.io/RPHjubTGI/1",
["health_selection_overlay_color"] = {
0,
0.1372549086809158,
nil,
0,
},
["hover_highlight"] = false,
["spell_animations"] = false,
["hover_highlight_alpha"] = 1,
["indicator_raidmark_scale"] = 0.99999994039536,
["cast_statusbar_spark_alpha"] = 0.8299999833107,
["aura2_y_offset"] = 5,
["health_statusbar_bgtexture"] = "Clean",
["plate_config"] = {
["global_health_height"] = 15,
["friendlyplayer"] = {
["cast"] = {
121,
},
["health_incombat"] = {
121,
15,
},
["health"] = {
121,
15,
},
["cast_incombat"] = {
121,
},
["actorname_use_class_color"] = true,
},
["friendlynpc"] = {
["cast"] = {
121,
},
["actorname_text_spacing"] = 9,
["health"] = {
121,
15,
},
["cast_incombat"] = {
121,
},
["health_incombat"] = {
121,
15,
},
},
["global_health_width"] = 121,
["enemyplayer"] = {
["actorname_text_font"] = "PT Sans Narrow",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "PT Sans Narrow",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 8,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
135,
},
["all_names"] = true,
["big_actortitle_text_size"] = 10,
["actorname_text_outline"] = "OUTLINE",
["percent_text_size"] = 10,
["actorname_text_spacing"] = 11,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
135,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_size"] = 11,
["quest_color_enabled"] = true,
["health_incombat"] = {
121,
15,
},
["health"] = {
121,
15,
},
["quest_enabled"] = true,
["big_actorname_text_size"] = 10,
["big_actorname_text_font"] = "PT Sans Narrow",
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "PT Sans Narrow",
},
["enemynpc"] = {
["actorname_text_font"] = "Bebas Neue Cyrillic Regular",
["spellpercent_text_font"] = "PT Sans Narrow",
["actorname_text_size"] = 10,
["big_actortitle_text_font"] = "PT Sans Narrow",
["cast"] = {
135,
},
["spellpercent_text_size"] = 12,
["level_text_outline"] = "OUTLINE",
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["side"] = 1,
},
["percent_text_size"] = 8,
["actorname_text_spacing"] = 9,
["percent_text_font"] = "PT Sans Narrow",
["cast_incombat"] = {
135,
},
["health_incombat"] = {
135,
14,
},
["health"] = {
135,
14,
},
["big_actorname_text_font"] = "PT Sans Narrow",
["percent_text_anchor"] = {
["y"] = 0.000885009765625,
["x"] = -18.74000549316406,
},
["level_text_font"] = "PT Sans Narrow",
["spellname_text_font"] = "PT Sans Narrow",
},
},
["health_selection_overlay"] = "Smooth v2",
["aura_y_offset"] = 5,
["tank"] = {
["colors"] = {
["aggro"] = {
0,
0.4117647409439087,
},
["pulling"] = {
0,
0.847058892250061,
1,
},
["anothertank"] = {
0.7058823704719543,
0,
},
},
},
["health_statusbar_texture"] = "Clean",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Aura Reorder"] = 3,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Extra Border"] = 2,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[9] = true,
},
["cast_statusbar_color_nointerrupt"] = {
0.19607843137255,
0.050980392156863,
0.062745098039216,
1,
},
["update_throttle"] = 0.1499999910593033,
["hide_blizzard_castbar"] = true,
["extra_icon_cooldown_reverse"] = false,
["resources_settings"] = {
["chr"] = {
["Player-1307-0BE359D3"] = "ArcaneCharges",
["Player-3682-0B038C9A"] = "ArcaneCharges",
["Player-3682-0B19EC37"] = "Chi",
["Player-3209-0B2C0A65"] = "Chi",
["Player-3209-0B29D149"] = "ArcaneCharges",
["Player-3209-0B4EDE3D"] = "HolyPower",
},
},
["castbar_target_text_size"] = 8,
["npc_cache"] = {
[75829] = {
"Nhallish",
"Shadowmoon Burial Grounds",
},
[198716] = {
"Unstable Storm",
"Vault of the Incarnates",
},
[184522] = {
"Vigilant Custodian",
"Sepulcher of the First Ones",
},
[186696] = {
"Quaking Totem",
"Uldaman: Legacy of Tyr",
},
[189893] = {
"Infused Whelp",
"Ruby Life Pools",
},
[96609] = {
"Gildedfur Stag",
"Halls of Valor",
},
[194241] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[190405] = {
"Infuser Sariya",
"Halls of Infusion",
},
[196671] = {
"Arcane Ravager",
"Algeth'ar Academy",
},
[183500] = {
"Thieveing Agent",
"Sepulcher of the First Ones",
},
[184651] = {
"Subjugator Zeltoth",
"Sepulcher of the First Ones",
},
[74551] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[195265] = {
"Stormcaller Arynga",
"The Nokhud Offensive",
},
[184140] = {
"Xy Acolyte",
"Sepulcher of the First Ones",
},
[190406] = {
"Aqualing",
"Halls of Infusion",
},
[187593] = {
"Primal Flame",
"Vault of the Incarnates",
},
[24664] = {
"Kael'thas Sunstrider",
"Magisters' Terrace",
},
[195138] = {
"Detonating Crystal",
"The Azure Vault",
},
[190407] = {
"Aqua Rager",
"Halls of Infusion",
},
[95843] = {
"King Haldor",
"Halls of Valor",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
},
[74552] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[120651] = {
"Explosives",
"The Nokhud Offensive",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
},
[6230] = {
"Peacekeeper Security Suit",
"Gnomeregan",
},
[6234] = {
"Mechanized Guardian",
"Gnomeregan",
},
[198081] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[96611] = {
"Angerhoof Bull",
"Halls of Valor",
},
[84399] = {
"Vicious Mandragora",
"The Everbloom",
},
[194373] = {
"Brackenhide Gnoll",
"Brackenhide Hollow",
},
[76407] = {
"Ner'zhul",
"Shadowmoon Burial Grounds",
},
[8440] = {
"Avatar of Hakkar",
"Sunken Temple",
},
[74553] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[199233] = {
"Flamescale Captain",
"Vault of the Incarnates",
},
[196548] = {
"Ancient Branch",
"Algeth'ar Academy",
},
[5271] = {
"Atal'ai Deathwalker",
"Sunken Temple",
},
[75001] = {
"Hunter Bonetusk",
"Razorfen Kraul",
},
[5283] = {
"Nightmare Wanderer",
"Sunken Temple",
},
[5291] = {
"Hakkari Frostwing",
"Sunken Temple",
},
[192329] = {
"Territorial Eagle",
"Algeth'ar Academy",
},
[55659] = {
"Imp Gang Boss",
"Shadowmoon Burial Grounds",
},
[83697] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[83761] = {
"Ogron Laborer",
"Iron Docks",
},
[184018] = {
"Bromach",
"Uldaman: Legacy of Tyr",
},
[195399] = {
"Curious Swoglet",
"Halls of Infusion",
},
[184530] = {
"Eternal Sentry",
"Sepulcher of the First Ones",
},
[85232] = {
"Infested Venomfang",
"The Everbloom",
},
[168418] = {
"Forsworn Inquisitor",
"Spires of Ascension",
},
[84401] = {
"Swift Sproutling",
"The Everbloom",
},
[196679] = {
"Frozen Shroud",
"Vault of the Incarnates",
},
[184659] = {
"Dominated Sentinel",
"Sepulcher of the First Ones",
},
[83762] = {
"Grom'kar Deckhand",
"Iron Docks",
},
[198214] = {
"Broodguardian Ziruss",
"Vault of the Incarnates",
},
[184020] = {
"Hulking Berserker",
"Uldaman: Legacy of Tyr",
},
[197831] = {
"Quarry Stonebreaker",
"UNKNOWN",
},
[76090] = {
"Blood-Branded Razorfen",
"Razorfen Kraul",
},
[24697] = {
"Sister of Torment",
"Magisters' Terrace",
},
[170850] = {
"Raging Bloodhorn",
"Theater of Pain",
},
[24761] = {
"Brightscale Wyrm",
"Magisters' Terrace",
},
[75451] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[83763] = {
"Grom'kar Technician",
"Iron Docks",
},
[74620] = {
"Battle Boar",
"Razorfen Kraul",
},
[184022] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[189265] = {
"Qalashi Bonetender",
"Neltharus",
},
[75899] = {
"Possessed Soul",
"Shadowmoon Burial Grounds",
},
[156913] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[196043] = {
"Primalist Infuser",
"Halls of Infusion",
},
[184023] = {
"Vicious Basilisk",
"Uldaman: Legacy of Tyr",
},
[189266] = {
"Qalashi Trainee",
"Neltharus",
},
[178141] = {
"Murkbrine Scalebinder",
"Tazavesh, the Veiled Market",
},
[75452] = {
"Bonemaw",
"Shadowmoon Burial Grounds",
},
[83764] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[190034] = {
"Blazebound Destroyer",
"Ruby Life Pools",
},
[83892] = {
"Life Warden Gola",
"The Everbloom",
},
[191313] = {
"Bubbling Sapling",
"The Azure Vault",
},
[192464] = {
"Raging Ember",
"Neltharus",
},
[197835] = {
"Kaurdyth",
"UNKNOWN",
},
[194894] = {
"Primalist Stormspeaker",
"The Nokhud Offensive",
},
[196045] = {
"Corrupted Manafiend",
"Algeth'ar Academy",
},
[75453] = {
"Geomancer Acolyte",
"Razorfen Kraul",
},
[194895] = {
"Unstable Squall",
"The Nokhud Offensive",
},
[83765] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[157300] = {
"Tunk",
"Darkmaul Citadel",
},
[168681] = {
"Forsworn Helion",
"Spires of Ascension",
},
[62982] = {
"Mindbender",
"Shadowmoon Burial Grounds",
},
[82039] = {
"Rockspine Stinger",
"The Everbloom",
},
[194896] = {
"Primal Stormshield",
"The Nokhud Offensive",
},
[187224] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[196559] = {
"Volatile Sapling",
"The Azure Vault",
},
[184539] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[194897] = {
"Stormsurge Totem",
"The Nokhud Offensive",
},
[83894] = {
"Dulhu",
"The Everbloom",
},
[74751] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[75966] = {
"Defiled Spirit",
"Shadowmoon Burial Grounds",
},
[194898] = {
"Primalist Arcblade",
"The Nokhud Offensive",
},
[24698] = {
"Ethereum Smuggler",
"Magisters' Terrace",
},
[24762] = {
"Sunblade Keeper",
"Magisters' Terrace",
},
[181856] = {
"Point Defense Drone",
"Sepulcher of the First Ones",
},
[5711] = {
"Ogom the Wretched",
"Sunken Temple",
},
[5719] = {
"Morphaz",
"Sunken Temple",
},
[143622] = {
"Wild Imp",
"Shadowmoon Burial Grounds",
},
[59051] = {
"Strife",
"Temple of the Jade Serpent",
},
[194389] = {
"Lava Spawn",
"Neltharus",
},
[168942] = {
"Death Speaker",
"De Other Side",
},
[174569] = {
"Training Dummy",
"The Shadowlands",
},
[89011] = {
"Rylak Skyterror",
"Iron Docks",
},
[186206] = {
"Cruel Bonecrusher",
"Brackenhide Hollow",
},
[190426] = {
"Decay Totem",
"Brackenhide Hollow",
},
[189531] = {
"Decayed Elder",
"Brackenhide Hollow",
},
[105699] = {
"Mana Saber",
"Court of Stars",
},
[151041] = {
"Etruvis the Vassal",
"Crucible of Storms",
},
[181859] = {
"Volatile Materium",
"Sepulcher of the First Ones",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
},
[183138] = {
"Inchoate Shadow",
"Sepulcher of the First Ones",
},
[194647] = {
"Thunder Caller",
"Vault of the Incarnates",
},
[165108] = {
"Illusionary Clone",
"Mists of Tirna Scithe",
},
[82682] = {
"Archmage Sol",
"The Everbloom",
},
[97068] = {
"Storm Drake",
"Halls of Valor",
},
[75713] = {
"Shadowmoon Bone-Mender",
"Shadowmoon Burial Grounds",
},
[186208] = {
"Rotbow Stalker",
"Brackenhide Hollow",
},
[196694] = {
"Arcane Forager",
"Algeth'ar Academy",
},
[162040] = {
"Grand Overseer",
"Sanguine Depths",
},
[195927] = {
"Soulharvester Galtmaa",
"The Nokhud Offensive",
},
[199124] = {
"Primalist Chillblaster",
"Vault of the Incarnates",
},
[181861] = {
"Magmatusk",
"Neltharus",
},
[83578] = {
"Ogron Laborer",
"Iron Docks",
},
[195928] = {
"Soulharvester Duuren",
"The Nokhud Offensive",
},
[190174] = {
"Hypnosis Bat",
"Court of Stars",
},
[186338] = {
"Maruuk",
"The Nokhud Offensive",
},
[196696] = {
"Geode Chunk",
"The Azure Vault",
},
[190686] = {
"Frozen Destroyer",
"Vault of the Incarnates",
},
[195929] = {
"Soulharvester Tumen",
"The Nokhud Offensive",
},
[24683] = {
"Sunblade Mage Guard",
"Magisters' Terrace",
},
[186339] = {
"Teera",
"The Nokhud Offensive",
},
[183398] = {
"Ancient Sentinel",
"Sepulcher of the First Ones",
},
[75459] = {
"Plagued Bat",
"Shadowmoon Burial Grounds",
},
[195930] = {
"Soulharvester Mandakh",
"The Nokhud Offensive",
},
[104295] = {
"Blazing Imp",
"Court of Stars",
},
[75715] = {
"Reanimated Ritual Bones",
"Shadowmoon Burial Grounds",
},
[193373] = {
"Nokhud Thunderfist",
"The Nokhud Offensive",
},
[184422] = {
"Emberon",
"Uldaman: Legacy of Tyr",
},
[74948] = {
"Roogug",
"Razorfen Kraul",
},
[185574] = {
"Dominated Saboteur",
"Sepulcher of the First Ones",
},
[75588] = {
"Grotto Toad",
"Razorfen Kraul",
},
[75652] = {
"Void Spawn",
"Shadowmoon Burial Grounds",
},
[3527] = {
"Healing Stream Totem",
"Sunken Temple",
},
[84028] = {
"Siegemaster Rokra",
"Iron Docks",
},
[190690] = {
"Thundering Ravager",
"Vault of the Incarnates",
},
[105703] = {
"Mana Wyrm",
"Court of Stars",
},
[81279] = {
"Grom'kar Flameslinger",
"Iron Docks",
},
[83389] = {
"Ironwing Flamespitter",
"Iron Docks",
},
[187238] = {
"Witherling",
"Brackenhide Hollow",
},
[192481] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[193760] = {
"Surging Ruiner",
"Vault of the Incarnates",
},
[62858] = {
"Beast",
"Shadowmoon Burial Grounds",
},
[81983] = {
"Verdant Mandragora",
"The Everbloom",
},
[189669] = {
"Binding Spear",
"Neltharus",
},
[105704] = {
"Arcane Manifestation",
"Court of Stars",
},
[83390] = {
"Thunderlord Wrangler",
"Iron Docks",
},
[187240] = {
"Drakonid Breaker",
"The Azure Vault",
},
[183404] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[197982] = {
"Storm Warrior",
"Ruby Life Pools",
},
[75590] = {
"Enormous Bullfrog",
"Razorfen Kraul",
},
[77700] = {
"Shadowmoon Exhumer",
"Shadowmoon Burial Grounds",
},
[84989] = {
"Infested Icecaller",
"The Everbloom",
},
[196576] = {
"Spellbound Scepter",
"Algeth'ar Academy",
},
[198878] = {
"Primalist Tempestmaker",
"Vault of the Incarnates",
},
[105705] = {
"Bound Energy",
"Court of Stars",
},
[170490] = {
"Atal'ai High Priest",
"De Other Side",
},
[168572] = {
"Fungi Stormer",
"Plaguefall",
},
[191206] = {
"Primalist Mage",
"Vault of the Incarnates",
},
[187242] = {
"Tarasek Looter",
"The Azure Vault",
},
[196577] = {
"Spellbound Battleaxe",
"Algeth'ar Academy",
},
[59726] = {
"Peril",
"Temple of the Jade Serpent",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
},
[6211] = {
"Caverndeep Reaver",
"Gnomeregan",
},
[163458] = {
"Forsworn Castigator",
"Spires of Ascension",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
},
[81985] = {
"Everbloom Tender",
"The Everbloom",
},
[6235] = {
"Electrocutioner 6000",
"Gnomeregan",
},
[197985] = {
"Flame Channeler",
"10.0 Dragon Isles",
},
[15547] = {
"Spectral Charger",
"Karazhan",
},
[163459] = {
"Forsworn Mender",
"Spires of Ascension",
},
[83392] = {
"Rampaging Clefthoof",
"Iron Docks",
},
[184303] = {
"Skittering Crawler",
"Uldaman: Legacy of Tyr",
},
[185582] = {
"Eternal Assembler",
"Sepulcher of the First Ones",
},
[197219] = {
"Vile Lasher",
"Algeth'ar Academy",
},
[5280] = {
"Nightmare Wyrmkin",
"Sunken Temple",
},
[76104] = {
"Monstrous Corpse Spider",
"Shadowmoon Burial Grounds",
},
[81283] = {
"Grom'kar Footsoldier",
"Iron Docks",
},
[190187] = {
"Draconic Image",
"The Azure Vault",
},
[187246] = {
"Nullmagic Hornswog",
"The Azure Vault",
},
[196581] = {
"White Tiger Statue",
"Shadowmoon Burial Grounds",
},
[81603] = {
"Champion Druna",
"Iron Docks",
},
[98035] = {
"Dreadstalker",
"Shadowmoon Burial Grounds",
},
[198500] = {
"Council Earthcaller",
"Vault of the Incarnates",
},
[200035] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[76105] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[198501] = {
"Council Icecaller",
"Vault of the Incarnates",
},
[156814] = {
"Gor'groth",
"Darkmaul Citadel",
},
[162057] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[186737] = {
"Telash Greywing",
"The Azure Vault",
},
[24557] = {
"Kagani Nightstrike",
"Magisters' Terrace",
},
[196200] = {
"Algeth'ar Echoknight",
"Algeth'ar Academy",
},
[107435] = {
"Suspicious Noble",
"Court of Stars",
},
[198502] = {
"Council Stormcaller",
"Vault of the Incarnates",
},
[196712] = {
"Nullification Device",
"Halls of Infusion",
},
[186738] = {
"Umbrelskul",
"The Azure Vault",
},
[24685] = {
"Sunblade Magister",
"Magisters' Terrace",
},
[198503] = {
"Council Flamecaller",
"Vault of the Incarnates",
},
[99891] = {
"Storm Drake",
"Halls of Valor",
},
[75467] = {
"Cave Bat",
"Razorfen Kraul",
},
[184693] = {
"Living Flame",
"Vault of the Incarnates",
},
[4421] = {
"Charlga Razorflank",
"Razorfen Kraul",
},
[196202] = {
"Spectral Invoker",
"Algeth'ar Academy",
},
[191215] = {
"Tarasek Legionnaire",
"Vault of the Incarnates",
},
[164873] = {
"Runestag Elderhorn",
"De Other Side",
},
[75979] = {
"Exhumed Spirit",
"Shadowmoon Burial Grounds",
},
[186740] = {
"Arcane Construct",
"The Azure Vault",
},
[76107] = {
"Solarshard Totem",
"Razorfen Kraul",
},
[196203] = {
"Ethereal Restorer",
"Algeth'ar Academy",
},
[19874] = {
"Baron Rafe Dreuger",
"Karazhan",
},
[195820] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[186741] = {
"Arcane Elemental",
"The Azure Vault",
},
[182777] = {
"Rygelon",
"Sepulcher of the First Ones",
},
[189299] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[174210] = {
"Blighted Sludge-Spewer",
"Theater of Pain",
},
[195821] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[182778] = {
"Collapsing Quasar",
"Sepulcher of the First Ones",
},
[75149] = {
"Aggem Thorncurse",
"Razorfen Kraul",
},
[181244] = {
"Domination Core",
"Sepulcher of the First Ones",
},
[186615] = {
"The Raging Tempest",
"The Nokhud Offensive",
},
[36296] = {
"Apothecary Hummel",
"Shadowfang Keep",
},
[156821] = {
"Darkmaul Shadowcaller",
"Darkmaul Citadel",
},
[186616] = {
"Granyth",
"The Nokhud Offensive",
},
[187767] = {
"Embar Firepath",
"Vault of the Incarnates",
},
[184954] = {
"Ancient Shaper",
"Sepulcher of the First Ones",
},
[95674] = {
"Fenryr",
"Halls of Valor",
},
[195696] = {
"Primalist Thunderbeast",
"The Nokhud Offensive",
},
[199916] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[187768] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[97081] = {
"King Bjorn",
"Halls of Valor",
},
[83846] = {
"Yalnu",
"The Everbloom",
},
[16406] = {
"Phantom Attendant",
"Karazhan",
},
[195697] = {
"Thunderbeast Rider",
"The Nokhud Offensive",
},
[187897] = {
"Defier Draghar",
"Ruby Life Pools",
},
[89] = {
"Infernal",
"Shadowmoon Burial Grounds",
},
[191222] = {
"Juvenile Frost Proto-Dragon",
"Vault of the Incarnates",
},
[84550] = {
"Xeri'tac",
"The Everbloom",
},
[189816] = {
"Dathea Stormlash",
"Vault of the Incarnates",
},
[81737] = {
"Unchecked Growth",
"The Everbloom",
},
[188026] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[5720] = {
"Weaver",
"Sunken Temple",
},
[77006] = {
"Corpse Skitterling",
"Shadowmoon Burial Grounds",
},
[187771] = {
"Kadros Icewrath",
"Vault of the Incarnates",
},
[75152] = {
"Death Speaker Jargba",
"Razorfen Kraul",
},
[95676] = {
"Odyn",
"Halls of Valor",
},
[19875] = {
"Baroness Dorothea Millstipe",
"Karazhan",
},
[184319] = {
"Refti Custodian",
"Uldaman: Legacy of Tyr",
},
[191736] = {
"Crawth",
"Algeth'ar Academy",
},
[187772] = {
"Opalfang",
"Vault of the Incarnates",
},
[97083] = {
"King Ranulf",
"Halls of Valor",
},
[26125] = {
"Pebblestalker",
"Sunken Temple",
},
[190586] = {
"Earth Breaker",
"Vault of the Incarnates",
},
[200944] = {
"Nokhud Fighter",
"The Nokhud Offensive",
},
[105715] = {
"Watchful Inquisitor",
"Court of Stars",
},
[24207] = {
"Army of the Dead",
"Shadowmoon Burial Grounds",
},
[84552] = {
"Toxic Spiderling",
"The Everbloom",
},
[192761] = {
"Iskakx",
"Vault of the Incarnates",
},
[199027] = {
"Magmas",
"Vault of the Incarnates",
},
[97084] = {
"King Tor",
"Halls of Valor",
},
[184961] = {
"Gnarled Skitter",
"Sepulcher of the First Ones",
},
[190588] = {
"Tectonic Crusher",
"Vault of the Incarnates",
},
[191739] = {
"Scalebane Lieutenant",
"The Azure Vault",
},
[199028] = {
"Glacias",
"Vault of the Incarnates",
},
[168594] = {
"Chamber Sentinel",
"Sanguine Depths",
},
[190205] = {
"Scorchling",
"Ruby Life Pools",
},
[97788] = {
"Storm Drake",
"Halls of Valor",
},
[185346] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[196855] = {
"Braekkas",
"Vault of the Incarnates",
},
[199029] = {
"Cyclas",
"Vault of the Incarnates",
},
[104246] = {
"Duskwatch Guard",
"Court of Stars",
},
[16407] = {
"Spectral Servant",
"Karazhan",
},
[186242] = {
"Skulking Gutstabber",
"Brackenhide Hollow",
},
[185347] = {
"Dominated Eradicator",
"Sepulcher of the First Ones",
},
[192764] = {
"Flame Guardian",
"Vault of the Incarnates",
},
[199030] = {
"Loamas",
"Vault of the Incarnates",
},
[96574] = {
"Stormforged Sentinel",
"Halls of Valor",
},
[198263] = {
"Stalwart Broodwarden",
"Vault of the Incarnates",
},
[191230] = {
"Dragonspawn Flamebender",
"Vault of the Incarnates",
},
[84554] = {
"Venom-Crazed Pale Hulk",
"The Everbloom",
},
[188673] = {
"Smoldering Colossus",
"Vault of the Incarnates",
},
[104247] = {
"Duskwatch Arcanist",
"Court of Stars",
},
[186116] = {
"Gutshot",
"Brackenhide Hollow",
},
[195579] = {
"Primal Gust",
"The Nokhud Offensive",
},
[74900] = {
"Kraulshaper Tukaar",
"Razorfen Kraul",
},
[184582] = {
"Eric \"The Swift\"",
"Uldaman: Legacy of Tyr",
},
[165529] = {
"Depraved Collector",
"Halls of Atonement",
},
[191232] = {
"Drakonid Stormbringer",
"Vault of the Incarnates",
},
[19876] = {
"Lord Robin Daris",
"Karazhan",
},
[195580] = {
"Nokhud Saboteur",
"The Nokhud Offensive",
},
[192767] = {
"Primal Icebulk",
"Vault of the Incarnates",
},
[97087] = {
"Valarjar Champion",
"Halls of Valor",
},
[198266] = {
"Pouncing Broodswarmer",
"Vault of the Incarnates",
},
[186246] = {
"Fleshripper Vulture",
"Brackenhide Hollow",
},
[185607] = {
"Lost Soul",
"Sepulcher of the First Ones",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
},
[192769] = {
"Thondrozus",
"Vault of the Incarnates",
},
[166299] = {
"Mistveil Tender",
"Mists of Tirna Scithe",
},
[177808] = {
"Armored Overseer",
"Tazavesh, the Veiled Market",
},
[186120] = {
"Treemouth",
"Brackenhide Hollow",
},
[190340] = {
"Refti Defender",
"Halls of Infusion",
},
[167962] = {
"Defunct Dental Drill",
"De Other Side",
},
[194816] = {
"Forgewrought Monstrosity",
"Neltharus",
},
[130272] = {
"Constrictor Vine",
"Maraudon",
},
[186229] = {
"Wilted Oak",
"Brackenhide Hollow",
},
[19668] = {
"Sha Beast",
"Shadowmoon Burial Grounds",
},
[171799] = {
"Depths Warden",
"Sanguine Depths",
},
[189318] = {
"Infected Bear",
"Brackenhide Hollow",
},
[184331] = {
"Infinite Timereaver",
"Uldaman: Legacy of Tyr",
},
[184535] = {
"Overthrown Artisan",
"Sepulcher of the First Ones",
},
[180495] = {
"Enraged Direhorn",
"Tazavesh, the Veiled Market",
},
[199037] = {
"Primalist Shocktrooper",
"Halls of Infusion",
},
[198142] = {
"Quarry Earthshaper",
"Vault of the Incarnates",
},
[185800] = {
"Níõhöggr",
"Court of Stars",
},
[186122] = {
"Rira Hackclaw",
"Brackenhide Hollow",
},
[190342] = {
"Containment Apparatus",
"Halls of Infusion",
},
[167964] = {
"4.RF-4.RF",
"De Other Side",
},
[24744] = {
"Vexallus",
"Magisters' Terrace",
},
[144754] = {
"Fa'thuul the Feared",
"Crucible of Storms",
},
[130273] = {
"Celebrian Dryad",
"Maraudon",
},
[24688] = {
"Wretched Skulker",
"Magisters' Terrace",
},
[184972] = {
"Eranog",
"Vault of the Incarnates",
},
[197697] = {
"Flamegullet",
"Ruby Life Pools",
},
[6066] = {
"Earthgrab Totem",
"Sunken Temple",
},
[157328] = {
"Darkmaul Channeler",
"Darkmaul Citadel",
},
[24553] = {
"Apoko",
"Magisters' Terrace",
},
[195842] = {
"Ukhel Corruptor",
"The Nokhud Offensive",
},
[24560] = {
"Priestess Delrissa",
"Magisters' Terrace",
},
[6212] = {
"Dark Iron Agent",
"Gnomeregan",
},
[17007] = {
"Lady Keira Berrybuck",
"Karazhan",
},
[163618] = {
"Zolramus Necromancer",
"The Necrotic Wake",
},
[196482] = {
"Overgrown Ancient",
"Algeth'ar Academy",
},
[24686] = {
"Sunblade Warlock",
"Magisters' Terrace",
},
[6232] = {
"Arcane Nullifier X-21",
"Gnomeregan",
},
[94960] = {
"Hymdall",
"Halls of Valor",
},
[130274] = {
"Creeping Sludge",
"Maraudon",
},
[75096] = {
"Crystalline Aberration",
"Razorfen Kraul",
},
[194181] = {
"Vexamus",
"Algeth'ar Academy",
},
[186125] = {
"Tricktotem",
"Brackenhide Hollow",
},
[190345] = {
"Primalist Geomancer",
"Halls of Infusion",
},
[184335] = {
"Infinite Agent",
"Uldaman: Legacy of Tyr",
},
[24556] = {
"Zelfan",
"Magisters' Terrace",
},
[187139] = {
"Crystal Thrasher",
"The Azure Vault",
},
[190404] = {
"Subterranean Proto-Dragon",
"Halls of Infusion",
},
[199353] = {
"Frost Tomb",
"Vault of the Incarnates",
},
[163492] = {
"Rabid Wolf",
"Redridge - 9xp Bastion",
},
[97219] = {
"Solsten",
"Halls of Valor",
},
[162047] = {
"Insatiable Brute",
"Sanguine Depths",
},
[83025] = {
"Grom'kar Battlemaster",
"Iron Docks",
},
[5273] = {
"Atal'ai High Priest",
"Sunken Temple",
},
[5277] = {
"Nightmare Scalebane",
"Sunken Temple",
},
[130275] = {
"Sister of Celebras",
"Maraudon",
},
[75097] = {
"Crystalline Shard",
"Razorfen Kraul",
},
[24777] = {
"Sunblade Sentinel",
"Magisters' Terrace",
},
[104217] = {
"Talixae Flamewreath",
"Court of Stars",
},
[74554] = {
"Razorfen Scarblade",
"Razorfen Kraul",
},
[171396] = {
"Kyrian Goliath",
"Sepulcher of the First Ones",
},
[99868] = {
"Fenryr",
"Halls of Valor",
},
[181011] = {
"Ancient Guardian",
"Sepulcher of the First Ones",
},
[96640] = {
"Valarjar Marksman",
"Halls of Valor",
},
[163366] = {
"Magus of the Dead",
"Shadowmoon Burial Grounds",
},
[185181] = {
"Automated Eliminator",
"Sepulcher of the First Ones",
},
[191243] = {
"Wild Lasher",
"Brackenhide Hollow",
},
[197509] = {
"Primal Thundercloud",
"10.0 Dragon Isles",
},
[83026] = {
"Siegemaster Olugar",
"Iron Docks",
},
[69791] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[163111] = {
"Magistrate Solomon",
"Redridge - 9xp Bastion",
},
[76057] = {
"Carrion Worm",
"Shadowmoon Burial Grounds",
},
[183501] = {
"Artificer Xy'mox",
"Sepulcher of the First Ones",
},
[183499] = {
"Hired Muscle",
"Sepulcher of the First Ones",
},
[184533] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[188252] = {
"Melidrussa Chillworn",
"Ruby Life Pools",
},
[97197] = {
"Valarjar Purifier",
"Halls of Valor",
},
[181398] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[17252] = {
"Shaadhun",
"Shadowmoon Burial Grounds",
},
[187894] = {
"Infused Whelp",
"Ruby Life Pools",
},
[24561] = {
"Yazzai",
"Magisters' Terrace",
},
[184301] = {
"Cavern Seeker",
"Uldaman: Legacy of Tyr",
},
[193291] = {
"Apex Blazewing",
"Neltharus",
},
[63508] = {
"Xuen",
"Sepulcher of the First Ones",
},
[185363] = {
"Manifestor Krugan",
"Sepulcher of the First Ones",
},
[181399] = {
"Kin'tessa",
"Sepulcher of the First Ones",
},
[200126] = {
"Fallen Waterspeaker",
"Temple of the Jade Serpent",
},
[59544] = {
"The Nodding Tiger",
"Temple of the Jade Serpent",
},
[24689] = {
"Wretched Bruiser",
"Magisters' Terrace",
},
[186107] = {
"Vault Keeper",
"Uldaman: Legacy of Tyr",
},
[194315] = {
"Stormcaller Solongo",
"The Nokhud Offensive",
},
[189555] = {
"Astral Attendant",
"The Azure Vault",
},
[201155] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[181850] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[192781] = {
"Ore Elemental",
"Neltharus",
},
[190206] = {
"Primalist Flamedancer",
"Ruby Life Pools",
},
[181395] = {
"Skolex",
"Sepulcher of the First Ones",
},
[74652] = {
"Razorfen Thornbolt",
"Razorfen Kraul",
},
[194316] = {
"Stormcaller Zarii",
"The Nokhud Offensive",
},
[69792] = {
"Akulakhan",
"Sepulcher of the First Ones",
},
[83028] = {
"Grom'kar Deadeye",
"Iron Docks",
},
[184828] = {
"Winged Soul Eater",
"Path of the Primus",
},
[186644] = {
"Leymor",
"The Azure Vault",
},
[184962] = {
"Gnarled Scavenger",
"Sepulcher of the First Ones",
},
[200137] = {
"Depraved Mistweaver",
"Temple of the Jade Serpent",
},
[200388] = {
"Malformed Sha",
"Temple of the Jade Serpent",
},
[194317] = {
"Stormcaller Boroo",
"The Nokhud Offensive",
},
[84499] = {
"Entanglement",
"The Everbloom",
},
[187638] = {
"Flamescale Tarasek",
"Vault of the Incarnates",
},
[190609] = {
"Echo of Doragosa",
"Algeth'ar Academy",
},
[185155] = {
"Overthrown Protector",
"Sepulcher of the First Ones",
},
[62358] = {
"Corrupt Droplet",
"Temple of the Jade Serpent",
},
[191225] = {
"Tarasek Earthreaver",
"Vault of the Incarnates",
},
[104251] = {
"Duskwatch Sentry",
"Court of Stars",
},
[192955] = {
"Draconic Illusion",
"The Azure Vault",
},
[199368] = {
"Hardened Crystal",
"The Azure Vault",
},
[189247] = {
"Tamed Phoenix",
"Neltharus",
},
[104822] = {
"Flame of Woe",
"Halls of Valor",
},
[184600] = {
"Llarondus",
"Sepulcher of the First Ones",
},
[59545] = {
"The Golden Beetle",
"Temple of the Jade Serpent",
},
[56439] = {
"Sha of Doubt",
"Temple of the Jade Serpent",
},
[185154] = {
"Mal'Ganis",
"Sepulcher of the First Ones",
},
[76444] = {
"Subjugated Soul",
"Shadowmoon Burial Grounds",
},
[36272] = {
"Apothecary Frye",
"Shadowfang Keep",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
},
[102019] = {
"Stormforged Obliterator",
"Halls of Valor",
},
[74462] = {
"Warlord Ramtusk",
"Razorfen Kraul",
},
[56732] = {
"Liu Flameheart",
"Temple of the Jade Serpent",
},
[190207] = {
"Primalist Cinderweaver",
"Ruby Life Pools",
},
[95675] = {
"God-King Skovald",
"Halls of Valor",
},
[187159] = {
"Shrieking Whelp",
"The Azure Vault",
},
[193553] = {
"Nokhud Warhound",
"The Nokhud Offensive",
},
[55869] = {
"Alizabal",
"Baradin Hold",
},
[84990] = {
"Addled Arcanomancer",
"The Everbloom",
},
[195855] = {
"Risen Warrior",
"The Nokhud Offensive",
},
[183707] = {
"Xy Spellslinger",
"Sepulcher of the First Ones",
},
[200936] = {
"Living Flame",
"Vault of the Incarnates",
},
[184986] = {
"Kurog Grimtotem",
"Vault of the Incarnates",
},
[182045] = {
"Necrotic Ritualist",
"Sepulcher of the First Ones",
},
[81432] = {
"Grom'kar Technician",
"Iron Docks",
},
[190485] = {
"Erkhart Stormvein",
"Ruby Life Pools",
},
[184603] = {
"Ancient Bufonid",
"Sepulcher of the First Ones",
},
[192787] = {
"Qalashi Spinecrusher",
"Neltharus",
},
[417] = {
"Phuutom",
"Sepulcher of the First Ones",
},
[57080] = {
"Corrupted Scroll",
"Temple of the Jade Serpent",
},
[187033] = {
"Stinkbreath",
"Brackenhide Hollow",
},
[16410] = {
"Spectral Retainer",
"Karazhan",
},
[178165] = {
"Coastwalker Goliath",
"Tazavesh, the Veiled Market",
},
[193555] = {
"Nokhud Villager",
"The Nokhud Offensive",
},
[101637] = {
"Valarjar Aspirant",
"Halls of Valor",
},
[163121] = {
"Stitched Vanguard",
"The Necrotic Wake",
},
[59546] = {
"The Talking Fish",
"Temple of the Jade Serpent",
},
[24690] = {
"Wretched Husk",
"Magisters' Terrace",
},
[81305] = {
"Fleshrender Nok'gar",
"Iron Docks",
},
[191510] = {
"Smoldering Hellion",
"Vault of the Incarnates",
},
[190359] = {
"Skulking Zealot",
"Halls of Infusion",
},
[189464] = {
"Qalashi Irontorch",
"Neltharus",
},
[76446] = {
"Shadowmoon Dominator",
"Shadowmoon Burial Grounds",
},
[192789] = {
"Nokhud Longbow",
"The Nokhud Offensive",
},
[8317] = {
"Atal'ai Deathwalker's Spirit",
"Sunken Temple",
},
[191847] = {
"Nokhud Plainstomper",
"The Nokhud Offensive",
},
[5709] = {
"Shade of Eranikus",
"Sunken Temple",
},
[13456] = {
"Noxxion's Spawn",
"Maraudon",
},
[194487] = {
"Vile Rothexer",
"Brackenhide Hollow",
},
[2630] = {
"Earthbind Totem",
"Sunken Temple",
},
[5721] = {
"Dreamscythe",
"Sunken Temple",
},
[112668] = {
"Infernal Imp",
"Court of Stars",
},
[184734] = {
"Sacred Matrix Automa",
"Sepulcher of the First Ones",
},
[196115] = {
"Arcane Tender",
"The Azure Vault",
},
[199182] = {
"Jumping Spiderling",
"Vault of the Incarnates",
},
[183745] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[189466] = {
"Irontorch Commander",
"Neltharus",
},
[193558] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[104218] = {
"Advisor Melandrus",
"Court of Stars",
},
[192791] = {
"Nokhud Warspear",
"The Nokhud Offensive",
},
[184735] = {
"Degeneration Automa",
"Sepulcher of the First Ones",
},
[196116] = {
"Crystal Fury",
"The Azure Vault",
},
[194147] = {
"Volcanius",
"Vault of the Incarnates",
},
[59598] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[190362] = {
"Dazzling Dragonfly",
"Halls of Infusion",
},
[189467] = {
"Qalashi Bonesplitter",
"Neltharus",
},
[80875] = {
"Bombsquad",
"Iron Docks",
},
[200945] = {
"Nokhud Warmonger",
"The Nokhud Offensive",
},
[101639] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[196117] = {
"Crystal Thrasher",
"The Azure Vault",
},
[59547] = {
"Jiang",
"Temple of the Jade Serpent",
},
[183202] = {
"Mawsworn Warden",
"Path of the Primus",
},
[189340] = {
"Chargath, Bane of Scales",
"Neltharus",
},
[190923] = {
"Zephyrling",
"Halls of Infusion",
},
[7800] = {
"Mekgineer Thermaplugg",
"Gnomeregan",
},
[184737] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[193944] = {
"Qalashi Lavamancer",
"Neltharus",
},
[180773] = {
"Vigilant Guardian",
"Sepulcher of the First Ones",
},
[81819] = {
"Everbloom Naturalist",
"The Everbloom",
},
[193462] = {
"Batak",
"The Nokhud Offensive",
},
[190484] = {
"Kyrakka",
"Ruby Life Pools",
},
[56762] = {
"Yu'lon",
"Temple of the Jade Serpent",
},
[104300] = {
"Shadow Mistress",
"Court of Stars",
},
[192794] = {
"Nokhud Beastmaster",
"The Nokhud Offensive",
},
[190348] = {
"Primalist Ravager",
"Halls of Infusion",
},
[201560] = {
"Primalist Flamecaller",
"Vault of the Incarnates",
},
[7915] = {
"Walking Bomb",
"Gnomeregan",
},
[197398] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[169905] = {
"Risen Warlord",
"De Other Side",
},
[189470] = {
"Lava Flare",
"Neltharus",
},
[65317] = {
"Xiang",
"Temple of the Jade Serpent",
},
[188244] = {
"Primal Juggernaut",
"Ruby Life Pools",
},
[184126] = {
"Defense Matrix Automa",
"Sepulcher of the First Ones",
},
[156825] = {
"Darkmaul Centurion",
"Darkmaul Citadel",
},
[81820] = {
"Everbloom Mender",
"The Everbloom",
},
[16411] = {
"Spectral Chef",
"Karazhan",
},
[190366] = {
"Curious Swoglet",
"Halls of Infusion",
},
[189471] = {
"Qalashi Blacksmith",
"Neltharus",
},
[194330] = {
"Decaying Slime",
"Brackenhide Hollow",
},
[192796] = {
"Nokhud Hornsounder",
"The Nokhud Offensive",
},
[186658] = {
"Stonevault Geomancer",
"Uldaman: Legacy of Tyr",
},
[189722] = {
"Gulping Goliath",
"Halls of Infusion",
},
[189472] = {
"Qalashi Lavabearer",
"Neltharus",
},
[24723] = {
"Selin Fireheart",
"Magisters' Terrace",
},
[183206] = {
"Winged Soul Eater",
"Path of the Primus",
},
[182311] = {
"Pre-Fabricated Sentry",
"Sepulcher of the First Ones",
},
[185508] = {
"Claw Fighter",
"Brackenhide Hollow",
},
[191311] = {
"Infinite Whelp",
"Uldaman: Legacy of Tyr",
},
[190294] = {
"Nokhud Stormcaster",
"The Nokhud Offensive",
},
[197145] = {
"Colossal Stormfiend",
"Vault of the Incarnates",
},
[75247] = {
"Groyat, the Blind Hunter",
"Razorfen Kraul",
},
[198424] = {
"Primalist Frostsculptor",
"Vault of the Incarnates",
},
[190368] = {
"Flamecaller Aymi",
"Halls of Infusion",
},
[190496] = {
"Terros",
"Vault of the Incarnates",
},
[86526] = {
"Grom'kar Chainmaster",
"Iron Docks",
},
[189729] = {
"Primal Tsunami",
"Halls of Infusion",
},
[184742] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[197146] = {
"Qalashi Emissary",
"Vault of the Incarnates",
},
[188067] = {
"Flashfrost Chillweaver",
"Ruby Life Pools",
},
[180906] = {
"Halondrus",
"Sepulcher of the First Ones",
},
[186739] = {
"Azureblade",
"The Azure Vault",
},
[187154] = {
"Unstable Curator",
"The Azure Vault",
},
[83612] = {
"Skulloc",
"Iron Docks",
},
[181546] = {
"Prototype of Renewal",
"Sepulcher of the First Ones",
},
[163260] = {
"Vicious Ghoul",
"Redridge - 9xp Bastion",
},
[197147] = {
"Qalashi Honor Guard",
"Vault of the Incarnates",
},
[184132] = {
"Earthen Warder",
"Uldaman: Legacy of Tyr",
},
[97369] = {
"Liquid Magma Totem",
"Sepulcher of the First Ones",
},
[190370] = {
"Squallbringer Cyraz",
"Halls of Infusion",
},
[189719] = {
"Watcher Irideus",
"Halls of Infusion",
},
[16414] = {
"Ghostly Steward",
"Karazhan",
},
[192800] = {
"Nokhud Lancemaster",
"The Nokhud Offensive",
},
[184300] = {
"Ebonstone Golem",
"Uldaman: Legacy of Tyr",
},
[197148] = {
"Qalashi Lavabearer",
"Vault of the Incarnates",
},
[81984] = {
"Gnarlroot",
"The Everbloom",
},
[186151] = {
"Balakar Khan",
"The Nokhud Offensive",
},
[190371] = {
"Primalist Earthshaker",
"Halls of Infusion",
},
[163086] = {
"Rancid Gasbag",
"Theater of Pain",
},
[75429] = {
"Quilboar Mealtender",
"Razorfen Kraul",
},
[181548] = {
"Prototype of Absolution",
"Sepulcher of the First Ones",
},
[74534] = {
"Crystalline Behemoth",
"Razorfen Kraul",
},
[197149] = {
"Qalashi Lavamancer",
"Vault of the Incarnates",
},
[187155] = {
"Rune Seal Keeper",
"The Azure Vault",
},
[135002] = {
"Demonic Tyrant",
"Sepulcher of the First Ones",
},
[190688] = {
"Blazing Fiend",
"Vault of the Incarnates",
},
[13282] = {
"Noxxion",
"Maraudon",
},
[186664] = {
"Stonevault Ambusher",
"Uldaman: Legacy of Tyr",
},
[181549] = {
"Prototype of War",
"Sepulcher of the First Ones",
},
[12218] = {
"Vile Larva",
"Maraudon",
},
[75110] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[184107] = {
"Runic Protector",
"Uldaman: Legacy of Tyr",
},
[197406] = {
"Aggravated Skitterfly",
"Algeth'ar Academy",
},
[190373] = {
"Primalist Galesinger",
"Halls of Infusion",
},
[12258] = {
"Razorlash",
"Maraudon",
},
[189478] = {
"Forgemaster Gorek",
"Neltharus",
},
[192803] = {
"War Ohuna",
"The Nokhud Offensive",
},
[184581] = {
"Baelog",
"Uldaman: Legacy of Tyr",
},
[174773] = {
"Spiteful Shade",
"Shadowmoon Burial Grounds",
},
[163520] = {
"Forsworn Squad-Leader",
"Spires of Ascension",
},
[16412] = {
"Ghostly Baker",
"Karazhan",
},
[197535] = {
"High Channeler Ryvati",
"Ruby Life Pools",
},
[190245] = {
"Broodkeeper Diurna",
"Vault of the Incarnates",
},
[184019] = {
"Burly Rock-Thrower",
"Uldaman: Legacy of Tyr",
},
[181551] = {
"Prototype of Duty",
"Sepulcher of the First Ones",
},
[198047] = {
"Tempest Channeler",
"Ruby Life Pools",
},
[193293] = {
"Qalashi Warden",
"Neltharus",
},
[192788] = {
"Qalashi Thaumaturge",
"Neltharus",
},
[167998] = {
"Portal Guardian",
"Theater of Pain",
},
[194467] = {
"Brackenhide Slasher",
"Brackenhide Hollow",
},
[193572] = {
"Nokhud Warsmith",
"The Nokhud Offensive",
},
[86684] = {
"Feral Lasher",
"The Everbloom",
},
[76518] = {
"Ritual of Bones",
"Shadowmoon Burial Grounds",
},
[59873] = {
"Corrupt Living Water",
"Temple of the Jade Serpent",
},
[195119] = {
"Primalist Shockcaster",
"Ruby Life Pools",
},
[164929] = {
"Tirnenn Villager",
"Mists of Tirna Scithe",
},
[101326] = {
"Honored Ancestor",
"Halls of Valor",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
},
[196642] = {
"Hungry Lasher",
"Algeth'ar Academy",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
},
[195875] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[192934] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[36565] = {
"Apothecary Baxter",
"Shadowfang Keep",
},
[190377] = {
"Primalist Icecaller",
"Halls of Infusion",
},
[75437] = {
"Quilboar Broodmentor",
"Razorfen Kraul",
},
[194469] = {
"Fledgling Slasher",
"Brackenhide Hollow",
},
[61245] = {
"Capacitor Totem",
"Sunken Temple",
},
[83616] = {
"Zoggosh",
"Iron Docks",
},
[184623] = {
"Ancient Avian",
"Sepulcher of the First Ones",
},
[84767] = {
"Twisted Abomination",
"The Everbloom",
},
[95061] = {
"Greater Fire Elemental",
"Sunken Temple",
},
[95833] = {
"Hyrja",
"Halls of Valor",
},
[189227] = {
"Qalashi Hunter",
"Neltharus",
},
[166262] = {
"Decaying Corpse",
"Darkmaul Citadel",
},
[5270] = {
"Atal'ai Corpse Eater",
"Sunken Temple",
},
[192680] = {
"Guardian Sentry",
"Algeth'ar Academy",
},
[195877] = {
"Risen Mystic",
"The Nokhud Offensive",
},
[197857] = {
"Gutstabber",
"Brackenhide Hollow",
},
[184880] = {
"Dominated Disrupter",
"Sepulcher of the First Ones",
},
[15687] = {
"Moroes",
"Karazhan",
},
[185008] = {
"Volatile Sentry",
"Sepulcher of the First Ones",
},
[16415] = {
"Skeletal Waiter",
"Karazhan",
},
[196645] = {
"Desecrated Bakar",
"The Nokhud Offensive",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
},
[195878] = {
"Ukhel Beastcaller",
"The Nokhud Offensive",
},
[59553] = {
"The Songbird Queen",
"Temple of the Jade Serpent",
},
[194273] = {
"Witherling",
"Brackenhide Hollow",
},
[198308] = {
"Frostwrought Dominator",
"Vault of the Incarnates",
},
[186284] = {
"Gutchewer Bear",
"Brackenhide Hollow",
},
[76089] = {
"Razorfen Beast Stalker",
"Razorfen Kraul",
},
[189363] = {
"Infected Lasher",
"Brackenhide Hollow",
},
[189235] = {
"Overseer Lahar",
"Neltharus",
},
[165189] = {
"Smierdziel",
"Shadowmoon Burial Grounds",
},
[84957] = {
"Putrid Pyromancer",
"The Everbloom",
},
[184882] = {
"Mawsworn Warden",
"Path of the Primus",
},
[196263] = {
"Nokhud Neophyte",
"The Nokhud Offensive",
},
[83613] = {
"Koramar",
"Iron Docks",
},
[190381] = {
"Rotburst Totem",
"Brackenhide Hollow",
},
[199716] = {
"Nokhud Brute",
"The Nokhud Offensive",
},
[198310] = {
"Flame Tarasek",
"Vault of the Incarnates",
},
[184627] = {
"Dominated Shaper",
"Sepulcher of the First Ones",
},
[80805] = {
"Makogg Emberblade",
"Iron Docks",
},
[104270] = {
"Guardian Construct",
"Court of Stars",
},
[199333] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[197671] = {
"Volatile Infuser",
"Vault of the Incarnates",
},
[199717] = {
"Nokhud Defender",
"The Nokhud Offensive",
},
[190510] = {
"Vault Guard",
"The Azure Vault",
},
[197799] = {
"Quarry Infuser",
"UNKNOWN",
},
[80808] = {
"Neesa Nox",
"Iron Docks",
},
[59552] = {
"The Crybaby Hozen",
"Temple of the Jade Serpent",
},
[184884] = {
"Mawsworn Warden",
"Path of the Primus",
},
[198311] = {
"Flamewrought Eradicator",
"Vault of the Incarnates",
},
[189232] = {
"Kokia Blazehoof",
"Ruby Life Pools",
},
[185268] = {
"Ebonsteel Construct",
"Sepulcher of the First Ones",
},
[199718] = {
"Nokhud Huntmaster",
"The Nokhud Offensive",
},
[8336] = {
"Hakkari Sapper",
"Sunken Temple",
},
[76088] = {
"Razorfen Huntmaster",
"Razorfen Kraul",
},
[186226] = {
"Fetid Rotsinger",
"Brackenhide Hollow",
},
[187315] = {
"Disease Slasher",
"Brackenhide Hollow",
},
[186420] = {
"Earthen Weaver",
"Uldaman: Legacy of Tyr",
},
[189233] = {
"Caustic Spiderling",
"Vault of the Incarnates",
},
[162763] = {
"Soulforged Bonereaver",
"Theater of Pain",
},
[199719] = {
"Nokhud Wardog",
"The Nokhud Offensive",
},
[193709] = {
"Primalist Earthwarden",
"Vault of the Incarnates",
},
[167111] = {
"Spinemaw Staghorn",
"Mists of Tirna Scithe",
},
[197801] = {
"Awakened Terrasentry",
"UNKNOWN",
},
[83893] = {
"Earthshaper Telu",
"The Everbloom",
},
[81864] = {
"Dreadpetal",
"The Everbloom",
},
[189234] = {
"Frostbreath Arachnid",
"Vault of the Incarnates",
},
[182071] = {
"Guardian Automa",
"Sepulcher of the First Ones",
},
[95832] = {
"Valarjar Shieldmaiden",
"Halls of Valor",
},
[75436] = {
"Quilboar Swinewatcher",
"Razorfen Kraul",
},
[81638] = {
"Aqueous Globule",
"The Everbloom",
},
[81297] = {
"Dreadfang",
"Iron Docks",
},
[99922] = {
"Ebonclaw Packmate",
"Halls of Valor",
},
[74669] = {
"Crystalfire Totem",
"Razorfen Kraul",
},
[182074] = {
"Acquisitions Automa",
"Sepulcher of the First Ones",
},
[185271] = {
"Stellar Mote",
"Sepulcher of the First Ones",
},
[16408] = {
"Phantom Valet",
"Karazhan",
},
[162691] = {
"Blightbone",
"The Necrotic Wake",
},
[29264] = {
"Spirit Wolf",
"Shadowmoon Burial Grounds",
},
[194990] = {
"Stormseeker Acolyte",
"Vault of the Incarnates",
},
[184124] = {
"Sentinel Talondras",
"Uldaman: Legacy of Tyr",
},
[96664] = {
"Valarjar Runecarver",
"Halls of Valor",
},
[197793] = {
"Awakened Juggernaut",
"UNKNOWN",
},
[195876] = {
"Desecrated Ohuna",
"The Nokhud Offensive",
},
[189492] = {
"Raszageth",
"Vault of the Incarnates",
},
[185528] = {
"Trickclaw Mystic",
"Brackenhide Hollow",
},
[185656] = {
"Filth Caller",
"Brackenhide Hollow",
},
[194991] = {
"Oathsworn Vanguard",
"Vault of the Incarnates",
},
[104273] = {
"Jazshariu",
"Court of Stars",
},
[164557] = {
"Shard of Halkias",
"Halls of Atonement",
},
[156501] = {
"Ravnyr",
"Darkmaul Citadel",
},
[193457] = {
"Balara",
"The Nokhud Offensive",
},
[186124] = {
"Gashtooth",
"Brackenhide Hollow",
},
[185529] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[75466] = {
"Vile Bat",
"Razorfen Kraul",
},
[12219] = {
"Barbed Lasher",
"Maraudon",
},
[185534] = {
"Bonebolt Hunter",
"Brackenhide Hollow",
},
[168318] = {
"Forsworn Goliath",
"Spires of Ascension",
},
[187192] = {
"Rageclaw",
"Brackenhide Hollow",
},
[185274] = {
"Astral Particle",
"Sepulcher of the First Ones",
},
[95834] = {
"Valarjar Mystic",
"Halls of Valor",
},
[8035] = {
"Dark Iron Land Mine",
"Gnomeregan",
},
[56448] = {
"Wise Mari",
"Temple of the Jade Serpent",
},
[16171] = {
"Coldmist Widow",
"Karazhan",
},
[104274] = {
"Baalgar the Watchful",
"Court of Stars",
},
[183209] = {
"Soulseeker",
"Path of the Primus",
},
[111563] = {
"Duskwatch Guard",
"Court of Stars",
},
[185275] = {
"Kelmortos",
"Sepulcher of the First Ones",
},
[198702] = {
"Unstable Frost",
"Vault of the Incarnates",
},
[196856] = {
"Primal Stormsentry",
"Vault of the Incarnates",
},
[86809] = {
"Grom'kar Incinerator",
"Iron Docks",
},
[75055] = {
"Razorfen Torchbearer",
"Razorfen Kraul",
},
[86372] = {
"Melded Berserker",
"The Everbloom",
},
[189727] = {
"Khajin the Unyielding",
"Halls of Infusion",
},
[184125] = {
"Chrono-Lord Deios",
"Uldaman: Legacy of Tyr",
},
[16409] = {
"Phantom Guest",
"Karazhan",
},
[96677] = {
"Steeljaw Grizzly",
"Halls of Valor",
},
[75439] = {
"Novice Quilboar",
"Razorfen Kraul",
},
[196044] = {
"Unruly Textbook",
"Algeth'ar Academy",
},
[8319] = {
"Nightmare Whelp",
"Sunken Temple",
},
[104275] = {
"Imacu'tya",
"Court of Stars",
},
[193799] = {
"Rotchanting Totem",
"Brackenhide Hollow",
},
[5710] = {
"Jammal'an the Prophet",
"Sunken Temple",
},
[198868] = {
"Primalist Voltweaver",
"Vault of the Incarnates",
},
[57109] = {
"Minion of Doubt",
"Temple of the Jade Serpent",
},
[5722] = {
"Hazzas",
"Sunken Temple",
},
[186121] = {
"Decatriarch Wratheye",
"Brackenhide Hollow",
},
[186191] = {
"Decay Speaker",
"Brackenhide Hollow",
},
[170572] = {
"Atal'ai Hoodoo Hexxer",
"De Other Side",
},
[197298] = {
"Nascent Proto-Dragon",
"Vault of the Incarnates",
},
[200131] = {
"Sha-Touched Guardian",
"Temple of the Jade Serpent",
},
[198577] = {
"Unstable Flame",
"Vault of the Incarnates",
},
[96934] = {
"Valarjar Trapper",
"Halls of Valor",
},
[75440] = {
"Quilboar Pebble-Watcher",
"Razorfen Kraul",
},
[189901] = {
"Warlord Sargha",
"Neltharus",
},
[74545] = {
"Razorfen Geomagus",
"Razorfen Kraul",
},
[31216] = {
"Bengeezuz",
"Sepulcher of the First Ones",
},
[181954] = {
"Anduin Wrynn",
"Sepulcher of the First Ones",
},
[79852] = {
"Oshir",
"Iron Docks",
},
[56350] = {
"Disciple of Hate",
"Baradin Hold",
},
[58319] = {
"Lesser Sha",
"Temple of the Jade Serpent",
},
[107073] = {
"Duskwatch Reinforcement",
"Court of Stars",
},
[171341] = {
"Bladebeak Hatchling",
"De Other Side",
},
[59555] = {
"Haunting Sha",
"Temple of the Jade Serpent",
},
[183406] = {
"Colossal Realmcrafter",
"Sepulcher of the First Ones",
},
[184580] = {
"Olaf",
"Uldaman: Legacy of Tyr",
},
[187160] = {
"Crystal Fury",
"The Azure Vault",
},
[84520] = {
"Pitwarden Gwarnok",
"Iron Docks",
},
[74555] = {
"Razorfen Hidecrusher",
"Razorfen Kraul",
},
[191714] = {
"Seeking Stormling",
"Vault of the Incarnates",
},
[184733] = {
"Dominated Grunt",
"Sepulcher of the First Ones",
},
[194999] = {
"Volatile Spark",
"Vault of the Incarnates",
},
[104277] = {
"Legion Hound",
"Court of Stars",
},
[97202] = {
"Olmyr the Enlightened",
"Halls of Valor",
},
[184130] = {
"Earthen Custodian",
"Uldaman: Legacy of Tyr",
},
[86547] = {
"Venom Sprayer",
"The Everbloom",
},
[192786] = {
"Qalashi Plunderer",
"Neltharus",
},
[185537] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[182169] = {
"Lihuvim",
"Sepulcher of the First Ones",
},
[95842] = {
"Valarjar Thundercaller",
"Halls of Valor",
},
[187967] = {
"Sennarth",
"Vault of the Incarnates",
},
[191164] = {
"Arcane Tender",
"The Azure Vault",
},
[184131] = {
"Earthen Guardian",
"Uldaman: Legacy of Tyr",
},
[65310] = {
"Turnip Punching Bag",
"Halls of Valor",
},
[198709] = {
"Unstable Earth",
"Vault of the Incarnates",
},
[194745] = {
"Rotfang Hyena",
"Brackenhide Hollow",
},
[75506] = {
"Shadowmoon Loyalist",
"Shadowmoon Burial Grounds",
},
[189886] = {
"Blazebound Firestorm",
"Ruby Life Pools",
},
[104278] = {
"Felbound Enforcer",
"Court of Stars",
},
[198326] = {
"Stormwrought Despoiler",
"Vault of the Incarnates",
},
[47120] = {
"Argaloth",
"Baradin Hold",
},
[187231] = {
"Wither Biter",
"Brackenhide Hollow",
},
[186220] = {
"Brackenhide Shaper",
"Brackenhide Hollow",
},
[185691] = {
"Vicious Hyena",
"Brackenhide Hollow",
},
[52363] = {
"Occu'thar",
"Baradin Hold",
},
[195851] = {
"Ukhel Deathspeaker",
"The Nokhud Offensive",
},
[187969] = {
"Flashfrost Earthshaper",
"Ruby Life Pools",
},
[197698] = {
"Thunderhead",
"Ruby Life Pools",
},
[104918] = {
"Vigilant Duskwatch",
"Court of Stars",
},
[192333] = {
"Alpha Eagle",
"Algeth'ar Academy",
},
[188011] = {
"Primal Terrasentry",
"Ruby Life Pools",
},
[24687] = {
"Sunblade Physician",
"Magisters' Terrace",
},
[183396] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[104215] = {
"Patrol Captain Gerdo",
"Court of Stars",
},
[185581] = {
"Eternal Forger",
"Sepulcher of the First Ones",
},
[56792] = {
"Figment of Doubt",
"Temple of the Jade Serpent",
},
[184134] = {
"Scavenging Leaper",
"Uldaman: Legacy of Tyr",
},
[197595] = {
"Earthwrought Smasher",
"Vault of the Incarnates",
},
[189813] = {
"Dathea, Ascended",
"Vault of the Incarnates",
},
[183495] = {
"Twisted Worldeater",
"Sepulcher of the First Ones",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
},
[75384] = {
"Kraulshaped Monstrosity",
"Razorfen Kraul",
},
[186227] = {
"Monstrous Decay",
"Brackenhide Hollow",
},
[196102] = {
"Conjured Lasher",
"Darkmoon Faire",
},
[200387] = {
"Shambling Infester",
"Temple of the Jade Serpent",
},
[190401] = {
"Gusting Proto-Dragon",
"Halls of Infusion",
},
[24696] = {
"Coilskar Witch",
"Magisters' Terrace",
},
[183496] = {
"Foul Gorger",
"Sepulcher of the First Ones",
},
[193352] = {
"Hextrick Totem",
"Brackenhide Hollow",
},
[74549] = {
"Razorfen Stonechanter",
"Razorfen Kraul",
},
[58964] = {
"Colmek",
"Court of Stars",
},
[188100] = {
"Shrieking Whelp",
"The Azure Vault",
},
[181224] = {
"Dausegne",
"Sepulcher of the First Ones",
},
[24684] = {
"Sunblade Blood Knight",
"Magisters' Terrace",
},
[194622] = {
"Scorchling",
"Ruby Life Pools",
},
[183497] = {
"Foul Controller",
"Sepulcher of the First Ones",
},
[24815] = {
"Sunblade Imp",
"Magisters' Terrace",
},
[75061] = {
"Young Boar",
"Razorfen Kraul",
},
[96608] = {
"Ebonclaw Worg",
"Halls of Valor",
},
[185032] = {
"Taskmaster Xy'pro",
"Sepulcher of the First Ones",
},
[180990] = {
"The Jailer",
"Sepulcher of the First Ones",
},
[190403] = {
"Glacial Proto-Dragon",
"Halls of Infusion",
},
[200761] = {
"Wild Ohuna",
"The Nokhud Offensive",
},
[183498] = {
"Illicit Collector",
"Sepulcher of the First Ones",
},
[75509] = {
"Sadana Bloodfury",
"Shadowmoon Burial Grounds",
},
[74550] = {
"Razorfen Kraulshaper",
"Razorfen Kraul",
},
[195135] = {
"Bracken Warscourge",
"Brackenhide Hollow",
},
[80816] = {
"Ahri'ok Dugru",
"Iron Docks",
},
[198136] = {
"Eminent Earthshaper",
"Vault of the Incarnates",
},
},
["border_color"] = {
1,
nil,
0.011764705882353,
0.84000000357628,
},
["focus_color"] = {
nil,
nil,
nil,
1,
},
["cast_statusbar_spark_color"] = {
nil,
0.13333333333333,
0.8,
},
["honor_blizzard_plate_alpha"] = true,
["health_selection_overlay_alpha"] = 0,
["first_run3"] = true,
["minor_height_scale"] = 0.94999998807907,
["cast_statusbar_bgcolor"] = {
0,
0.062745101749897,
0.5137255191802979,
0.8900000005960464,
},
["not_affecting_combat_alpha"] = 1,
["color_override"] = false,
["health_animation_time_dilatation"] = 2.6199998855591,
["cast_statusbar_texture"] = "Wglass",
["use_ui_parent"] = true,
["aura_height"] = 18,
["ui_parent_scale_tune"] = 1.4099998474121,
["aura_tracker"] = {
["debuff_banned"] = {
["356329"] = false,
["228354"] = false,
["113724"] = false,
["289308"] = false,
["331934"] = false,
["205708"] = false,
["352939"] = false,
["354050"] = false,
["12486"] = false,
["236299"] = true,
},
["buff_tracked"] = {
["209859"] = true,
},
["buff_banned"] = {
["206150"] = true,
["61573"] = true,
["61574"] = true,
["333553"] = true,
},
},
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "Double Arrows",
["hook_data"] = {
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Key"] = "iconSizeOffset",
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Key"] = "iconPadding",
["Value"] = 0,
["Name"] = "Icon Padding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Key"] = "textureWidth",
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Key"] = "textureHeightMod",
["Value"] = 0,
["Name"] = "Texture Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Key"] = "texturePosition",
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547392935,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Color Automation [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614608917,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1623383400,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Hide Neutral Units [Plater]",
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1547409079,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Extra Border [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1554138845,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Don't Have Aura [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Options"] = {
},
["LastHookEdited"] = "",
["Name"] = "Players Targeting a Target [Plater]",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1614606781,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 358,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["LastHookEdited"] = "Initialization",
["Options"] = {
},
},
{
["OptionsValues"] = {
["targetcolor"] = {
0,
0.47450980392157,
1,
1,
},
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    --envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    envTable.TargetColor = modTable.config.targetcolor\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                npcColor = Plater.GetNpcColor (unitFrame)\n                if (npcColor) then\n                    Plater.SetNameplateColor (unitFrame, npcColor)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1654562266,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/_GSmNC31z/1",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 168,
["semver"] = "1.0.0",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "targetcolor",
["Value"] = {
0.46274509803922,
1,
0.48235294117647,
1,
},
["Name"] = "targetcolor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "targetcolor",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
["Time"] = 1678511108,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/turHC0a5k/7",
["Icon"] = "INTERFACE\\ICONS\\Ability_Creature_Cursed_04",
["Enabled"] = true,
["Revision"] = 285,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "@scriptname Options:",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the glow ants.",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "Amount of ants in the glow effect.",
["Min"] = 1,
["Key"] = "antsAmount",
["Value"] = 6,
["Name"] = "Ants Amount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Ants move speed",
["Min"] = -1,
["Key"] = "frequency",
["Value"] = 0.25,
["Name"] = "Speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsLength",
["Value"] = 4,
["Name"] = "Ants length",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 4,
["Desc"] = "",
["Min"] = 1,
["Key"] = "antsThickness",
["Value"] = 2,
["Name"] = "Ants Thickness",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "antsBorder",
["Value"] = false,
["Name"] = "Ants Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "outerGlow",
["Value"] = false,
["Name"] = "Outer Glow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Viashi-Antonidas",
["Desc"] = "Adds a glow to the aura if you can steal or purge the buff.",
["Prio"] = 99,
["version"] = 7,
["PlaterCore"] = 1,
["Name"] = "Steal/Purge Aura Glow",
["semver"] = "1.0.6",
["HooksTemp"] = {
["Initialization"] = "function (modTable)\n    -- settings:\n    \n    -- for the LibCustomGlow implementation:\n    modTable.options = {\n        glowType = \"pixel\",\n        color = modTable.config.glowColor,--\"red\", -- all plater color types accepted, from lib: {r,g,b,a}, color of lines and opacity, from 0 to 1. Defaul value is {0.95, 0.95, 0.32, 1}\n        N = modTable.config.antsAmount, --8, -- number of lines. Defaul value is 8;\n        frequency = modTable.config.frequency, -- frequency, set to negative to inverse direction of rotation. Default value is 0.25;\n        length = modTable.config.antsLength, -- length of lines. Default value depends on region size and number of lines;\n        th = modTable.config.antsThickness, -- thickness of lines. Default value is 2;\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        border = modTable.config.antsBorder, -- set to true to create border under lines;\n        key = \"StealPurgeAuraGlow\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local buffSpecialGlow = true\n    \n    \n    -- functions --\n    local auraContainers = {unitFrame.BuffFrame.PlaterBuffList}\n    \n    if (Plater.db.profile.buffs_on_aura2) then\n        auraContainers [2] = unitFrame.BuffFrame2.PlaterBuffList\n    end\n    \n    for containerID = 1, #auraContainers do\n        local auraContainer = auraContainers [containerID]\n        for index, auraIcon in ipairs (auraContainer) do\n            if (auraIcon:IsShown() and auraIcon.CanStealOrPurge) then\n                Plater.StartGlow(auraIcon, nil, modTable.options)\n                if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                    auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                    local offset = modTable.config.antsThickness\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                    auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                end\n            else\n                Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n            end\n        end\n    end\n    \n    if buffSpecialGlow then\n        for _, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if auraIcon:IsShown() then\n                if (auraIcon:IsShown() and auraIcon.canStealOrPurge) then\n                    Plater.StartGlow(auraIcon, nil, modTable.options)\n                    if modTable.config.outerGlow and auraIcon.__PlaterGlowFrame then\n                        auraIcon.__PlaterGlowFrame:ClearAllPoints()\n                        local offset = modTable.config.antsThickness\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"topleft\", auraIcon, \"topleft\", -offset, offset)\n                        auraIcon.__PlaterGlowFrame:SetPoint(\"bottomright\", auraIcon, \"bottomright\", offset, -offset)\n                    end\n                else\n                    Plater.StopGlow(auraIcon, modTable.options.glowType, modTable.options.key)\n                end                \n            end\n        end\n    end\n    \nend",
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame)\n    \n    local healthBar = unitFrame.healthBar\n    local percent = healthBar.CurrentHealth / healthBar.CurrentHealthMax\n    -- change the value to whatever, for fire mages its 30% so 0.30\n    local useScorch = 0.30\n    \n    if (percent <= useScorch) then\n        -- from here the customizing is optional\n        -- for a list of commands look at the plater api\n        -- https://www.curseforge.com/wow/addons/plater-nameplates/pages/scripts/list-of-api-functions\n        \n        -- below is an example which will set the color & bordercolor to orange, \n        -- change the size of the frame and add a flash to it\n        \n        Plater.SetNameplateColor (unitFrame, \"#ff8c00\")\n        Plater.SetBorderColor (unitFrame, \"#ff8c00\")\n        Plater.SetNameplateSize (unitFrame, 120, 20)\n        Plater.FlashNameplateBorder (unitFrame, 1)\n    end\n    \n    \nend",
},
["Time"] = 1625007755,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/pc7PK_czd/1",
["Icon"] = 135827,
["Enabled"] = false,
["Revision"] = 102,
["semver"] = "1.0.0",
["Author"] = "Sphyre-Tarren Mill",
["Desc"] = "distinguish the mob for scorching",
["Prio"] = 99,
["version"] = 1,
["PlaterCore"] = 1,
["Name"] = "Scorch",
["LastHookEdited"] = "Nameplate Updated",
["Options"] = {
},
},
{
["OptionsValues"] = {
["colorHealthbar"] = true,
["targetEnabled"] = false,
["raidMarkColors"] = false,
["targetColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["UseDefaultColor"] = false,
["IMobs"] = {
1,
0.97254901960784,
0,
1,
},
["threatColors"] = true,
["DefaultColor"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["EnMobs"] = {
1,
0,
0.10196078431373,
1,
},
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"]\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    modTable.UseDefaultColor = modTable.config[\"UseDefaultColor\"]\n    modTable.DefaultColor = modTable.config[\"DefaultColor\"]\n    \n    modTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"lightblue\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"ghostwhite\", --skull\n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    --Bosses - Greenyblue - \"Boss\"\n    --Mini Boss - DarkMagenta - \"MiniBoss\"\n    \n    --Focus mobs - Blue - \"FMobs\"\n    --Deadly mobs - Light Blue - \"DMobs\"\n    --Dodge Mobs - Purple - \"DoMobs\"\n    \n    --Healer mobs - White - HMobs\n    --Interruptable damage mobs - Orange - InMobs\n    --Enrage mobs - Light Orange - \"EnMobs\"\n    \n    --Expolsives mobs - Dark Pink - \"ExMobs\"\n    \n    modTable.NpcColors = {       \n        \n        -- De Other Side\n        [166473] = modTable.config[\"Boss\"],     --Hakkar the Soulflayer\n        [164555] = modTable.config[\"Boss\"],     --Milificent Manastorm\n        [164556] = modTable.config[\"Boss\"],     --Millhouse Manastorm\n        [169769] = modTable.config[\"Boss\"],     --Mueh'zala\n        \n        [170486] = modTable.config[\"FMobs\"],    --Atal'ia Devoted\n        [168992] = modTable.config[\"FMobs\"],    --Risen Cultist\n        [168934] = modTable.config[\"FMobs\"],    --Enraged Spirit\n        [167962] = modTable.config[\"FMobs\"],    --Defunct Dental Drill\n        [171184] = modTable.config[\"FMobs\"],    --Mythresh, Sky's Talon\n        \n        [167964] = modTable.config[\"DMobs\"],    --4.RF-4.RF\n        [164862] = modTable.config[\"DMobs\"],    --Weald Shimmermoth\n        \n        [167965] = modTable.config[\"IMobs\"],    --Lubricator\n        \n        [170490] = modTable.config[\"HMobs\"],    --Atal'ai High Priest\n        [170572] = modTable.config[\"HMobs\"],    --Atal'ai Hoodoo Hexxer\n        \n        [169905] = modTable.config[\"EnMobs\"],   --Risen Warlord\n        [171343] = modTable.config[\"EnMobs\"],   --Bladebeak Matriarch\n        \n        [168942] = modTable.config[\"DoMobs\"],    --DeathSpeaker\n        [167963] = modTable.config[\"DoMobs\"],    --Headless Client\n        [170480] = modTable.config[\"DoMobs\"],    --Atal'ia Deathwalker\n        \n        [170147] = modTable.config[\"ExMobs\"],   --Volatile Memory\n        \n        --Theater Of Pain\n        [164451] = modTable.config[\"Boss\"],     --Dessia the Decapitator\n        [164463] = modTable.config[\"Boss\"],     --Paceran the virulent\n        [164461] = modTable.config[\"Boss\"],     --Sathel the Accursed\n        [162317] = modTable.config[\"Boss\"],     --Gorechop\n        [162309] = modTable.config[\"Boss\"],     --Kul'tharok\n        [162329] = modTable.config[\"Boss\"],     --Xav the Unfallen\n        [165946] = modTable.config[\"Boss\"],     --Mordretha the Endless Empress\n        \n        [167536] = modTable.config[\"MiniBoss\"], --Harugia the Bloodthirsty\n        [162744] = modTable.config[\"MiniBoss\"], --Nekthara the Mangler\n        \n        [174210] = modTable.config[\"FMobs\"],    --Blighted Sludge-Spewer\n        [170882] = modTable.config[\"FMobs\"],    --Bone Magus\n        [160495] = modTable.config[\"FMobs\"],    --Maniacal Soulbinder\n        \n        [174197] = modTable.config[\"DMobs\"],    --Battlefield Ritualist\n        [163086] = modTable.config[\"DMobs\"],    --Rancid Gasbag\n        [170690] = modTable.config[\"DMobs\"],    --Diseased Horror\n        [167998] = modTable.config[\"DMobs\"],    --Portal Guardian\n        [164506] = modTable.config[\"DMobs\"],    --Ancient Captain\n        \n        [170850] = modTable.config[\"EnMobs\"],   --Raging BloodHorn\n        \n        [169893] = modTable.config[\"DoMobs\"],   --Hefarious Darkspeaker\n        [162763] = modTable.config[\"DoMobs\"],    --Soulforged Bonereaver\n        \n        --Necrotic Wake\n        [162691] = modTable.config[\"Boss\"],     --BlightBone\n        [162692] = modTable.config[\"Boss\"],     --Amarth\n        [166882] = modTable.config[\"Boss\"],     --Surgeon Stitchflesh\n        [166945] = modTable.config[\"Boss\"],     --Nalthor the Rimebinder\n        \n        [165824] = modTable.config[\"MiniBoss\"], --Nar'zudah\n        [165197] = modTable.config[\"MiniBoss\"], --Skeletal Monostrosity\n        \n        [163121] = modTable.config[\"FMobs\"],    --Stiched Vanguard\n        [165137] = modTable.config[\"FMobs\"],    --Zolramus GateKeeper\n        [163618] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        [168443] = modTable.config[\"FMobs\"],    --Zolramus Necromancer\n        \n        [163128] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [168357] = modTable.config[\"DMobs\"],    --Zolramus Sorcerer\n        [173044] = modTable.config[\"DMobs\"],    --Stitching Assistant\n        [167731] = modTable.config[\"DMobs\"],    --Separation Assistant\n        [163126] = modTable.config[\"DMobs\"],    --Brittlebone Mage\n        [163621] = modTable.config[\"DMobs\"],    --Goregrind\n        [163620] = modTable.config[\"DMobs\"],    --Rotspew\n        [172981] = modTable.config[\"DMobs\"],    --Kyrian Stitchwerk\n        \n        [173016] = modTable.config[\"IMobs\"],    --Corpse Collector\n        [166302] = modTable.config[\"IMobs\"],    --Corpse Harvester\n        [165919] = modTable.config[\"IMobs\"],    --Skeletal Marauder\n        \n        [165222] = modTable.config[\"HMobs\"],    --Zolramus Bonemender\n        [165872] = modTable.config[\"HMobs\"],    --Flesh Crafter\n        \n        --Halls Of Atonment\n        [165408] = modTable.config[\"Boss\"],     --Halkias\n        [156827] = modTable.config[\"Boss\"],     --Echelon  \n        [165410] = modTable.config[\"Boss\"],     --High Adjudicator Aleez\n        [164218] = modTable.config[\"Boss\"],     --Lord Chamberlain\n        \n        [167876] = modTable.config[\"MiniBoss\"], --Inquisitor Sigar\n        \n        [164562] = modTable.config[\"FMobs\"],    --Depraved Houndmaster\n        [165414] = modTable.config[\"FMobs\"],    --Depraved Obliterator\n        \n        [164563] = modTable.config[\"DMobs\"],    --Vicious Gargon\n        [165515] = modTable.config[\"DMobs\"],    --Depraved Darkblade\n        [167607] = modTable.config[\"DMobs\"],    --Stoneborn Slasher\n        [164557] = modTable.config[\"DMobs\"],    --Shard of Halkias\n        \n        [165529] = modTable.config[\"IMobs\"],    --Depraved Collector\n        [167612] = modTable.config[\"IMobs\"],    --Stoneborn Reaver\n        \n        [167611] = modTable.config[\"DoMobs\"],    --Stoneborn Eviscerator\n        \n        --Spires Of Ascension\n        [162059] = modTable.config[\"Boss\"],     --Kin-Tara\n        [163077] = modTable.config[\"Boss\"],     --Azules\n        [162058] = modTable.config[\"Boss\"],     --Ventunax\n        [162060] = modTable.config[\"Boss\"],     --Oryphrino\n        [167410] = modTable.config[\"Boss\"],     --Devos\n        \n        [168844] = modTable.config[\"MiniBoss\"],  --Lakesis\n        [168843] = modTable.config[\"MiniBoss\"],  --Klotos\n        [168845] = modTable.config[\"MiniBoss\"],  --Astronos\n        \n        [163458] = modTable.config[\"TMobs\"],   --Forsworn Castigator\n        [168418] = modTable.config[\"TMobs\"],   --Forsworn Inquisitor\n        [163520] = modTable.config[\"TMobs\"],   --Forsworn Squad-Leader\n        [168681] = modTable.config[\"TMobs\"],   --Forsworn Helion\n        \n        [163503] = modTable.config[\"DMobs\"],   --EtherDiver\n        [168658] = modTable.config[\"DMobs\"],   --Forsworn Devastator\n        [168717] = modTable.config[\"DMobs\"],   --Forsworn Justicar\n        \n        [168318] = modTable.config[\"IMobs\"],   --Forsworn Goliath\n        \n        [168420] = modTable.config[\"HMobs\"],   --Forsworn Champion\n        [163459] = modTable.config[\"HMobs\"],   --Forsworn Mender\n        [168718] = modTable.config[\"HMobs\"],   --Forsworn Warden\n        \n        --Sanguine Depths\n        [162103] = modTable.config[\"Boss\"],     --Executor Tarvold\n        [165318] = modTable.config[\"Boss\"],     --General Kaal\n        [162102] = modTable.config[\"Boss\"],     --Grand Proctor Beryllia\n        [162100] = modTable.config[\"Boss\"],     --Kryxis the Voracious\n        \n        [171376] = modTable.config[\"MiniBoss\"],    --Head Custodian Javlin\n        \n        [165076] = modTable.config[\"FMobs\"],    --Gluttonous Tick\n        [162040] = modTable.config[\"FMobs\"],    --Grand Overseer\n        [172265] = modTable.config[\"FMobs\"],   --Remnant of Fury\n        [168882] = modTable.config[\"FMobs\"],    --Fleeting Manifestation\n        \n        [162049] = modTable.config[\"DMobs\"],   --Vestige of Doubt\n        [171448] = modTable.config[\"DMobs\"],    --Dreadful Huntmaster\n        [166396] = modTable.config[\"DMobs\"],   --Noble Skirmisher\n        [166589] = modTable.config[\"DMobs\"],    --Animated Weapon\n        [171799] = modTable.config[\"DMobs\"],    --Depths Warden\n        [162047] = modTable.config[\"DMobs\"],    --Instiable Brute\n        \n        [162039] = modTable.config[\"IMobs\"],   --Wicked Oppressor\n        \n        [162057] = modTable.config[\"DoMobs\"],    --Chamber Sentinel\n        [162038] = modTable.config[\"DoMobs\"],   --Regal Mistdancer\n        \n        --Mist of Trina Scithe      \n        [164567] = modTable.config[\"Boss\"],     --ingra-maloch\n        [170217] = modTable.config[\"Boss\"],     --Mistcaller\n        [164517] = modTable.config[\"Boss\"],     --Tred'ova \n        \n        [164929] = modTable.config[\"FMobs\"],   --Tirnenn Villager\n        [164926] = modTable.config[\"FMobs\"],   --Drust Boughbreaker\n        \n        [166275] = modTable.config[\"DMobs\"],   --Mistveil Shaper\n        \n        [164920] = modTable.config[\"DMobs\"],   --Drust Soulcleaver\n        [166304] = modTable.config[\"DMobs\"],   --Mistveil Stinger\n        \n        [166299] = modTable.config[\"HMobs\"],   --Mistveil Tender\n        \n        [164921] = modTable.config[\"IMobs\"],   --Drust Harvester\n        [167111] = modTable.config[\"IMobs\"],   --Spinemaw Staghorn\n        \n        [167113] = modTable.config[\"DoMobs\"],   --Spinemaw Acidgullet \n        [166276] = modTable.config[\"DoMobs\"],   --Mistveil Guardian\n        \n        --Plaguefall    \n        [164967] = modTable.config[\"Boss\"],     --Doctor Ickus\n        [164266] = modTable.config[\"Boss\"],     --Domina Venomblade\n        [164255] = modTable.config[\"Boss\"],     --Globgrog\n        [164267] = modTable.config[\"Boss\"],     --Margrave Stradama\n        \n        [168886] = modTable.config[\"MiniBoss\"],  --Virulax Blightweaver\n        [169861] = modTable.config[\"MiniBoss\"],  --Ickor Bileflesh\n        \n        [164737] = modTable.config[\"FMobs\"],    --Brood Ambusher\n        [163915] = modTable.config[\"FMobs\"],    --Hatchling Nest\n        [168572] = modTable.config[\"FMobs\"],    --Fungi Stormer\n        [163891] = modTable.config[\"FMobs\"],    --Rotmarrow Slime\n        [168837] = modTable.config[\"FMobs\"],    --Stealthling\n        \n        [168578] = modTable.config[\"DMobs\"],    --FungalMancer\n        [168627] = modTable.config[\"DMobs\"],    --Plaguebinder\n        [167493] = modTable.config[\"DMobs\"],    --Venomous Sniper\n        [163882] = modTable.config[\"DMobs\"],    --Decaying Flesh Giant\n        [168310] = modTable.config[\"DMobs\"],    --Plagueroc\n        [165430] = modTable.config[\"DMobs\"],    --Malignant Spawn\n        \n        [168393] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [168396] = modTable.config[\"DoMobs\"],   --PlagueBelcher\n        [163894] = modTable.config[\"DoMobs\"],   --Blighted Spinebreaker\n        \n        [169159] = modTable.config[\"ExMobs\"],   --Unstable Canister\n        [168878] = modTable.config[\"ExMobs\"],   --Rigged Plagueborer        \n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame then return end\n        \n        if modTable.useThreatColors then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            elseif modTable.UseDefaultColor and not (unitFrame.namePlateUnitReaction == 4) and not unitIsPlayer and not unitFrame.namePlateIsQuestObjective then\n                Plater.SetNameplateColor(unitFrame, modTable.DefaultColor)\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame [MEMBER_NAME]]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (plateFrame.unitFrame [MEMBER_UNITID])\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n",
},
["Time"] = 1628712779,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/ocXXJPJZ7/6",
["Enabled"] = false,
["Revision"] = 236,
["semver"] = "1.0.5",
["Author"] = "Yummyyummy-Ravencrest",
["Desc"] = "Colours the Nameplates according to the type of M+ mob. This is my version of M+ Colored Mobs, https://wago.io/UKpo0_GbE",
["Prio"] = 98,
["version"] = 6,
["PlaterCore"] = 1,
["Name"] = "M+ Colouring",
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Mythic+ Colours:",
["Name"] = "Colors Header",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "Boss",
["Value"] = {
0,
1,
0.5843137254902,
1,
},
["Name"] = "Boss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "MiniBoss",
["Value"] = {
0.37647058823529,
0,
0.37647058823529,
1,
},
["Name"] = "MiniBoss",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mini bosses",
},
{
["Type"] = 1,
["Key"] = "FMobs",
["Value"] = {
0,
0,
1,
1,
},
["Name"] = "Focus Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that need to be focus.",
},
{
["Type"] = 1,
["Key"] = "DMobs",
["Value"] = {
0,
1,
1,
1,
},
["Name"] = "Deadly Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are considered Deadly.",
},
{
["Type"] = 1,
["Key"] = "DoMobs",
["Value"] = {
0.81176470588235,
0,
1,
1,
},
["Name"] = "Dodge Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that are not considered deadly, but have ability's that need to be dogded.",
},
{
["Type"] = 1,
["Key"] = "HMobs",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Healer Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have healing ability's that should be kicked,",
},
{
["Type"] = 1,
["Key"] = "IMobs",
["Value"] = {
1,
0.49803921568627,
0,
1,
},
["Name"] = "Interruptable Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that have Interruptable spell that should be kicked.",
},
{
["Type"] = 1,
["Key"] = "EnMobs",
["Value"] = {
1,
0.63921568627451,
0,
1,
},
["Name"] = "Enrage Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that enrage and should be calmed if possible.",
},
{
["Type"] = 1,
["Key"] = "ExMobs",
["Value"] = {
1,
0,
0.38039215686275,
1,
},
["Name"] = "Expolsives Mobs",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Mobs that explode before or after death. WATCH OUT!!!",
},
{
["Type"] = 1,
["Key"] = "DefaultColor",
["Value"] = {
0.43921568627451,
0.43921568627451,
0.43921568627451,
1,
},
["Name"] = "DefaultColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetColor",
["Value"] = {
0.27058823529412,
0.50980392156863,
0.70196078431373,
1,
},
["Name"] = "Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option9",
["Value"] = 0,
["Name"] = "Option 9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option22",
["Value"] = "Addictional Options",
["Name"] = "Addictional Options",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "targetEnabled",
["Value"] = false,
["Name"] = "Use Target Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "raidMarkColors",
["Value"] = true,
["Name"] = "Raid Mark Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "colorHealthbar",
["Value"] = false,
["Name"] = "Color Healthbar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "threatColors",
["Value"] = false,
["Name"] = "ThreatColors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
},
{
["Type"] = 4,
["Key"] = "UseDefaultColor",
["Value"] = true,
["Name"] = "Use Default Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["UID"] = "0x610c5b685dc84cc7",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.createCastDelim(unitFrame)\n    \nend\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- Check if the unit is still casting (did someone else interrupt?)\n    local name = nil\n    if envTable.channel then\n        name = select(1, UnitChannelInfo(unitId))\n    else\n        name = select(1, UnitCastingInfo(unitId))\n    end\n    \n    if name == nil then\n        -- Something interrupted the cast\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"interruptedColor\"])\n        return\n    end\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime  - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Start"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\n    if envTable.class ~= 9 then\n        envTable.kickId = modTable.kickIndex[envTable.class][envTable.spec]\n    else\n        -- Special warlock logic because warlocks are special\n        if envTable.spec == 1 or envTable.spec == 3 then -- Aff & Destro\n            if IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else -- Look for Grimoire of Sacrifice\n                local i, found = 1, false\n                local buff = UnitBuff(\"player\", i)\n                while buff do\n                    if buff == \"Grimoire of Sacrifice\" then\n                        found = true\n                        buff = nil\n                    else\n                        i = i + 1\n                        buff = UnitBuff(\"player\", i)\n                    end\n                end\n                if found == true then\n                    envTable.kickId = 132409\n                else \n                    envTable.kickId = nil\n                end\n            end\n        elseif spec == 2 then -- Demo\n            if IsSpellKnown(89766, true) then -- Felguard\n                envTable.kickId = 119914\n            elseif IsSpellKnown(19647, true) then -- Felhunter\n                envTable.kickId = 119910\n            else \n                envTable.kickId = nil \n            end\n        end\n    end\n    \n    -- Check for cast\n    envTable.channel = false\n    local name, _, _, startTime, endTime, _, _, notInterruptible = UnitCastingInfo(unitId)\n    if name == nil then    \n        -- Check for channel\n        envTable.channel = true\n        name, _, _, startTime, endTime, _, notInterruptible = UnitChannelInfo(unitId)\n        if name == nil then return end\n    end\n    \n    envTable.notInterruptible = notInterruptible\n    envTable.startTime = startTime\n    envTable.endTime = endTime\n    \n    local intStart, intDuration = nil\n    if envTable.kickId ~= nil then\n        intStart, intDuration, _ = GetSpellCooldown(envTable.kickId)\n    else\n        intStart = 0\n        intDuration = 1\n    end\n    \n    local time = GetTime()\n    local castTime = (envTable.endTime - envTable.startTime)/1000\n    local castTimeLeft = envTable.endTime/1000 - time\n    local intTimeLeft = intDuration - (time - intStart)\n    if intTimeLeft < 0 then\n        intTimeLeft = 0\n    end\n    \n    if unitFrame.castBar.delim == nil then\n        envTable.createCastDelim(unitFrame)\n    end\n    local delimFraction = 0\n    if castTime > 0 then\n        delimFraction = (intStart + intDuration - envTable.startTime/1000)/castTime - 0.03 -- move slightly left\n    end\n    if envTable.channel then\n        delimFraction = 1 - delimFraction\n    end\n    \n    if envTable.notInterruptible then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"protectedColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif intTimeLeft == 0 then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"readyColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    elseif castTimeLeft < (intTimeLeft + modTable.config[\"cooldownTolerance\"]/1000) then\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"cooldownColor\"])\n        unitFrame.castBar.delim:Hide()\n        \n    else\n        Plater.SetCastBarColor(unitFrame, modTable.config[\"semiCooldownColor\"])\n        \n        if modTable.config[\"cooldownLine\"] then\n            local cbw = unitFrame.castBar:GetWidth()\n            local cbh = unitFrame.castBar:GetHeight()\n            unitFrame.castBar.delim:SetSize (cbh, cbh)\n            unitFrame.castBar.delim:SetPoint(\"center\", unitFrame.castBar, \"left\", cbw * delimFraction, 0)\n            unitFrame.castBar.delim:Show()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Initialization"] = "function (modTable)\n    modTable.kickIndex = {\n        [1] = {[1] = 6552, [2] = 6552, [3] = 6552}, -- Warrior\n        [2] = {[1] = nil, [2] = 96231, [3] = 96231}, -- Paladin\n        [3] = {[1] = 147362, [2] = 147362, [3] = 187707}, -- Hunter\n        [4] = {[1] = 1766, [2] = 1766, [3] = 1766} ,-- Rogue\n        [5] = {[1] = nil, [2] = nil, [3] = 15487}, -- Priest\n        [6] = {[1] = 47528, [2] = 47528, [3] = 47528}, -- Death Knight\n        [7] = {[1] = 57994, [2] = 57994, [3] = 57994}, -- Shaman\n        [8] = {[1] = 2139, [2] = 2139, [3] = 2139}, -- Mage\n        [10] = {[1] = 116705, [2] = nil, [3] = 116705}, -- Monk\n        [11] = {[1] = 78675, [2] = 106839, [3] = 106839, [4] = nil}, -- Druid\n        [12] = {[1] = 183752, [2] = 183752} -- Demon Hunter\n    }\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local spec = GetSpecialization()\n    envTable.spec = spec\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    local _, _, class = UnitClass(\"player\")\n    envTable.class = class\n    \n    function envTable.createCastDelim(unitFrame)\n        local delim = unitFrame.castBar:CreateTexture (nil, \"overlay\")\n        delim:SetDrawLayer (\"overlay\", 7)\n        delim:SetTexture ([[Interface\\AddOns\\Plater\\images\\health_bypass_indicator]])\n        delim:SetBlendMode (\"ADD\")\n        delim:Hide()\n        unitFrame.castBar.delim = delim\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1678511151,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 132219,
["Enabled"] = true,
["Revision"] = 477,
["semver"] = "",
["Author"] = "Verlijke-Mal'Ganis",
["Desc"] = "Changes the color of the nameplate castbar based on the current cooldown of the player's interrupt.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 1,
["Key"] = "readyColor",
["Value"] = {
0,
1,
0,
1,
},
["Name"] = "Kick Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is ready to be used.",
},
{
["Type"] = 1,
["Key"] = "semiCooldownColor",
["Value"] = {
1,
0.5921568627451,
0.031372549019608,
1,
},
["Name"] = "Kick Will Be Ready Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, but will be ready before the cast ends.",
},
{
["Type"] = 1,
["Key"] = "cooldownColor",
["Value"] = {
1,
0,
0.007843137254902,
1,
},
["Name"] = "Kick Will NOT Be Ready",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar when your kick is on cooldown, and will NOT be ready before the cast ends.",
},
{
["Type"] = 2,
["Max"] = 1000,
["Desc"] = "Time in milliseconds that your kick should be off cooldown before cast end to count as \"kick will be ready\" (recommended to set to a few hundred ms above your latency).",
["Min"] = 0,
["Key"] = "cooldownTolerance",
["Value"] = 500,
["Name"] = "Kick CD Tolerance (ms)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "protectedColor",
["Value"] = {
0.74117647058824,
0.74901960784314,
0.73725490196078,
1,
},
["Name"] = "Protected Cast Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for protected casts.",
},
{
["Type"] = 1,
["Key"] = "interruptedColor",
["Value"] = {
1,
0,
0,
1,
},
["Name"] = "Interrupted Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "The color of the cast bar for interrupted casts.",
},
{
["Type"] = 4,
["Key"] = "cooldownLine",
["Value"] = true,
["Name"] = "Castbar CD Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Draw a line on castbars indicating when your interrupt will be off-cooldown.",
},
},
["Name"] = "Interrupt CD Indicator",
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
},
["UID"] = "0x62229f65202d123",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local vyColor = modTable.config.vyColor\n    local woColor = modTable.config.woColor\n    local urhColor = modTable.config.urhColor\n    local vyBGColor = modTable.config.vyBGColor\n    local woBGColor = modTable.config.woBGColor\n    local urhBGColor = modTable.config.urhBGColor\n    local vyName = modTable.config.vyName\n    local woName = modTable.config.woName\n    local urhName = modTable.config.urhName\n    \n    \n    envTable.NpcColors = {\n        \n        [185680] = vyColor,  --haste & proc\n        [184908] = vyColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woColor, --movespeed & stealth\n        [184910] = woColor,\n        \n        [185685] = urhColor, --cdr & mana\n        [184911] = urhColor,\n        \n        \n        \n    } \n    \n    envTable.NpcBGColors = {\n        \n        [185680] = vyBGColor,  --haste & proc\n        [184908] = vyBGColor,\n        --[31146] = vyColor, --dummy\n        \n        [185683] = woBGColor, --movespeed & stealth\n        [184910] = woBGColor,\n        \n        [185685] = urhBGColor, --cdr & mana\n        [184911] = urhBGColor,\n        \n        \n        \n    } \n    \n    envTable.NpcNames = {\n        \n        [185680] = vyName,  --haste & proc\n        [184908] = vyName,\n        --[31146] = vyName, --dummy\n        \n        [185683] = woName, --movespeed & stealth\n        [184910] = woName,\n        \n        [185685] = urhName, --cdr & mana\n        [184911] = urhName,\n        \n    } \n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    \n    ---------- USER SETTINGS ----------\n    \n    --Custom texture to assign to encrypted mobs if the setting is enabled in the options menu\n    local barTexture = [[Interface\\AddOns\\Plater\\images\\overlay_indicator_1]]\n    \n    ---------- USER SETTINGS ----------\n    \n    \n    \n    local name = envTable.NpcNames [unitFrame.namePlateUnitNameLower] or envTable.NpcNames [unitFrame.namePlateUnitName] or envTable.NpcNames [unitFrame.namePlateNpcId]\n    \n    \n    \n    \n    if name then\n        \n        local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n        local colorBG = envTable.NpcBGColors [unitFrame.namePlateUnitNameLower] or envTable.NpcBGColors [unitFrame.namePlateUnitName] or envTable.NpcBGColors [unitFrame.namePlateNpcId]\n        \n        \n        local nameString = unitFrame.PlateFrame.CurrentUnitNameString\n        local setName = modTable.config.setName\n        local setColor = modTable.config.setColor\n        local setBackgroundColor = modTable.config.setBackgroundColor\n        local setNameColor = modTable.config.setNameColor\n        local setBorderColor = modTable.config.setBorderColor\n        local setTexture = modTable.config.setTexture\n        local setHeight = modTable.config.setHeight\n        local barHeight = modTable.config.barHeight\n        local setFontSize = modTable.config.setFontSize\n        local fontSize = modTable.config.fontSize\n        \n        \n        if setColor then\n            Plater.SetNameplateColor (unitFrame, color)\n        end\n        \n        if setBackgroundColor then\n            unitFrame.healthBar.background:SetVertexColor(colorBG[1], colorBG[2], colorBG[3], colorBG[4])\n        end\n        \n        if setNameColor then\n            Plater:SetFontColor (nameString, color)\n        end\n        \n        if setBorderColor then\n            Plater.SetBorderColor (unitFrame, color)\n        end\n        \n        if setHeight then\n            Plater.SetNameplateSize (unitFrame, nil, barHeight)\n        end\n        \n        if setName then\n            nameString:SetText(name)\n        end\n        \n        if setFontSize then\n            Plater:SetFontSize (nameString, fontSize)\n        end\n        \n        if setTexture then\n            unitFrame.healthBar:SetTexture(barTexture)\n        end\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1678511103,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "https://wago.io/CignDPWs3/8",
["Icon"] = 4224736,
["Enabled"] = true,
["Revision"] = 499,
["Options"] = {
{
["Type"] = 4,
["Key"] = "setColor",
["Value"] = true,
["Name"] = "Set Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust health bar colors?",
},
{
["Type"] = 4,
["Key"] = "setNameColor",
["Value"] = false,
["Name"] = "Set Name Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 4,
["Key"] = "setBorderColor",
["Value"] = false,
["Name"] = "Set Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust Name colors?",
},
{
["Type"] = 1,
["Key"] = "vyColor",
["Value"] = {
0,
0.9921568627451,
1,
1,
},
["Name"] = "Vy Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhColor",
["Value"] = {
0.63137254901961,
0.34901960784314,
1,
1,
},
["Name"] = "Urh Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woColor",
["Value"] = {
0.33725490196078,
1,
0.42352941176471,
1,
},
["Name"] = "Wo Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "pog",
["Value"] = 0,
["Name"] = "Divider",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setName",
["Value"] = true,
["Name"] = "Set Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's Name?",
},
{
["Type"] = 3,
["Key"] = "vyName",
["Value"] = "Vy (Haste)",
["Name"] = "Vy Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "urhName",
["Value"] = "Urh (CDR)",
["Name"] = "Urh Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "woName",
["Value"] = "Wo (Stealth)",
["Name"] = "Wo Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setHeight",
["Value"] = false,
["Name"] = "Set Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar height?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "barHeight",
["Value"] = 20,
["Name"] = "Bar Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setFontSize",
["Value"] = false,
["Name"] = "Set Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's font size?",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 0,
["Key"] = "fontSize",
["Value"] = 20,
["Name"] = "Font Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setTexture",
["Value"] = false,
["Name"] = "Set Bar Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Should we adjust the NPC's bar texture?",
},
{
["Type"] = 5,
["Key"] = "barWarning",
["Value"] = "*set texture path in \"Nameplate Updated\" hook. Default custom texture is PlaterFocus",
["Name"] = "Bar Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "setBackgroundColor",
["Value"] = false,
["Name"] = "Set Bar Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Some bar textures (like PlaterFocus) Also show the background color, which you can set here.",
},
{
["Type"] = 1,
["Key"] = "vyBGColor",
["Value"] = {
0,
0.098039215686275,
0.098039215686275,
1,
},
["Name"] = "Vy Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "urhBGColor",
["Value"] = {
0.043137254901961,
0,
0.098039215686275,
1,
},
["Name"] = "Urh Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "woBGColor",
["Value"] = {
0,
0.098039215686275,
0.011764705882353,
1,
},
["Name"] = "Wo Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "deez",
["Value"] = 0,
["Name"] = "Divider 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "reloadWarning",
["Value"] = "Moving the sliders around too much can cause some temporary lag. To fix this simply reload your game after applying changes!",
["Name"] = "Reload Warning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
},
["Author"] = "Ilrieth-Argent Dawn",
["Desc"] = "modify Encrypted mobs' names and healthbar colors with custom values",
["Prio"] = 99,
["version"] = 8,
["PlaterCore"] = 1,
["Name"] = "Encrypted Names & Colors",
["LastHookEdited"] = "",
["semver"] = "1.0.7",
},
},
["target_shady_enabled"] = false,
["border_thickness"] = 0.800000011920929,
["aura_width2"] = 22,
["aggro_modifies"] = {
["actor_name_color"] = true,
},
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.1499999761581",
["nameplateLargeTopInset"] = "-1",
["nameplateShowEnemyMinus"] = "1",
["NamePlateClassificationScale"] = "1",
["nameplateShowFriendlyTotems"] = "0",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplateTargetRadialPosition"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["clampTargetNameplateToScreen"] = "0",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "60",
["nameplateShowFriendlyMinions"] = "0",
["nameplateTargetBehindMaxDistance"] = "30",
["SoftTargetInteract"] = "3",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplateShowSelf"] = "0",
["nameplateSelfTopInset"] = "0.51",
["nameplateMotionSpeed"] = "0.050608683377504",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateOtherTopInset"] = "-1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "0.30423501133919",
["SoftTargetIconGameObject"] = "0",
["ShowNamePlateLoseAggroFlash"] = "1",
["NamePlateHorizontalScale"] = "1",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["health_statusbar_bgcolor"] = {
0.0470588281750679,
0.05098039656877518,
0.05098039656877518,
1,
},
["target_shady_alpha"] = 0.2520707845687866,
["disable_omnicc_on_auras"] = true,
["ui_parent_cast_level"] = 108,
["aura_width"] = 22,
["aura_height2"] = 18,
["castbar_target_notank"] = true,
["target_highlight_height"] = 7.005825042724609,
["global_offset_y"] = 0.2299995422363281,
["aggro_can_check_notank"] = true,
["login_counter"] = 11387,
["version"] = 1,
["pet_width_scale"] = 0.8499999642372131,
["range_check_enabled"] = false,
["focus_indicator_enabled"] = false,
["target_highlight_alpha"] = 0.9511719942092896,
["focus_as_target_alpha"] = true,
["castbar_target_anchor"] = {
["y"] = -8.94000244140625,
["x"] = -3.170005798339844,
["side"] = 10,
},
["quick_hide"] = true,
["patch_version"] = 25,
["aura_stack_font"] = "PT Sans Narrow",
["script_auto_imported"] = {
["Relics 9.2 M Dungeons"] = 2,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 1,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Important"] = 11,
["Cast - Quick Flash"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Fixate On You"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Cast - Glowing [P]"] = 10,
["Cast - Very Important"] = 15,
["Spiteful Affix"] = 3,
["Fixate"] = 11,
["Auto Set Skull"] = 11,
["Aura - Buff Alert"] = 15,
["Add - Non Elite Trash [P]"] = 4,
["Cast - On Going Cast [P]"] = 2,
["Cast - Stop Casting"] = 4,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Add - Explode on Die [P]"] = 1,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Circular Swipe"] = 4,
["Unit - Show Energy"] = 11,
},
["target_highlight_color"] = {
nil,
0.05882353335618973,
},
["range_check_in_range_or_target_alpha"] = 0.7999999523162842,
["aura_timer_text_size"] = 12,
["range_check_alpha_friendlies"] = 1,
["aura_show_enrage"] = true,
["number_region_first_run"] = true,
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["usePlaterWidget"] = false,
["range_check_alpha"] = 1,
["click_space"] = {
138,
36,
},
["castbar_icon_show"] = false,
["castbar_target_font"] = "PT Sans Narrow",
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1.2000000476837,
},
},
["semver"] = "1.0.0",
["ghost_auras"] = {
["auras"] = {
["DEATHKNIGHT"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["WARRIOR"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["SHAMAN"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["MAGE"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["PRIEST"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
["589"] = true,
["34914"] = true,
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["HUNTER"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["WARLOCK"] = {
["1"] = {
[980] = true,
[172] = true,
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["DEMONHUNTER"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
},
["PALADIN"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["DRUID"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
["9"] = {
},
["8"] = {
},
},
["MONK"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
["ROGUE"] = {
["1"] = {
},
["0"] = {
},
["3"] = {
},
["2"] = {
},
["5"] = {
},
["4"] = {
},
["7"] = {
},
["6"] = {
},
},
},
},
["npc_colors"] = {
[167998] = {
true,
true,
"fuchsia",
},
[165108] = {
true,
true,
"fuchsia",
},
[178165] = {
true,
true,
"fuchsia",
},
[162691] = {
true,
false,
"fuchsia",
},
[170850] = {
true,
true,
"fuchsia",
},
[164873] = {
true,
true,
"fuchsia",
},
[162763] = {
true,
true,
"fuchsia",
},
[163086] = {
true,
false,
"fuchsia",
},
[164929] = {
true,
true,
"fuchsia",
},
[162047] = {
true,
true,
"fuchsia",
},
[168418] = {
true,
true,
"crimson",
},
[163520] = {
true,
true,
"fuchsia",
},
[174569] = {
false,
false,
"fuchsia",
},
[167962] = {
true,
true,
"fuchsia",
},
[170490] = {
true,
true,
"fuchsia",
},
[165529] = {
true,
false,
"springgreen",
},
[163458] = {
true,
true,
"crimson",
},
[171341] = {
true,
true,
"greenyellow",
},
[162057] = {
true,
true,
"fuchsia",
},
[163459] = {
true,
true,
"greenyellow",
},
[168318] = {
true,
true,
"fuchsia",
},
[171799] = {
true,
true,
"fuchsia",
},
[168594] = {
true,
true,
"fuchsia",
},
[163121] = {
true,
true,
"fuchsia",
},
[177808] = {
true,
true,
"fuchsia",
},
[168681] = {
true,
true,
"fuchsia",
},
[167111] = {
true,
true,
"fuchsia",
},
[178141] = {
true,
true,
"fuchsia",
},
[166299] = {
true,
true,
"fuchsia",
},
[163618] = {
true,
false,
"fuchsia",
},
[174210] = {
true,
true,
"fuchsia",
},
[169905] = {
true,
true,
"fuchsia",
},
[170572] = {
true,
true,
"fuchsia",
},
[168942] = {
true,
true,
"fuchsia",
},
[168572] = {
true,
true,
"fuchsia",
},
[162040] = {
true,
true,
"fuchsia",
},
[180495] = {
true,
true,
"fuchsia",
},
[167964] = {
true,
true,
"fuchsia",
},
[164557] = {
true,
false,
"fuchsia",
},
},
["dps"] = {
["colors"] = {
["solo"] = {
0,
1,
0.011764705882353,
},
["notontank"] = {
1,
0.43529411764706,
0,
},
["aggro"] = {
nil,
0.007843137718737125,
},
["noaggro"] = {
0.3803921937942505,
0.4823529720306397,
},
["pulling"] = {
0.93333333333333,
1,
0.95686274509804,
},
},
},
["range_check_in_range_or_target_alpha_friendlies"] = 0.89999997615814,
["castbar_target_show"] = true,
["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
["cast_color_settings"] = {
["enabled"] = true,
["width"] = 12,
},
["aura_alpha"] = 0.84999996423721,
["aura_timer_text_font"] = "PT Sans Narrow",
["minor_width_scale"] = 0.89999997615814,
["aura_consolidate"] = true,
["transparency_behavior"] = 4,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
},
},
["InterruptableSpells"] = {
[278444] = true,
[367503] = true,
[19647] = true,
[252923] = true,
[168040] = true,
[187707] = true,
[255824] = true,
[260701] = true,
[265187] = true,
[396640] = true,
[31935] = true,
[387843] = true,
[426731] = true,
[253562] = true,
[377389] = true,
[378282] = true,
[426541] = true,
[378155] = true,
[428263] = true,
[164887] = true,
[199663] = true,
[415770] = true,
[96231] = true,
[415773] = true,
[220543] = true,
[387596] = true,
[132409] = true,
[372743] = true,
[413607] = true,
[686] = true,
[264050] = true,
[395694] = true,
[93985] = true,
[428526] = true,
[365350] = true,
[374339] = true,
[418200] = true,
[372683] = true,
[8004] = true,
[386071] = true,
[105174] = true,
[418202] = true,
[387411] = true,
[371984] = true,
[204896] = true,
[173563] = true,
[392576] = true,
[147362] = true,
[382249] = true,
[377341] = true,
[201837] = true,
[404754] = true,
[411958] = true,
[165213] = true,
[392451] = true,
[400165] = true,
[47528] = true,
[266036] = true,
[426240] = true,
[188196] = true,
[413427] = true,
[386015] = true,
[201839] = true,
[369823] = true,
[227913] = true,
[267824] = true,
[201298] = true,
[429176] = true,
[373395] = true,
[194509] = true,
[351338] = true,
[1064] = true,
[143343] = true,
[1766] = true,
[387613] = true,
[412922] = true,
[200630] = true,
[348] = true,
[169839] = true,
[255041] = true,
[407122] = true,
[118] = true,
[386012] = true,
[427459] = true,
[384365] = true,
[373017] = true,
[169840] = true,
[420320] = true,
[407124] = true,
[347008] = true,
[116858] = true,
[417481] = true,
[263165] = true,
[386024] = true,
[268278] = true,
[77472] = true,
[407891] = true,
[264390] = true,
[383651] = true,
[183752] = true,
[375596] = true,
[164965] = true,
[91807] = true,
[6552] = true,
[252781] = true,
[40823] = true,
[369675] = true,
[197797] = true,
[2139] = true,
[428103] = true,
[201399] = true,
[417011] = true,
[369365] = true,
[384161] = true,
[253544] = true,
[200248] = true,
[374045] = true,
[259572] = true,
[386026] = true,
[377488] = true,
[407121] = true,
[29722] = true,
[225562] = true,
[415437] = true,
[412233] = true,
[376725] = true,
[436841] = true,
[253517] = true,
[426768] = true,
[417030] = true,
[388392] = true,
[388863] = true,
[384808] = true,
[387564] = true,
[426783] = true,
[397394] = true,
[372711] = true,
[415435] = true,
[388862] = true,
[384633] = true,
[377008] = true,
[386546] = true,
[97547] = true,
[168092] = true,
[200658] = true,
[253583] = true,
[168082] = true,
[57994] = true,
[369399] = true,
[374563] = true,
[32747] = true,
[416256] = true,
[369400] = true,
[76813] = true,
[387618] = true,
[169841] = true,
[266225] = true,
[260700] = true,
[263959] = true,
[260696] = true,
[116705] = true,
[377950] = true,
[387125] = true,
[264024] = true,
[204243] = true,
[164973] = true,
[381516] = true,
[377500] = true,
[384194] = true,
[381770] = true,
[392398] = true,
[392924] = true,
[200642] = true,
[382474] = true,
[377402] = true,
[373932] = true,
[265876] = true,
[374544] = true,
[383231] = true,
[377503] = true,
[384197] = true,
[377384] = true,
[408805] = true,
[374699] = true,
[265368] = true,
[5143] = true,
[372223] = true,
[373680] = true,
[411994] = true,
[391403] = true,
[196883] = true,
[256849] = true,
[260697] = true,
[385029] = true,
[412378] = true,
[369602] = true,
[369411] = true,
[395427] = true,
[369674] = true,
[120644] = true,
[260698] = true,
[426596] = true,
[367500] = true,
[271174] = true,
[201411] = true,
[585] = true,
[376171] = true,
[373897] = true,
[260699] = true,
[372538] = true,
[139869] = true,
[374706] = true,
[429812] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
},
["captured_casts"] = {
[386509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[37319] = {
["encounterName"] = "Al'ar",
["source"] = "Phoenix-Hawk Hatchling",
["npcID"] = 20038,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[124800] = {
["source"] = "Sra'thik Warcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61502,
},
[394701] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Great Shellkhan",
["npcID"] = 191305,
},
[413131] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[15795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smolderthorn Axe Thrower",
["npcID"] = 9267,
},
[376272] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[413133] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[195320] = {
["source"] = "Drogbar Manathirster",
["event"] = "SPELL_CAST_START",
["npcID"] = 95866,
},
[288221] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Unexploded Ordnance",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 148631,
},
[421325] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[316890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Brute",
["npcID"] = 153239,
},
[257777] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[427469] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[413135] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[456138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[196345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Scrapper",
["npcID"] = 98003,
},
[394706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Frost",
["npcID"] = 198702,
},
[404945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winglord Iyazael",
["npcID"] = 199401,
},
[275937] = {
["source"] = "Frigidus",
["event"] = "SPELL_CAST_START",
["npcID"] = 204425,
},
[409041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[269795] = {
["source"] = "Jungo, Herald of G'huun",
["event"] = "SPELL_CAST_START",
["npcID"] = 128184,
},
[320989] = {
["source"] = "Altered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 168244,
},
[390613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[376279] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[306656] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["encounterID"] = 2373,
["event"] = "SPELL_CAST_START",
["npcID"] = 152874,
},
[384471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Skitter",
["npcID"] = 196758,
},
[398806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[97158] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Jin'do the Godbreaker",
["encounterID"] = 1182,
["event"] = "SPELL_CAST_START",
["npcID"] = 52150,
},
[260852] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[40904] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[404951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[392665] = {
["source"] = "Time-Lost Thunderhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 187258,
},
[447955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alunira",
["npcID"] = 219281,
},
[34761] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[119684] = {
["encounterName"] = "Xin the Weaponmaster",
["source"] = "Xin the Weaponmaster",
["encounterID"] = 1441,
["event"] = "SPELL_CAST_START",
["npcID"] = 61398,
},
[456147] = {
["event"] = "SPELL_CAST_START",
["source"] = "Regal Plainshawk",
["npcID"] = 222329,
},
[384476] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[413145] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[122244] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[400859] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[437719] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Galesinger",
["npcID"] = 190373,
},
[386526] = {
["source"] = "Nullmagic Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187246,
},
[413147] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[54983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[417243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[353763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sath'zuul",
["npcID"] = 179135,
},
[392671] = {
["source"] = "Icebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199279,
},
[394719] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[56775] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[390624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarglebone",
["npcID"] = 197344,
},
[392672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Elarthresh",
["npcID"] = 201820,
},
[427484] = {
["source"] = "Fanatical Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 206698,
},
[314858] = {
["source"] = "Scoutmaster Moswen",
["event"] = "SPELL_CAST_START",
["npcID"] = 152040,
},
[382434] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[425437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[413151] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[382435] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[376292] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[421343] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[407009] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[310766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[353769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karthazel",
["npcID"] = 179136,
},
[282098] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Pa'ku's Aspect",
["encounterID"] = 2268,
["event"] = "SPELL_CAST_START",
["npcID"] = 144747,
},
[13748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[164615] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 81767,
},
[396774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[396775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[423396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[312818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoth the Darkened",
["npcID"] = 160532,
},
[255741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fangcaller Sraka",
["npcID"] = 130466,
},
[167688] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[265721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorachna",
["npcID"] = 200349,
},
[34763] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[164617] = {
["encounterName"] = "Gug'rokk",
["source"] = "Bloodmaul Flamespeaker",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 81767,
},
[29926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spell Shade",
["npcID"] = 16525,
},
[366062] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[384492] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[394731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Earth",
["npcID"] = 198709,
},
[384493] = {
["source"] = "Shikaar Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 184657,
},
[396780] = {
["source"] = "Rimebound Subjugator",
["event"] = "SPELL_CAST_START",
["npcID"] = 195837,
},
[22887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[257791] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[76686] = {
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 40019,
},
[392686] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[172810] = {
["source"] = "Champion Druna",
["event"] = "SPELL_CAST_START",
["npcID"] = 81603,
},
[421355] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[32358] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[298491] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 151660,
},
[188169] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[282110] = {
["source"] = "Vindictive Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 146616,
},
[150286] = {
["source"] = "Razorfen Geomagus",
["event"] = "SPELL_CAST_START",
["npcID"] = 74545,
},
[257793] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[386546] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[251650] = {
["source"] = "Loti's Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 126790,
},
[415215] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[269825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nisha",
["npcID"] = 130455,
},
[386547] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[396786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chillwind Yeti",
["npcID"] = 215141,
},
[199433] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[425455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Lasher",
["npcID"] = 210111,
},
[400883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Blazestalker",
["npcID"] = 199828,
},
[151312] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Warlord Ramtusk",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 74462,
},
[404980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[316927] = {
["source"] = "Barrow Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160394,
},
[310784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[404982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[300547] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[214794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Deathguard",
["npcID"] = 135886,
},
[150290] = {
["encounterName"] = "Magmolatus",
["source"] = "Calamity",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74571,
},
[21096] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Coilfang Technician",
["npcID"] = 17940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1939,
},
[310788] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Organ of Corruption",
["npcID"] = 158343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[394746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Liskron the Dazzling",
["npcID"] = 193273,
},
[298502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Bonecrusher",
["npcID"] = 153531,
},
[417272] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[209676] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[372222] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[30695] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[372223] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[392701] = {
["source"] = "Stormshroud Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 192536,
},
[394749] = {
["source"] = "Unstable Storm",
["event"] = "SPELL_CAST_START",
["npcID"] = 198716,
},
[265741] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[269837] = {
["source"] = "Amani Thug",
["event"] = "SPELL_CAST_START",
["npcID"] = 120843,
},
[386559] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[372225] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[166675] = {
["source"] = "Grom'kar Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 80937,
},
[372226] = {
["source"] = "Qalashi Bonetender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189265,
},
[114062] = {
["encounterName"] = "Jandice Barov",
["source"] = "Jandice Barov",
["encounterID"] = 1427,
["event"] = "SPELL_CAST_START",
["npcID"] = 59184,
},
[57547] = {
["source"] = "Brynja",
["event"] = "SPELL_CAST_START",
["npcID"] = 146447,
},
[275983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Flametender",
["npcID"] = 185227,
},
[400896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[361989] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[34254] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[275984] = {
["source"] = "Vigil Hill Marine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130695,
},
[450043] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[419327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[447996] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[331275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Advent Nevermore",
["npcID"] = 167533,
},
[269843] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Unbound Abomination",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 133007,
},
[300560] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[46029] = {
["source"] = "Sunblade Blood Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 24684,
},
[396805] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[407045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[409093] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[396807] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[366091] = {
["source"] = "Ancient Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181011,
},
[171799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Bonereaver",
["npcID"] = 85896,
},
[372235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Shaman",
["npcID"] = 207583,
},
[382474] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[265754] = {
["source"] = "Rastakhan's Might Mutineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133136,
},
[384524] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[419336] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[252687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowblade Stalker",
["npcID"] = 122970,
},
[419337] = {
["source"] = "Fel-Watcher Mara",
["event"] = "SPELL_CAST_START",
["npcID"] = 206925,
},
[7739] = {
["source"] = "Magistrate Burnside",
["event"] = "SPELL_CAST_START",
["npcID"] = 47790,
},
[400908] = {
["source"] = "Suffocating Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 201644,
},
[394765] = {
["source"] = "Igneous Stonemauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 210043,
},
[314903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Khateph",
["npcID"] = 159321,
},
[154396] = {
["encounterName"] = "High Sage Viryx",
["source"] = "High Sage Viryx",
["encounterID"] = 1701,
["event"] = "SPELL_CAST_START",
["npcID"] = 76266,
},
[278044] = {
["source"] = "Wrathful Orchid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186321,
},
[396814] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[325143] = {
["source"] = "Strategist Palladia",
["event"] = "SPELL_CAST_START",
["npcID"] = 162613,
},
[185113] = {
["source"] = "Thistleleaf Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 91472,
},
[265759] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[265760] = {
["source"] = "Matron Bryndle",
["event"] = "SPELL_CAST_START",
["npcID"] = 135329,
},
[407055] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Seer Jhatal",
["npcID"] = 199842,
},
[267809] = {
["source"] = "Forgotten Denizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 136297,
},
[384531] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[419343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[366102] = {
["source"] = "Ancient Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181011,
},
[392724] = {
["source"] = "Jadzigeth",
["event"] = "SPELL_CAST_START",
["npcID"] = 188447,
},
[372247] = {
["source"] = "Duskpaw Hidestitcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187941,
},
[415250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[407060] = {
["source"] = "High Seer Jhatal",
["event"] = "SPELL_CAST_START",
["npcID"] = 199842,
},
[394775] = {
["source"] = "Eldoren the Reborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 193234,
},
[122259] = {
["source"] = "Sik'thik Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62632,
},
[425492] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[98710] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[198428] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[319010] = {
["source"] = "Cloudtail",
["event"] = "SPELL_CAST_START",
["npcID"] = 161530,
},
[68506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Agmar",
["npcID"] = 34922,
},
[417303] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[419351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Saboteur",
["npcID"] = 208438,
},
[388635] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Volatile Spark",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194999,
},
[267818] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134058,
},
[257814] = {
["encounterName"] = "Jes Howlis",
["source"] = "Jes Howlis",
["npcID"] = 127484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2102,
},
[378397] = {
["source"] = "Primal Earthshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185647,
},
[306726] = {
["encounterName"] = "Vez'okk the Lightless",
["source"] = "Vez'okk the Lightless",
["encounterID"] = 2373,
["event"] = "SPELL_CAST_START",
["npcID"] = 152874,
},
[431639] = {
["source"] = "Nerubian Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 212715,
},
[204573] = {
["source"] = "Wrathguard Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 97566,
},
[255767] = {
["source"] = "Jungo",
["event"] = "SPELL_CAST_START",
["npcID"] = 127929,
},
[392733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sleepless Fickleshell",
["npcID"] = 191329,
},
[405020] = {
["source"] = "Enraged Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200407,
},
[392734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Pillager",
["npcID"] = 199374,
},
[70043] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[407069] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[192288] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[405022] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[253721] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[296492] = {
["source"] = "Void Globule",
["event"] = "SPELL_CAST_START",
["npcID"] = 152669,
},
[364068] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Sylvanas Windrunner",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 183666,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[417310] = {
["source"] = "Unknown",
["event"] = "SPELL_CAST_START",
["npcID"] = 208380,
},
[370212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[431645] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[392738] = {
["source"] = "Kargpaw the Fetid",
["event"] = "SPELL_CAST_START",
["npcID"] = 186660,
},
[388643] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[359975] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[372262] = {
["source"] = "Qalashi Bonesplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189467,
},
[396836] = {
["source"] = "Colossal Glacier",
["event"] = "SPELL_CAST_START",
["npcID"] = 194798,
},
[62415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jormungar Behemoth",
["npcID"] = 32882,
},
[13878] = {
["source"] = "Ambermill Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 1914,
},
[445984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Jawgrub",
["npcID"] = 217379,
},
[423459] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Flowering Lasher",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 209800,
},
[359979] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[310834] = {
["event"] = "SPELL_CAST_START",
["source"] = "Demented Knife-Twister",
["npcID"] = 159417,
},
[402983] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[314930] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Warden Rhothkozz",
["npcID"] = 158790,
},
[161577] = {
["source"] = "Lernaea Vilescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 85693,
},
[402985] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[355887] = {
["source"] = "Ebon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185313,
},
[158506] = {
["source"] = "Windroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 79398,
},
[394795] = {
["source"] = "Molka The Grinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 193443,
},
[355888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Customs Security",
["npcID"] = 177807,
},
[260894] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[310838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[197414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[165674] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[133934] = {
["source"] = "Shieldwall Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67441,
},
[310839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[170794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doombringer",
["npcID"] = 79503,
},
[400941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dampened Bones",
["npcID"] = 203470,
},
[402989] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[183081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kirin Tor Guardian",
["npcID"] = 104091,
},
[146222] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Blade of the Hundred Steps",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72787,
},
[310842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Occult Shadowmender",
["npcID"] = 159425,
},
[394800] = {
["source"] = "Council Earthcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198500,
},
[423469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mosa Umbramane",
["npcID"] = 210070,
},
[146223] = {
["source"] = "Hellscream Annihilator",
["event"] = "SPELL_CAST_START",
["npcID"] = 72847,
},
[394802] = {
["source"] = "Council Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198502,
},
[269890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ruffian",
["npcID"] = 126720,
},
[405042] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[154415] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[189227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawliac Cinderwitch",
["npcID"] = 95174,
},
[372279] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[46035] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Magister",
["npcID"] = 24685,
},
[9591] = {
["source"] = "Burrowing Leyworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 106630,
},
[394806] = {
["source"] = "Phleep",
["event"] = "SPELL_CAST_START",
["npcID"] = 193210,
},
[396854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[355900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Customs Security",
["npcID"] = 177807,
},
[396856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[327233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[59346] = {
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[378428] = {
["source"] = "Primal Stonekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[407097] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[351808] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Cremator",
["npcID"] = 176577,
},
[396859] = {
["source"] = "Gargantuan Vessel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202835,
},
[366143] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[197422] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Cordana Felsong",
["npcID"] = 95888,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[183088] = {
["source"] = "Mightstone Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 113998,
},
[417338] = {
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 205305,
},
[396861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[170802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doombringer",
["npcID"] = 79503,
},
[269901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfurous Fury",
["npcID"] = 133434,
},
[172850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arachnis",
["npcID"] = 96323,
},
[11895] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 8127,
},
[174898] = {
["source"] = "Acidtooth Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79416,
},
[296523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Seeker",
["npcID"] = 152708,
},
[384577] = {
["encounterName"] = "Gutshot",
["source"] = "Rotfang Hyena",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 194745,
},
[394816] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[374339] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[427581] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[360006] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[59603] = {
["source"] = "Dragonflayer Heartsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 24071,
},
[165685] = {
["source"] = "Taskmaster Gurran",
["event"] = "SPELL_CAST_START",
["npcID"] = 79585,
},
[415296] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[201521] = {
["source"] = "Dormant Wisp",
["event"] = "SPELL_CAST_START",
["npcID"] = 102422,
},
[195378] = {
["source"] = "Rippling Lifefury",
["event"] = "SPELL_CAST_START",
["npcID"] = 95869,
},
[212784] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[362056] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Guardian Sphere",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181447,
},
[407107] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[192307] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[427585] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[380487] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[407108] = {
["source"] = "Earthrender Ku'siva",
["event"] = "SPELL_CAST_START",
["npcID"] = 199840,
},
[327246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[156472] = {
["source"] = "Gorg the Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 76496,
},
[191284] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[260908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ji'arak",
["npcID"] = 132253,
},
[212786] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[199476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[162617] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[415304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[15095] = {
["encounterName"] = "Pyromancer Loregrain",
["source"] = "Pyromancer Loregrain",
["npcID"] = 9024,
["event"] = "SPELL_CAST_START",
["encounterID"] = 231,
},
[456260] = {
["source"] = "You?",
["event"] = "SPELL_CAST_START",
["npcID"] = 226694,
},
[400971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sulfuric Rager",
["npcID"] = 202622,
},
[288345] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[99235] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[382542] = {
["source"] = "Ice Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 190319,
},
[376399] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192188,
},
[394829] = {
["source"] = "Osseous Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 203348,
},
[117665] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Sha of Doubt",
["npcID"] = 56439,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1439,
},
[39127] = {
["source"] = "Sunseeker Chemist",
["event"] = "SPELL_CAST_START",
["npcID"] = 19486,
},
[456263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[400974] = {
["source"] = "Flamebringer Elementalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 203705,
},
[386640] = {
["source"] = "Tarasek Looter",
["event"] = "SPELL_CAST_START",
["npcID"] = 187242,
},
[396879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[415309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Paladin",
["npcID"] = 207579,
},
[370259] = {
["source"] = "Primal Earth Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187322,
},
[99236] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[8376] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[294493] = {
["source"] = "Timeless Causality",
["event"] = "SPELL_CAST_START",
["npcID"] = 186464,
},
[394833] = {
["source"] = "Plainswalker Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187937,
},
[407120] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[400977] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[172860] = {
["source"] = "Grom'kar Battlemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 83025,
},
[396882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[191290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crashin' Thrashin' Mortar",
["npcID"] = 76642,
},
[378453] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[372310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Reaver",
["npcID"] = 200756,
},
[162622] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[384597] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[378454] = {
["source"] = "Primal Stonekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 194291,
},
[372311] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[208697] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Deathglare Tentacle",
["npcID"] = 105322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[427601] = {
["source"] = "Lightspawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 206710,
},
[355930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interrogation Specialist",
["npcID"] = 177816,
},
[407124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[327262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[419411] = {
["source"] = "Ursoc the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206834,
},
[407125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Knight",
["npcID"] = 208165,
},
[450128] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[388696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[57046] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[409174] = {
["source"] = "Incarnation of Entropy",
["event"] = "SPELL_CAST_START",
["npcID"] = 203811,
},
[372315] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[258869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[374364] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[374365] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[409177] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[403034] = {
["source"] = "Fyrakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200832,
},
[44504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[106918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orchard Wasp",
["npcID"] = 56201,
},
[92072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Or'Kalar",
["npcID"] = 2773,
},
[300650] = {
["source"] = "Toxic Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 150169,
},
[382561] = {
["source"] = "Snowhide Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 189654,
},
[32749] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Wizard",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 4300,
},
[386658] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[388706] = {
["source"] = "Invading Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 191235,
},
[382563] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[327274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[329322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulbinder",
["npcID"] = 155831,
},
[366182] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[386660] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[366183] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[106920] = {
["source"] = "Regenerating Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 56763,
},
[421473] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206172,
},
[183108] = {
["source"] = "Larivi",
["event"] = "SPELL_CAST_START",
["npcID"] = 192747,
},
[450142] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[366185] = {
["source"] = "Hired Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 183499,
},
[329326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulbinder",
["npcID"] = 155831,
},
[355947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Defiler",
["npcID"] = 181044,
},
[166727] = {
["source"] = "Fireblade Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 77047,
},
[390760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Grrlgllmesh",
["npcID"] = 186678,
},
[400999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[425573] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[288374] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[366189] = {
["source"] = "Thieveing Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 183500,
},
[366190] = {
["source"] = "Twisted Worldeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 183495,
},
[384620] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[22127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nordrassil Druid",
["npcID"] = 38952,
},
[396907] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Yu'lon",
["npcID"] = 56762,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[267899] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134063,
},
[314998] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[423529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[417386] = {
["source"] = "Valhalas Vargul",
["event"] = "SPELL_CAST_START",
["npcID"] = 207804,
},
[394861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[390766] = {
["source"] = "Blitztusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190907,
},
[384623] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[39131] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17978,
},
[315000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[423531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[170827] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[450153] = {
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_START",
["npcID"] = 216250,
},
[16496] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["npcID"] = 20063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[382578] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[427629] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[76719] = {
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 40021,
},
[366197] = {
["source"] = "Thieveing Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 183500,
},
[403057] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[366199] = {
["source"] = "Twisted Worldeater",
["event"] = "SPELL_CAST_START",
["npcID"] = 183495,
},
[174925] = {
["source"] = "Vined Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 77226,
},
[46043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Warlock",
["npcID"] = 24686,
},
[394869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[423538] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[335485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stygian Behemoth",
["npcID"] = 181064,
},
[394870] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Earthcaller",
["npcID"] = 198501,
},
[87471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Trained Brineshell Snapper",
["npcID"] = 65330,
},
[97198] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Gurubashi Spirit",
["encounterID"] = 1182,
["event"] = "SPELL_CAST_START",
["npcID"] = 52730,
},
[384633] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[140115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[306819] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["npcID"] = 156866,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2331,
},
[407159] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[315011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcrafter",
["npcID"] = 161416,
},
[163665] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Makogg Emberblade",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80805,
},
[312964] = {
["source"] = "Amathet Devoted",
["event"] = "SPELL_CAST_START",
["npcID"] = 152649,
},
[298630] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Shieldbearer",
["npcID"] = 156146,
},
[137045] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["encounterID"] = 1579,
["event"] = "SPELL_CAST_START",
["npcID"] = 68397,
},
[390780] = {
["source"] = "Blitztusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190907,
},
[360064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nascence Attendant",
["npcID"] = 181945,
},
[394876] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[46044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Imp",
["npcID"] = 24815,
},
[209741] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Image of Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 105754,
},
[396925] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197149,
},
[171858] = {
["source"] = "Clarice Chapmann",
["event"] = "SPELL_CAST_START",
["npcID"] = 159210,
},
[39133] = {
["encounterName"] = "Warp Splinter",
["source"] = "Warp Splinter",
["encounterID"] = 1929,
["event"] = "SPELL_CAST_START",
["npcID"] = 17977,
},
[405117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[401022] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[144214] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[382593] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[171859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Earthbinder",
["npcID"] = 82944,
},
[370307] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[421501] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[174931] = {
["source"] = "Bloom Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81575,
},
[417406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[272016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imprisoned Cabalist",
["npcID"] = 154014,
},
[17137] = {
["source"] = "Master Apothecary Lydon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48020,
},
[409216] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[165717] = {
["source"] = "Alya",
["event"] = "SPELL_CAST_START",
["npcID"] = 82002,
},
[398978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Caster",
["npcID"] = 200824,
},
[409217] = {
["source"] = "Sundered Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 198872,
},
[388741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Researcher",
["npcID"] = 203013,
},
[386694] = {
["source"] = "Stormsurge Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 194897,
},
[398981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[163671] = {
["source"] = "Nar'thalas Nightwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88782,
},
[355979] = {
["source"] = "Ebon Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185313,
},
[174934] = {
["source"] = "Bloom Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81575,
},
[384648] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[360076] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[388745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Icy Blue Crab",
["npcID"] = 197862,
},
[392841] = {
["source"] = "Degmakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194251,
},
[337552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[265881] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[398985] = {
["event"] = "SPELL_CAST_START",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[116] = {
["npcID"] = 188027,
},
[388747] = {
["source"] = "Boggy Bullfrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 193699,
},
[174936] = {
["source"] = "Voice of Iyu",
["event"] = "SPELL_CAST_START",
["npcID"] = 81634,
},
[257870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Buccaneer",
["npcID"] = 130011,
},
[394891] = {
["source"] = "Braekkas",
["event"] = "SPELL_CAST_START",
["npcID"] = 196855,
},
[317077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harpy Snatcher",
["npcID"] = 152571,
},
[331412] = {
["source"] = "Deepscar",
["event"] = "SPELL_CAST_START",
["npcID"] = 162797,
},
[46046] = {
["source"] = "Sunblade Physician",
["event"] = "SPELL_CAST_START",
["npcID"] = 24687,
},
[394893] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[15801] = {
["source"] = "Smolderthorn Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 9269,
},
[319127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goldenback Grazer",
["npcID"] = 169123,
},
[452231] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[372369] = {
["source"] = "Shadepaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 186490,
},
[142174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Small Illusionary Guardian",
["npcID"] = 71079,
},
[394895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phenran",
["npcID"] = 193688,
},
[366227] = {
["source"] = "Foul Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 183496,
},
[172891] = {
["source"] = "Commander Gar",
["event"] = "SPELL_CAST_START",
["npcID"] = 85571,
},
[256849] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409231] = {
["source"] = "Colossal Draconic Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 203826,
},
[59357] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["encounterID"] = 1971,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[405137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[456331] = {
["source"] = "Flickerflame Candlecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 219619,
},
[450188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[337562] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[227158] = {
["source"] = "Darkspear Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 113034,
},
[256851] = {
["source"] = "Defiled Worshiper",
["event"] = "SPELL_CAST_START",
["npcID"] = 126090,
},
[392854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[368282] = {
["isChanneled"] = true,
["source"] = "Corrupted Architect",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 183953,
},
[394903] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[388760] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[106421] = {
["source"] = "Shado-Pan Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 59741,
},
[427668] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[274087] = {
["source"] = "Zekhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 153789,
},
[191325] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99200,
},
[169824] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 84984,
},
[85944] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[205660] = {
["source"] = "Observant Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 107449,
},
[382620] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[450196] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Blind-Hound",
["npcID"] = 218213,
},
[321188] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Geomancer",
["npcID"] = 150238,
},
[169825] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[374430] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[368287] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[156515] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[356001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Overseer",
["npcID"] = 177808,
},
[308903] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[193375] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[11642] = {
["source"] = "Murta Grimgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 7608,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Summoner",
["npcID"] = 4463,
},
[403101] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[11962] = {
["source"] = "Oro Eyegouge",
["event"] = "SPELL_CAST_START",
["npcID"] = 7606,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2011,
},
[272046] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Sharkbait",
["npcID"] = 126841,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[407198] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[82362] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 50284,
},
[198496] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[407199] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[386722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Striker",
["npcID"] = 199800,
},
[194401] = {
["source"] = "Defiled Grovewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 113646,
},
[407200] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[69564] = {
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[3263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hand of Ravenclaw",
["npcID"] = 1870,
},
[452252] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[343722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huwerath",
["npcID"] = 162965,
},
[388773] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["npcID"] = 186738,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2584,
},
[317102] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[302768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spawn of Wekemara",
["npcID"] = 155702,
},
[394917] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[392870] = {
["source"] = "Uurhilt",
["event"] = "SPELL_CAST_START",
["npcID"] = 194760,
},
[411300] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[306865] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[407205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[120759] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[258908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethrak Invader",
["npcID"] = 130411,
},
[372394] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[278198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[41186] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[407207] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[162665] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 75749,
},
[278200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[59616] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[372397] = {
["source"] = "Brackenhide Scrapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186359,
},
[120760] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61634,
},
[152427] = {
["source"] = "Magma Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 75211,
},
[337587] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[142189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Large Illusionary Amber-Weaver",
["npcID"] = 71068,
},
[384686] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[407212] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[204646] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[256864] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[409261] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[396975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firava the Rekindler",
["npcID"] = 195915,
},
[162668] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 75749,
},
[147310] = {
["source"] = "Brilliant Windfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 72762,
},
[41187] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[165740] = {
["source"] = "Bonesaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 82010,
},
[399024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Brute",
["npcID"] = 200486,
},
[17140] = {
["source"] = "Ambermill Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 1888,
},
[399025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Revenant",
["npcID"] = 200720,
},
[417455] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[59617] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[165741] = {
["source"] = "Challe Tebrilinde",
["event"] = "SPELL_CAST_START",
["npcID"] = 82005,
},
[142192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[96189] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Sun Marksman",
["npcID"] = 24938,
},
[415409] = {
["source"] = "Rupturing Firevine",
["event"] = "SPELL_CAST_START",
["npcID"] = 207699,
},
[392884] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[116155] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[419506] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[421554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[267973] = {
["source"] = "Temple Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 134137,
},
[351931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torment Golem",
["npcID"] = 176598,
},
[306881] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Void Hunter",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 157366,
},
[270022] = {
["source"] = "Silverback Thumpknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 130543,
},
[452272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[169839] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[366267] = {
["source"] = "Volatile Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185008,
},
[155505] = {
["source"] = "Black Iron Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 76101,
},
[386745] = {
["source"] = "Prozela Galeshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 193669,
},
[409271] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[258917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[169840] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[399033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weyrn Spellslinger",
["npcID"] = 200736,
},
[59362] = {
["source"] = "Anub'ar Webspinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[419511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[315076] = {
["source"] = "Stitchyard Surgeon",
["event"] = "SPELL_CAST_START",
["npcID"] = 159679,
},
[423607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[135029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[52451] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2004,
},
[169841] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[30707] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[197486] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[366272] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[267981] = {
["source"] = "Shrine Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 134139,
},
[126908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Fist",
["npcID"] = 58927,
},
[11899] = {
["source"] = "Sandfury Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[419516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chronaxie",
["npcID"] = 206070,
},
[169843] = {
["source"] = "Putrid Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84957,
},
[278222] = {
["source"] = "Grimscowl the Harebrained",
["event"] = "SPELL_CAST_START",
["npcID"] = 141059,
},
[427708] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[388801] = {
["source"] = "Risen Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 195855,
},
[6270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muyoh",
["npcID"] = 3678,
},
[243563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusty Sean",
["npcID"] = 139647,
},
[171892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Longclaw",
["npcID"] = 85900,
},
[411328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[366278] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[388804] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[362184] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[423617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[257899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Ravager",
["npcID"] = 130012,
},
[218992] = {
["source"] = "Risen Legionnaire",
["event"] = "SPELL_CAST_START",
["npcID"] = 108830,
},
[407236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[304849] = {
["source"] = "Frenzied Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 152164,
},
[165751] = {
["source"] = "Etubrute",
["event"] = "SPELL_CAST_START",
["npcID"] = 82187,
},
[419524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Loose Time",
["npcID"] = 209170,
},
[169847] = {
["source"] = "Infested Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 84989,
},
[252781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[116160] = {
["source"] = "Glittering Amberfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 54559,
},
[34791] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[413385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[366287] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[417481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeline Marauder",
["npcID"] = 199748,
},
[364240] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[382670] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[360145] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[364241] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181546,
},
[267997] = {
["encounterName"] = "The Primal Council",
["source"] = "Vilefiend",
["npcID"] = 135816,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[55269] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ocular",
["npcID"] = 29747,
},
[415436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[257904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ludwig Von Tortollan",
["npcID"] = 129699,
},
[321240] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[315097] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["npcID"] = 158328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[415437] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Leech",
["npcID"] = 206066,
},
[131968] = {
["source"] = "Sik'thik Battle-Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 67093,
},
[388817] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[116162] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[397010] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[256882] = {
["source"] = "Monzumi",
["event"] = "SPELL_CAST_START",
["npcID"] = 129552,
},
[272098] = {
["source"] = "Blacktooth Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 131307,
},
[397011] = {
["source"] = "Qalashi Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 197147,
},
[163710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shimmerwing Moth",
["npcID"] = 79910,
},
[205689] = {
["source"] = "Zanj'ir Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 155618,
},
[190331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[99781] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferno Hawk",
["npcID"] = 53648,
},
[401108] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignara",
["npcID"] = 202791,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[9532] = {
["source"] = "Muckgill",
["event"] = "SPELL_CAST_START",
["npcID"] = 47759,
},
[388822] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[399061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[401109] = {
["source"] = "Crimson Oldblood",
["event"] = "SPELL_CAST_START",
["npcID"] = 201054,
},
[372441] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[399062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 200858,
},
[257908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Officer",
["npcID"] = 127106,
},
[419540] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[204667] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[131972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Battle-Mender",
["npcID"] = 67093,
},
[115652] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[243575] = {
["source"] = "Jambani Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 130221,
},
[399065] = {
["source"] = "Irontide Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 200858,
},
[59366] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["npcID"] = 28731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1971,
},
[121284] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[284393] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Sister Katherine",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146251,
},
[392924] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[386781] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[409307] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[258935] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Priest",
["npcID"] = 130028,
},
[399069] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[360162] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[11836] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["encounterID"] = 594,
["event"] = "SPELL_CAST_START",
["npcID"] = 7273,
},
[372449] = {
["source"] = "Stormfang Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 187931,
},
[145286] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71405,
},
[106439] = {
["source"] = "Fragrant Lotus",
["event"] = "SPELL_CAST_START",
["npcID"] = 56472,
},
[394976] = {
["isChanneled"] = true,
["source"] = "Void Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198757,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[394977] = {
["source"] = "Frigidpelt Den Mother",
["event"] = "SPELL_CAST_START",
["npcID"] = 193698,
},
[372452] = {
["source"] = "Snowstorm Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 194158,
},
[399073] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[403169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[409313] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[60903] = {
["source"] = "Indigos",
["event"] = "SPELL_CAST_START",
["npcID"] = 47010,
},
[288497] = {
["source"] = "Huezeki Windsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 205497,
},
[311023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Willing Sacrifice",
["npcID"] = 162647,
},
[372456] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[85963] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[421603] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[382696] = {
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184131,
},
[167815] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[399079] = {
["source"] = "Farscale Tidelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 200488,
},
[40938] = {
["source"] = "Illidari Fearbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 22954,
},
[200580] = {
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_START",
["npcID"] = 95779,
},
[372460] = {
["source"] = "Bakra the Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 186517,
},
[85964] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 46028,
},
[15228] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[268027] = {
["source"] = "Living Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 134144,
},
[360176] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Point Defense Drone",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 181856,
},
[341747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Soul",
["npcID"] = 174158,
},
[425706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Astromancer's Guard",
["npcID"] = 208729,
},
[382704] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[386800] = {
["source"] = "Galzuda",
["event"] = "SPELL_CAST_START",
["npcID"] = 193330,
},
[405230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[40683] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[417517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ankura Bloodhewer",
["npcID"] = 207589,
},
[386801] = {
["source"] = "Cragsworn Stoneshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195838,
},
[390897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scalepiercer",
["npcID"] = 186632,
},
[135056] = {
["source"] = "Darkmoon Rabbit",
["event"] = "SPELL_CAST_START",
["npcID"] = 58336,
},
[258945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fangcaller Sraka",
["npcID"] = 130466,
},
[427758] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[78799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 59361,
},
[382708] = {
["source"] = "Qalashi Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193293,
},
[128969] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[397043] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[423664] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[172941] = {
["source"] = "Sor the Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 80691,
},
[360185] = {
["source"] = "Lured Smasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 183580,
},
[413427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pendule",
["npcID"] = 206074,
},
[407285] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Skullcrusher",
["npcID"] = 202258,
},
[311041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[263943] = {
["source"] = "Heartsbane Runeweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 131677,
},
[372474] = {
["source"] = "Shikaar Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 180393,
},
[384761] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[388857] = {
["source"] = "Rampaging Forest Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 194741,
},
[83920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skymane Bonobo",
["npcID"] = 43417,
},
[78801] = {
["encounterName"] = "Hydromancer Velratha",
["source"] = "Hydromancer Velratha",
["encounterID"] = 593,
["event"] = "SPELL_CAST_START",
["npcID"] = 7795,
},
[311045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Initiate",
["npcID"] = 160182,
},
[397051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cyclas",
["npcID"] = 199029,
},
[308998] = {
["source"] = "Fallen Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 158437,
},
[311046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Seer",
["npcID"] = 159219,
},
[392957] = {
["source"] = "Azure Vorquin",
["event"] = "SPELL_CAST_START",
["npcID"] = 190216,
},
[388862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[407292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[388863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Manafiend",
["npcID"] = 196045,
},
[150421] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[427771] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[390912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Lasher",
["npcID"] = 197219,
},
[106447] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[413438] = {
["source"] = "Void Lord Aurvizk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200865,
},
[178067] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[179091] = {
["source"] = "Nar'thalas Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 88783,
},
[311052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[296718] = {
["source"] = "Faceless Willbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 152987,
},
[374533] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[151447] = {
["source"] = "Bloodmaul Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84978,
},
[411393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[372486] = {
["source"] = "Waste Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 187497,
},
[390916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[411394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[150424] = {
["source"] = "Amani Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215675,
},
[169878] = {
["encounterName"] = "Yalnu",
["source"] = "Vicious Mandragora",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84399,
},
[300818] = {
["source"] = "Gnome-Eating Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 154663,
},
[263959] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[421636] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[131022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[411399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bogg",
["npcID"] = 201747,
},
[409352] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Dreadsquall",
["npcID"] = 202262,
},
[172952] = {
["source"] = "Siegemaster Olugar",
["event"] = "SPELL_CAST_START",
["npcID"] = 83026,
},
[352016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Sentinel",
["npcID"] = 185027,
},
[372494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshackler Rynea",
["npcID"] = 189391,
},
[115153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Husshun",
["npcID"] = 54925,
},
[372495] = {
["source"] = "Ensnaring Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 191328,
},
[456453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[390926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[15869] = {
["source"] = "Drakkari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27555,
},
[411404] = {
["source"] = "Shade of Skytalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 204430,
},
[142238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Large Illusionary Mystic",
["npcID"] = 71069,
},
[306971] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[116178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sudsy Brew Alemental",
["npcID"] = 59522,
},
[151454] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[411407] = {
["source"] = "Time-Lost Waveshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205363,
},
[388882] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[69080] = {
["source"] = "Soulguard Bonecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 36564,
},
[79831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 56725,
},
[44271] = {
["source"] = "Garaxxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[154527] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[413458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Osthilde",
["npcID"] = 200867,
},
[309023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shith'rus the Manipulator",
["npcID"] = 154727,
},
[143265] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[395029] = {
["isChanneled"] = true,
["source"] = "Flashfrost Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 195119,
},
[274212] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[390934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[274213] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[166815] = {
["source"] = "Warsong Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75745,
},
[186269] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[401175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebyssian",
["npcID"] = 201707,
},
[272167] = {
["encounterName"] = "The Primal Council",
["source"] = "Bilescourge",
["npcID"] = 136404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[319266] = {
["source"] = "Steelskin Vanguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 157669,
},
[390938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggravated Skitterfly",
["npcID"] = 197406,
},
[282408] = {
["encounterName"] = "Mekkatorque",
["source"] = "Spark Bot",
["encounterID"] = 2276,
["event"] = "SPELL_CAST_START",
["npcID"] = 144942,
},
[176032] = {
["source"] = "Grom'kar Cinderseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 88163,
},
[395035] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[97239] = {
["source"] = "Gurubashi Shadow Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 52327,
},
[382749] = {
["source"] = "Bossy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 190998,
},
[300840] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[266029] = {
["source"] = "Windcaller Ula'jan",
["event"] = "SPELL_CAST_START",
["npcID"] = 133140,
},
[276268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Despoiler",
["npcID"] = 156568,
},
[31865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seductress",
["npcID"] = 17399,
},
[270126] = {
["source"] = "Necropolis Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 135253,
},
[362275] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[360228] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[386849] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[405279] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[374563] = {
["source"] = "Dazzling Dragonfly",
["event"] = "SPELL_CAST_START",
["npcID"] = 190362,
},
[360229] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[306988] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[311084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maddened Conscript",
["npcID"] = 159305,
},
[222110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Pounder",
["npcID"] = 111405,
},
[366374] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[327467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodian Thonar",
["npcID"] = 185011,
},
[413473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Deviation",
["npcID"] = 206063,
},
[147368] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[266036] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[374567] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[272180] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[202658] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Malignant Defiler",
["npcID"] = 102584,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[407332] = {
["source"] = "Agitated Dustmoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 202316,
},
[196515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Ashioi",
["npcID"] = 100250,
},
[364330] = {
["source"] = "Acquisitions Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184737,
},
[374569] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[384808] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["npcID"] = 186339,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2581,
},
[160680] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[366379] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[294708] = {
["source"] = "Telur",
["event"] = "SPELL_CAST_START",
["npcID"] = 151909,
},
[274231] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 154106,
},
[300852] = {
["source"] = "Inhuman Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 202147,
},
[401192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quicksmack Magk",
["npcID"] = 204651,
},
[160681] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79548,
},
[117720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Incinerator",
["npcID"] = 54703,
},
[401193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll's Drogbar",
["npcID"] = 203041,
},
[142252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten King",
["npcID"] = 67081,
},
[409385] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["encounterID"] = 2687,
["event"] = "SPELL_CAST_START",
["npcID"] = 201934,
},
[411433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Violetwing Stagbeetle",
["npcID"] = 205384,
},
[52721] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2005,
},
[203685] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 99676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[397100] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[22907] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["npcID"] = 17826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1947,
},
[319286] = {
["source"] = "Manifestation of Rage",
["event"] = "SPELL_CAST_START",
["npcID"] = 164084,
},
[218020] = {
["source"] = "Agitated Stonewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 108856,
},
[413483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apiazhus",
["npcID"] = 200981,
},
[372529] = {
["source"] = "Shadepaw Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 192748,
},
[200615] = {
["source"] = "Eredar Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 102726,
},
[411437] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[290621] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[191401] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[411439] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[413487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temporal Fusion",
["npcID"] = 206068,
},
[126937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Ambercaller",
["npcID"] = 64917,
},
[319292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[419632] = {
["isChanneled"] = true,
["source"] = "Pendule",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208945,
},
[52722] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2005,
},
[197546] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[309055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Stoneshaper",
["npcID"] = 155957,
},
[302912] = {
["source"] = "Zanj'ir Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153962,
},
[397109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Air Revenant",
["npcID"] = 203743,
},
[384823] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[397110] = {
["source"] = "Entropic Diruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 201598,
},
[270150] = {
["source"] = "Feathered Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 132409,
},
[264007] = {
["source"] = "Vol'jamba",
["event"] = "SPELL_CAST_START",
["npcID"] = 131241,
},
[372538] = {
["source"] = "Lava Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 189470,
},
[374586] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[409398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Guardian",
["npcID"] = 203831,
},
[397112] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Proto-Dragon",
["npcID"] = 189798,
},
[335680] = {
["source"] = "Mawsworn Converter",
["event"] = "SPELL_CAST_START",
["npcID"] = 181782,
},
[42740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[401209] = {
["source"] = "Deepbed Longwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 203917,
},
[388923] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[309061] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[88032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[44276] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["npcID"] = 24556,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1895,
},
[113629] = {
["source"] = "Boneweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 59193,
},
[407354] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[388925] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[309063] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[401212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[153524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Bat",
["npcID"] = 75459,
},
[382783] = {
["source"] = "Obsidian Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202483,
},
[39413] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[401214] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Honeypelt",
["npcID"] = 202451,
},
[153525] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[362308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioned Constructor",
["npcID"] = 181870,
},
[115678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Thief",
["npcID"] = 54930,
},
[407359] = {
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 202303,
},
[401216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nevroll",
["npcID"] = 203039,
},
[307020] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[382787] = {
["source"] = "Disease Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187315,
},
[376644] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[390979] = {
["source"] = "Lurgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 201540,
},
[168885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[266067] = {
["source"] = "Loa-Speaker Kihara",
["event"] = "SPELL_CAST_START",
["npcID"] = 132979,
},
[114143] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Chief Gukgut",
["npcID"] = 54868,
},
[343883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[304976] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["npcID"] = 156161,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2371,
},
[405316] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[390982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Huntmaster",
["npcID"] = 185353,
},
[147385] = {
["source"] = "Ironfur Great Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 72844,
},
[172982] = {
["source"] = "Siegemaster Olugar",
["event"] = "SPELL_CAST_START",
["npcID"] = 83026,
},
[372553] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalbound Water Spirit",
["npcID"] = 190739,
},
[335694] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Endbringer",
["npcID"] = 157810,
},
[390984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Earthshaper",
["npcID"] = 190996,
},
[425796] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[362316] = {
["source"] = "Miru Jasyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 183448,
},
[199604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sledge",
["npcID"] = 92990,
},
[403272] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[382795] = {
["isChanneled"] = true,
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193944,
},
[360270] = {
["source"] = "Oracle Zoketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 181625,
},
[140220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Colossus",
["npcID"] = 69405,
},
[372557] = {
["source"] = "Darktooth Howler",
["event"] = "SPELL_CAST_START",
["npcID"] = 195273,
},
[390987] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185168,
},
[390988] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[45046] = {
["source"] = "Eredar Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 25033,
},
[197558] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[388941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[200630] = {
["source"] = "Mindshattered Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 95769,
},
[388942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[276316] = {
["source"] = "Risen Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 145120,
},
[419659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[372561] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[39671] = {
["isChanneled"] = true,
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22853,
},
[311129] = {
["source"] = "Overwhelming Confusion",
["event"] = "SPELL_CAST_START",
["npcID"] = 161829,
},
[388944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hulking Wave",
["npcID"] = 187793,
},
[114658] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[427852] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[382802] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[25085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Syndicate Conjuror",
["npcID"] = 2590,
},
[137152] = {
["source"] = "Hidden Fog",
["event"] = "SPELL_CAST_START",
["npcID"] = 69375,
},
[311132] = {
["source"] = "Ha-Li",
["event"] = "SPELL_CAST_START",
["npcID"] = 157153,
},
[372565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[456523] = {
["source"] = "Clump O' Wax",
["event"] = "SPELL_CAST_START",
["npcID"] = 226809,
},
[372566] = {
["source"] = "Qalashi Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 189227,
},
[317277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magni Bronzebeard",
["npcID"] = 154533,
},
[302943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Trapper",
["npcID"] = 153962,
},
[388949] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["encounterID"] = 2614,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196679,
},
[325469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decrepit Bilespawn",
["npcID"] = 166928,
},
[401236] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[405332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[417619] = {
["isChanneled"] = true,
["source"] = "Gill'dan",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204808,
},
[427858] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[87527] = {
["source"] = "Dustbelcher Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 46694,
},
[388952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echoed Lurker",
["npcID"] = 202636,
},
[360284] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[254901] = {
["source"] = "Atal'Shadra Bloodletter",
["event"] = "SPELL_CAST_START",
["npcID"] = 122872,
},
[395097] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[210875] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[434005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Alchemist",
["npcID"] = 213995,
},
[59638] = {
["encounterName"] = "Terros",
["source"] = "Mirror Image",
["npcID"] = 31216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[391003] = {
["source"] = "High Shaman Rotknuckle",
["event"] = "SPELL_CAST_START",
["npcID"] = 197356,
},
[200637] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[427863] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[413529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[374622] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[425816] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["npcID"] = 211904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[37113] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[374623] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[319334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jugnug",
["npcID"] = 153583,
},
[388958] = {
["isChanneled"] = true,
["source"] = "Spellbound Scepter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196671,
},
[391006] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[196543] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[407389] = {
["source"] = "Brimstone Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 202272,
},
[409437] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[12160] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Druid",
["npcID"] = 68486,
},
[32637] = {
["source"] = "Doomwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 167749,
},
[147398] = {
["source"] = "Fallen Pool Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73342,
},
[124389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slitherscale Ripper",
["npcID"] = 58212,
},
[401248] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[193473] = {
["isChanneled"] = true,
["source"] = "Void Tendril",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192337,
},
[388962] = {
["source"] = "Matriarch Remalla",
["event"] = "SPELL_CAST_START",
["npcID"] = 193246,
},
[155590] = {
["source"] = "Black Iron Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 77036,
},
[264050] = {
["source"] = "Thistle Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 135474,
},
[78827] = {
["isChanneled"] = true,
["source"] = "Blood Guard Gro'tash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67927,
},
[317292] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 162480,
},
[360295] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[18431] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["npcID"] = 10184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1084,
},
[106984] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56747,
},
[256955] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[200642] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[153544] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[448351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[198595] = {
["source"] = "Valarjar Thundercaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 95842,
},
[39674] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[409445] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[305010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Ethendriss",
["npcID"] = 153934,
},
[374634] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189478,
},
[360300] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[386921] = {
["encounterName"] = "Granyth",
["source"] = "Dragonkiller Lance",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 194367,
},
[376683] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[378731] = {
["source"] = "Frigellus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189217,
},
[274296] = {
["source"] = "Rotting Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 139709,
},
[127463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[413544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timestream Anomaly",
["npcID"] = 199749,
},
[391019] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[401258] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[395115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smogswog the Firebreather",
["npcID"] = 193120,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunblade Keeper",
["npcID"] = 24762,
},
[360304] = {
["encounterName"] = "Lords of Dread",
["source"] = "Kin'tessa",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181399,
},
[256959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[388974] = {
["isChanneled"] = true,
["source"] = "Matriarch Remalla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193246,
},
[403309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expulsion Drone",
["npcID"] = 202592,
},
[16000] = {
["source"] = "Celebrian Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 130273,
},
[79854] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[388976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Ravager",
["npcID"] = 196671,
},
[195528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Storm",
["npcID"] = 95920,
},
[140239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Colossus",
["npcID"] = 69405,
},
[41467] = {
["encounterName"] = "The Illidari Council",
["source"] = "Gathios the Shatterer",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22949,
},
[207815] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[167884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terokk",
["npcID"] = 83554,
},
[411503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[391026] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[409456] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[405361] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[382836] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[313213] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[36604] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[37628] = {
["source"] = "Yarrog Baneshadow",
["event"] = "SPELL_CAST_START",
["npcID"] = 3183,
},
[117227] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[372600] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["npcID"] = 184124,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2557,
},
[102381] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["encounterID"] = 1271,
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[127466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shao-Tien Antiquator",
["npcID"] = 58928,
},
[79856] = {
["source"] = "Ambermill Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 1914,
},
[405366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[302979] = {
["source"] = "The Scrap King",
["event"] = "SPELL_CAST_START",
["npcID"] = 151625,
},
[290694] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Spawn of Laminaria",
["npcID"] = 148633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[138196] = {
["source"] = "Lightning Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 69834,
},
[126955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[427894] = {
["source"] = "Forge Master Damian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212831,
},
[43516] = {
["source"] = "Dragonflayer Prisoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 24255,
},
[51963] = {
["encounterName"] = "Terros",
["source"] = "Ebon Gargoyle",
["npcID"] = 27829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[79857] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[360320] = {
["source"] = "Chrysalis Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 181942,
},
[413562] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["npcID"] = 204337,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[421754] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Moltenbinder",
["npcID"] = 206477,
},
[407420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Runestone",
["npcID"] = 204001,
},
[311176] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[157652] = {
["source"] = "Auchenai Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 77694,
},
[11969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magistrate Burnside",
["npcID"] = 47790,
},
[79858] = {
["source"] = "Dalaran Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2358,
},
[403326] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[376706] = {
["source"] = "Nokhud Stormcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[329608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarved Colossus",
["npcID"] = 155828,
},
[405375] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[329609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarved Colossus",
["npcID"] = 155828,
},
[266129] = {
["source"] = "Gahz'ragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 120850,
},
[268177] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[384899] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[111599] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[256970] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[409473] = {
["source"] = "Voracious Magma Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 203825,
},
[138201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Lord",
["npcID"] = 69821,
},
[147416] = {
["source"] = "Ordon Candlekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72875,
},
[372615] = {
["source"] = "Tamed Phoenix",
["event"] = "SPELL_CAST_START",
["npcID"] = 189247,
},
[200658] = {
["source"] = "Dreadsoul Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 95771,
},
[298897] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 150712,
},
[196563] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[111600] = {
["encounterName"] = "Raigonn",
["source"] = "Krik'thik Swarm Bringer",
["npcID"] = 56930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[423811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[409477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[113136] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[268184] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[391050] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[360334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Attendant",
["npcID"] = 183983,
},
[378764] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[415624] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["npcID"] = 200926,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2709,
},
[186327] = {
["source"] = "Helarjar Mistcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 105748,
},
[268187] = {
["source"] = "Windspeaker Heldis",
["event"] = "SPELL_CAST_START",
["npcID"] = 136214,
},
[163802] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[395148] = {
["source"] = "Mikrin of the Raging Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 193173,
},
[372623] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[286618] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[201686] = {
["source"] = "Anguished Spectre",
["event"] = "SPELL_CAST_START",
["npcID"] = 108815,
},
[76790] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Invader",
["npcID"] = 39616,
},
[417675] = {
["source"] = "Meantron 7000",
["event"] = "SPELL_CAST_START",
["npcID"] = 206131,
},
[444296] = {
["source"] = "Arathi Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 206696,
},
[255952] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[391055] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Chardryn",
["npcID"] = 210912,
},
[360340] = {
["source"] = "Accelerated Helicid",
["event"] = "SPELL_CAST_START",
["npcID"] = 178831,
},
[405391] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[376723] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 2026,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[362390] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[266146] = {
["source"] = "Disciple of Zul",
["event"] = "SPELL_CAST_START",
["npcID"] = 139543,
},
[376725] = {
["encounterName"] = "Balakar Khan",
["source"] = "Nokhud Stormcaster",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 190294,
},
[170973] = {
["source"] = "Dew Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 81553,
},
[256979] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Eudora",
["npcID"] = 126848,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[376727] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[264101] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[448399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[409492] = {
["source"] = "Afflicted Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 204773,
},
[270246] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Pyremancer",
["npcID"] = 176576,
},
[413590] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[256981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frightened Brutosaur",
["npcID"] = 129668,
},
[33793] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Nazan",
["npcID"] = 17307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1892,
},
[395161] = {
["source"] = "Treasure-Mad Trambladd",
["event"] = "SPELL_CAST_START",
["npcID"] = 193146,
},
[429973] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[436117] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[183263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormling Spitter",
["npcID"] = 155219,
},
[113141] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 59080,
},
[364447] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 184522,
},
[417689] = {
["source"] = "Meantron Prototype",
["event"] = "SPELL_CAST_START",
["npcID"] = 206132,
},
[164834] = {
["source"] = "Everbloom Naturalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81819,
},
[421785] = {
["isChanneled"] = true,
["source"] = "Watchful Gladehind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[368544] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 184597,
},
[417691] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[111606] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["npcID"] = 58633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[11970] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[395167] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[374691] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[425885] = {
["encounterName"] = "Smolderon",
["source"] = "Seeking Inferno",
["npcID"] = 210203,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2824,
},
[193505] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[382883] = {
["source"] = "Vile Rothexer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187224,
},
[25602] = {
["source"] = "Maelgwyn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81995,
},
[432030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Toxic Swarmite",
["npcID"] = 222721,
},
[129013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windward Matriarch",
["npcID"] = 58213,
},
[113143] = {
["encounterName"] = "Darkmaster Gandling",
["source"] = "Darkmaster Gandling",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59080,
},
[268211] = {
["source"] = "Runecarver Sorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 134150,
},
[368551] = {
["source"] = "Sylvanas Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 184605,
},
[401316] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[315311] = {
["encounterName"] = "The Hivemind",
["source"] = "Aqir Drone",
["npcID"] = 157255,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[395174] = {
["source"] = "Gethdazr",
["event"] = "SPELL_CAST_START",
["npcID"] = 196165,
},
[405413] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[268214] = {
["source"] = "Runecarver Sorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 134150,
},
[79868] = {
["source"] = "Relios the Relic Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 45734,
},
[417701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Peeved",
["npcID"] = 205428,
},
[274359] = {
["source"] = "Lord Stormsong",
["event"] = "SPELL_CAST_START",
["npcID"] = 139737,
},
[391081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[270264] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[395177] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[413607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[432037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparklit Buttonmasher",
["npcID"] = 212596,
},
[164841] = {
["encounterName"] = "Teron'gor",
["source"] = "Teron'gor",
["encounterID"] = 1714,
["event"] = "SPELL_CAST_START",
["npcID"] = 77734,
},
[288696] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[15234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Enchantress",
["npcID"] = 17961,
},
[61184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krasari Huntress",
["npcID"] = 58070,
},
[116217] = {
["source"] = "Mist Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 56304,
},
[125432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sra'thik Pool-Tender",
["npcID"] = 63570,
},
[68607] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Hummel",
["npcID"] = 36296,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[203750] = {
["source"] = "Arcane Chronomaton",
["event"] = "SPELL_CAST_START",
["npcID"] = 111622,
},
[401325] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[386991] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191395,
},
[111610] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[88061] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[386992] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 192636,
},
[178154] = {
["encounterName"] = "Oshir",
["source"] = "Rylak Skyterror",
["encounterID"] = 1750,
["event"] = "SPELL_CAST_START",
["npcID"] = 89011,
},
[374706] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[376754] = {
["isChanneled"] = true,
["source"] = "Qalashi Skullhauler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 191983,
},
[395184] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[150510] = {
["source"] = "Razorfen Kraulshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 74550,
},
[151534] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 4421,
},
[168940] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[202728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[323515] = {
["encounterName"] = "Gorechop",
["source"] = "Gorechop",
["npcID"] = 162317,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2365,
},
[218087] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "OOX-Avenger/MG",
["npcID"] = 151296,
},
[44547] = {
["source"] = "Sister of Torment",
["event"] = "SPELL_CAST_START",
["npcID"] = 24697,
},
[448429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Mystic",
["npcID"] = 203878,
},
[172013] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sethekk Oracle",
["npcID"] = 86123,
},
[370615] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["npcID"] = 44704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[458669] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[266181] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[69633] = {
["source"] = "Spectral Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 36666,
},
[79872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Iceheart",
["npcID"] = 48880,
},
[413621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[405431] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[168944] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[391098] = {
["source"] = "Galzuda",
["event"] = "SPELL_CAST_START",
["npcID"] = 193330,
},
[360382] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mawsworn Converter",
["npcID"] = 181782,
},
[405433] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[268234] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Bile Oozeling",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 136541,
},
[401338] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[354240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Aegis",
["npcID"] = 185028,
},
[393148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maneet",
["npcID"] = 188704,
},
[30851] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[374719] = {
["source"] = "Stonejaw Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 188128,
},
[387006] = {
["source"] = "Rotting Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 186361,
},
[389054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Forager",
["npcID"] = 196694,
},
[317383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilboar Warrior",
["npcID"] = 150237,
},
[401341] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[405437] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[199663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Councilor",
["npcID"] = 98370,
},
[401342] = {
["source"] = "Magmaclaw Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203934,
},
[65026] = {
["encounterName"] = "Mimiron",
["source"] = "Leviathan Mk II",
["npcID"] = 34071,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 2011,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[147446] = {
["source"] = "Foreboding Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 73162,
},
[378818] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[274383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermin Trapper",
["npcID"] = 130404,
},
[12675] = {
["encounterName"] = "Warder Stilgiss",
["source"] = "Warder Stilgiss",
["npcID"] = 9041,
["event"] = "SPELL_CAST_START",
["encounterID"] = 233,
},
[12739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Darkcaster",
["npcID"] = 30319,
},
[59395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 200529,
},
[288719] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[198641] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Kur'talos Ravencrest",
["npcID"] = 98965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[207856] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Helarjar Champion",
["npcID"] = 96754,
},
[200689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Soulmaster",
["npcID"] = 102724,
},
[411585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jalgon Stoutburn",
["npcID"] = 204426,
},
[166902] = {
["source"] = "Blademaster Bralok",
["event"] = "SPELL_CAST_START",
["npcID"] = 76981,
},
[226287] = {
["source"] = "Vileshard Chunk",
["event"] = "SPELL_CAST_START",
["npcID"] = 101438,
},
[188404] = {
["encounterName"] = "Hymdall",
["source"] = "Storm Drake",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 97788,
},
[214001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Lancer",
["npcID"] = 102095,
},
[462782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Defense Turret",
["npcID"] = 229678,
},
[151545] = {
["source"] = "Bloodmaul Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 75210,
},
[56580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deep Crawler",
["npcID"] = 30279,
},
[97282] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["npcID"] = 52558,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1204,
},
[372683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infused Whelp",
["npcID"] = 187894,
},
[432068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushing Waxthief",
["npcID"] = 229809,
},
[384970] = {
["isChanneled"] = true,
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185691,
},
[378827] = {
["source"] = "Qalashi Plunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 192786,
},
[210931] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Eye of Il'gynoth",
["npcID"] = 105906,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[407496] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2685,
},
[376780] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["npcID"] = 189901,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2611,
},
[214003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Swordsman",
["npcID"] = 102094,
},
[15043] = {
["source"] = "Green Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 32324,
},
[136189] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[405450] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Rock Snail",
["npcID"] = 203260,
},
[203765] = {
["source"] = "Gilnean Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 102875,
},
[417737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Shadowcaster",
["npcID"] = 207893,
},
[387021] = {
["source"] = "Agitated Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192238,
},
[374735] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[417738] = {
["source"] = "Peeved",
["event"] = "SPELL_CAST_START",
["npcID"] = 205428,
},
[356306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Annihilator",
["npcID"] = 182214,
},
[391118] = {
["encounterName"] = "Azureblade",
["source"] = "Scalebane Lieutenant",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 191739,
},
[319447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Imperial Curator",
["npcID"] = 168111,
},
[395214] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[325591] = {
["source"] = "Gracefallen Tactician",
["event"] = "SPELL_CAST_START",
["npcID"] = 163392,
},
[152573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldsnout Boar",
["npcID"] = 75416,
},
[56837] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[292828] = {
["source"] = "Etruvis the Vassal",
["event"] = "SPELL_CAST_START",
["npcID"] = 151041,
},
[147454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Jadefire",
["npcID"] = 72769,
},
[175099] = {
["source"] = "Dew Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 81553,
},
[384978] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[395217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[266209] = {
["source"] = "Fallen Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 134284,
},
[366549] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[401361] = {
["source"] = "Towering Deepstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 205124,
},
[173052] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom Sprayer",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 86547,
},
[341977] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diseased Horror",
["npcID"] = 170690,
},
[401362] = {
["source"] = "Zaqali Heatbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200452,
},
[154623] = {
["source"] = "Sargerei Spirit-Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 77131,
},
[147456] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Jadefire",
["npcID"] = 72769,
},
[199674] = {
["source"] = "King Bjorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 97081,
},
[372696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[197627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brood Queen Tyranna",
["npcID"] = 93802,
},
[446416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honey-fused Droplet",
["npcID"] = 213697,
},
[142338] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72451,
},
[417748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[226296] = {
["source"] = "Vileshard Hulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 91000,
},
[260084] = {
["source"] = "Wandering Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131852,
},
[360412] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[401368] = {
["source"] = "Deepstrider Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 203727,
},
[419798] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[417751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Blade Lord",
["npcID"] = 207922,
},
[372701] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[401370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[366559] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[30853] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[368608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Akkaris",
["npcID"] = 179006,
},
[378847] = {
["source"] = "Qalashi Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 192787,
},
[298985] = {
["source"] = "Blackfin Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 148475,
},
[69131] = {
["source"] = "Soulguard Animator",
["event"] = "SPELL_CAST_START",
["npcID"] = 36516,
},
[401373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Owlbeast",
["npcID"] = 205316,
},
[387039] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[307177] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Ritualist",
["npcID"] = 162716,
},
[39945] = {
["encounterName"] = "Shade of Akama",
["source"] = "Akama",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23191,
},
[444377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadegrumble Bear",
["npcID"] = 220059,
},
[421852] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[391136] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[384993] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horned Filcher",
["npcID"] = 194702,
},
[378850] = {
["source"] = "Destabilized Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 181536,
},
[41481] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[151558] = {
["source"] = "Bloodmaul Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 75272,
},
[266225] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[268273] = {
["source"] = "Tidesage Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134338,
},
[417759] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Amber Shaper",
["npcID"] = 207918,
},
[329706] = {
["source"] = "Mawsworn Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153878,
},
[268274] = {
["encounterName"] = "Ring of Booty",
["source"] = "Booty Fanatic",
["npcID"] = 136539,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[79883] = {
["source"] = "Admiral Hatchet",
["event"] = "SPELL_CAST_START",
["npcID"] = 46055,
},
[427999] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200927,
},
[252923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanchuli Witch-Doctor",
["npcID"] = 122969,
},
[387045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ezrigeth",
["npcID"] = 187666,
},
[372711] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 186220,
},
[440288] = {
["source"] = "Roaming Mongrel",
["event"] = "SPELL_CAST_START",
["npcID"] = 218330,
},
[204802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Lurker",
["npcID"] = 105069,
},
[268278] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[401382] = {
["encounterName"] = "Eranog",
["source"] = "Past Self",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 185800,
},
[430051] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Screaming Soul",
["npcID"] = 214608,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[401383] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[387049] = {
["source"] = "Wild Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194089,
},
[284662] = {
["encounterName"] = "King Rastakhan",
["source"] = "Prelate Za'lan",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146320,
},
[376811] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[395241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Voltweaver",
["npcID"] = 198868,
},
[76813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[366573] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185154,
},
[401385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[374765] = {
["source"] = "Ravenous Bloodbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 185350,
},
[201733] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[423912] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[385005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalsworn Furbolg",
["npcID"] = 190738,
},
[362480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carnivorous Overgrowth",
["npcID"] = 182322,
},
[372719] = {
["encounterName"] = "Sentinel Talondras",
["source"] = "Sentinel Talondras",
["encounterID"] = 2557,
["event"] = "SPELL_CAST_START",
["npcID"] = 184124,
},
[150540] = {
["source"] = "Razorfen Kraulshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 74550,
},
[15620] = {
["source"] = "Doomforge Dragoon",
["event"] = "SPELL_CAST_START",
["npcID"] = 8899,
},
[387054] = {
["source"] = "Cliffdrip Snapstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 189812,
},
[172042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowclaw",
["npcID"] = 86138,
},
[166923] = {
["source"] = "Champion Druna",
["event"] = "SPELL_CAST_START",
["npcID"] = 81603,
},
[409581] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[272382] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[41483] = {
["encounterName"] = "The Illidari Council",
["source"] = "High Nethermancer Zerevor",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22950,
},
[407535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Destroyer",
["npcID"] = 203861,
},
[262145] = {
["source"] = "Taskmaster Burlok",
["event"] = "SPELL_CAST_START",
["npcID"] = 138793,
},
[76815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[211975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 105629,
},
[448492] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[192522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[131090] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koukou",
["npcID"] = 66213,
},
[354297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Support Officer",
["npcID"] = 177817,
},
[405491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animated Riches",
["npcID"] = 201573,
},
[207881] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[405492] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[432113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[425970] = {
["source"] = "Verdant Boughwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 213576,
},
[395254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Tempestmaker",
["npcID"] = 198878,
},
[274437] = {
["source"] = "Galecaller Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139800,
},
[257028] = {
["encounterName"] = "Knight Captain Valyri",
["event"] = "SPELL_CAST_START",
["source"] = "Knight Captain Valyri",
["npcID"] = 127490,
},
[417780] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[372730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[417781] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[150546] = {
["source"] = "Razorfen Stonechanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 74549,
},
[376827] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[407544] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[34829] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[387067] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 186740,
},
[88080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Whipping Wind",
["npcID"] = 47238,
},
[428023] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[333827] = {
["event"] = "SPELL_CAST_START",
["source"] = "Advent Nevermore",
["npcID"] = 167533,
},
[372735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Earthshaper",
["npcID"] = 187969,
},
[432120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord",
["npcID"] = 228575,
},
[31623] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["npcID"] = 17826,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1947,
},
[411644] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[165907] = {
["source"] = "Groog",
["event"] = "SPELL_CAST_START",
["npcID"] = 80167,
},
[360451] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[130060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monk Trainee",
["npcID"] = 66101,
},
[81426] = {
["source"] = "Blackrock Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 7013,
},
[41229] = {
["source"] = "Bonechewer Blood Prophet",
["event"] = "SPELL_CAST_START",
["npcID"] = 23237,
},
[165908] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81043,
},
[284686] = {
["encounterName"] = "King Rastakhan",
["source"] = "Siegebreaker Roka",
["npcID"] = 146322,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2272,
},
[393217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[407552] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[307213] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[374789] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["encounterID"] = 2582,
["event"] = "SPELL_CAST_START",
["npcID"] = 186644,
},
[258058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Silt Crab",
["npcID"] = 127381,
},
[272402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Knife Juggler",
["npcID"] = 129599,
},
[153623] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[432127] = {
["source"] = "Boroughbreaker Stik'kar",
["event"] = "SPELL_CAST_START",
["npcID"] = 226294,
},
[385029] = {
["source"] = "Fleshripper Vulture",
["event"] = "SPELL_CAST_START",
["npcID"] = 186246,
},
[403459] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[372743] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[143385] = {
["encounterName"] = "Siegecrafter Blackfuse",
["source"] = "Siegecrafter Blackfuse",
["encounterID"] = 1601,
["event"] = "SPELL_CAST_START",
["npcID"] = 71504,
},
[444415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadegrumble Bear",
["npcID"] = 220059,
},
[76820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Spiritmender",
["npcID"] = 41096,
},
[268309] = {
["source"] = "Deepsea Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134417,
},
[164887] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[191508] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[362507] = {
["source"] = "Octolus",
["event"] = "SPELL_CAST_START",
["npcID"] = 182690,
},
[333839] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[313362] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[191509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[319506] = {
["source"] = "Manifestation of Hate",
["event"] = "SPELL_CAST_START",
["npcID"] = 164232,
},
[395273] = {
["source"] = "Primal Stormsentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 196856,
},
[202772] = {
["source"] = "Stonefist Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 102623,
},
[59148] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[387083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Briarback",
["npcID"] = 187264,
},
[266266] = {
["encounterName"] = "Gorak Tul",
["source"] = "Gorak Tul",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 131864,
},
[374797] = {
["source"] = "Divebeak Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 189373,
},
[385036] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[268315] = {
["source"] = "Abyss Dweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 134423,
},
[36879] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 20977,
},
[421898] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[268317] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[409612] = {
["source"] = "Whisper in the Dark",
["event"] = "SPELL_CAST_START",
["npcID"] = 203806,
},
[151581] = {
["source"] = "Bloodmaul Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75426,
},
[446474] = {
["source"] = "Waxy Blob",
["event"] = "SPELL_CAST_START",
["npcID"] = 229818,
},
[376851] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[288798] = {
["source"] = "Tormented Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 146809,
},
[17290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Worshipper",
["npcID"] = 30111,
},
[387091] = {
["source"] = "Time-Lost Sunseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187239,
},
[268322] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[151583] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Charlga Razorflank",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 4421,
},
[428047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[462859] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[360472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Accelerated Bufonid",
["npcID"] = 178803,
},
[395284] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[385046] = {
["source"] = "Skulking Gutstabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 186242,
},
[272420] = {
["source"] = "Crawg Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 128267,
},
[307232] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[9734] = {
["source"] = "Lord Walden",
["event"] = "SPELL_CAST_START",
["npcID"] = 45879,
},
[148513] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Kun-Da",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71408,
},
[448528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitfire Fusetender",
["npcID"] = 211777,
},
[259092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[211994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 105629,
},
[189469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[200732] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[428054] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[397338] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Tectonic Crusher",
["npcID"] = 190588,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[331811] = {
["source"] = "Lightbound Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 165687,
},
[415769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[147492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Flayer",
["npcID"] = 80430,
},
[415770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Time",
["npcID"] = 206140,
},
[177185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brine Lasher",
["npcID"] = 86267,
},
[397341] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[391198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tserasor the Preserver",
["npcID"] = 190598,
},
[376865] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[415773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Interval",
["npcID"] = 206065,
},
[288813] = {
["source"] = "Harbinger Il'koxik",
["event"] = "SPELL_CAST_START",
["npcID"] = 160810,
},
[266288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ol' Big Tusk",
["npcID"] = 153206,
},
[432156] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Outrider",
["npcID"] = 213095,
},
[395297] = {
["source"] = "Snee",
["event"] = "SPELL_CAST_START",
["npcID"] = 186203,
},
[274480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Ravasaur",
["npcID"] = 139842,
},
[171044] = {
["source"] = "Siege Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85587,
},
[165925] = {
["source"] = "Borogahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 81043,
},
[395299] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[395300] = {
["source"] = "Azure Pathfinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 194210,
},
[374823] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[409635] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[101401] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["encounterID"] = 1882,
["event"] = "SPELL_CAST_START",
["npcID"] = 54123,
},
[366633] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185155,
},
[385063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[389159] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[207906] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[346157] = {
["source"] = "Soul Feaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 175699,
},
[385065] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[148522] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Tidal Shaman",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72958,
},
[3650] = {
["source"] = "Mudsnout Gnoll",
["event"] = "SPELL_CAST_START",
["npcID"] = 2372,
},
[288822] = {
["source"] = "Rastari Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 149591,
},
[153642] = {
["source"] = "Black Iron Warcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 76151,
},
[59152] = {
["source"] = "Stormforged Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 28835,
},
[385068] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[290872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Automated Flame Turret",
["npcID"] = 149879,
},
[268347] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[147500] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[268348] = {
["source"] = "Colossal Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 136353,
},
[407596] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[303161] = {
["source"] = "Farscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 201301,
},
[214053] = {
["source"] = "Crimson Rockshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 113508,
},
[397358] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[423979] = {
["source"] = "Void Cursed Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 214419,
},
[323640] = {
["source"] = "Bloodtusk Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 165473,
},
[139311] = {
["source"] = "Rotting Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 70224,
},
[297020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Binder Baritas",
["npcID"] = 185015,
},
[393265] = {
["source"] = "Tombcaller Arban",
["event"] = "SPELL_CAST_START",
["npcID"] = 190047,
},
[387122] = {
["source"] = "Arcane Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 186740,
},
[290878] = {
["source"] = "Lady Jaina Proudmoore",
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[292926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord of Torment",
["npcID"] = 151127,
},
[385075] = {
["encounterName"] = "Umbrelskul",
["source"] = "Umbrelskul",
["encounterID"] = 2584,
["event"] = "SPELL_CAST_START",
["npcID"] = 186738,
},
[156718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Corpse Spider",
["npcID"] = 76104,
},
[79903] = {
["source"] = "Turkina",
["event"] = "SPELL_CAST_START",
["npcID"] = 81996,
},
[52498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Necromancer",
["npcID"] = 28200,
},
[113691] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[456748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimson Deathweaver",
["npcID"] = 222692,
},
[303167] = {
["source"] = "Zanj'ir Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153697,
},
[387125] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[315454] = {
["source"] = "Pelagos",
["event"] = "SPELL_CAST_START",
["npcID"] = 184003,
},
[374839] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[417843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Listless Nae'dra",
["npcID"] = 211164,
},
[387127] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[372793] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Juggernaut",
["npcID"] = 188244,
},
[337982] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[372794] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[317506] = {
["source"] = "Depthsborn Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 154329,
},
[200748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Weaver",
["npcID"] = 97706,
},
[59154] = {
["source"] = "Stormforged Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 28920,
},
[376892] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[272457] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[389179] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["npcID"] = 189719,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2615,
},
[175152] = {
["source"] = "Loup",
["event"] = "SPELL_CAST_START",
["npcID"] = 82209,
},
[106526] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[274507] = {
["encounterName"] = "Council o' Captains",
["source"] = "Bilge Rat Swabby",
["npcID"] = 129526,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[199726] = {
["source"] = "King Ranulf",
["event"] = "SPELL_CAST_START",
["npcID"] = 97083,
},
[226347] = {
["source"] = "Stoneclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91332,
},
[372800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187125,
},
[391230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bisquius",
["npcID"] = 197557,
},
[272461] = {
["source"] = "Reanimated Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 122684,
},
[32011] = {
["source"] = "Sulfurious",
["event"] = "SPELL_CAST_START",
["npcID"] = 80725,
},
[183345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[319560] = {
["source"] = "Emaciated Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 172703,
},
[260136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mala'kili",
["npcID"] = 128935,
},
[196656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[193585] = {
["source"] = "Rockbound Trapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 102232,
},
[292942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chainbound Construct",
["npcID"] = 181800,
},
[122398] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Mutated Construct",
["npcID"] = 62701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[346186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Deadeye",
["npcID"] = 167323,
},
[192563] = {
["source"] = "Valarjar Purifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 97197,
},
[372808] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[272469] = {
["source"] = "Abyssal Reach",
["event"] = "SPELL_CAST_START",
["npcID"] = 138538,
},
[417860] = {
["source"] = "Shoreline Gladehart",
["event"] = "SPELL_CAST_START",
["npcID"] = 210283,
},
[227376] = {
["source"] = "Crown Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 114275,
},
[268375] = {
["source"] = "Abyssal Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134514,
},
[311378] = {
["source"] = "Deresh of the Nothingness",
["event"] = "SPELL_CAST_START",
["npcID"] = 159768,
},
[387145] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[374859] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[75813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[370764] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[188470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Surging Podling",
["npcID"] = 210210,
},
[173112] = {
["source"] = "Grom'kar Deckhand",
["event"] = "SPELL_CAST_START",
["npcID"] = 83762,
},
[397386] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[166969] = {
["source"] = "Olin Umberhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 79315,
},
[401482] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[370766] = {
["source"] = "Crystal Thrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196117,
},
[446533] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[456772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[311382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deresh of the Nothingness",
["npcID"] = 159768,
},
[101411] = {
["encounterName"] = "Echo of Sylvanas",
["source"] = "Echo of Sylvanas",
["encounterID"] = 1882,
["event"] = "SPELL_CAST_START",
["npcID"] = 54123,
},
[387151] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[391247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[393295] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184986,
},
[393296] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["encounterID"] = 2605,
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[143423] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[393298] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[173116] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[397394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[366678] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[385108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Podling",
["npcID"] = 187317,
},
[152639] = {
["source"] = "Thunderlord Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 72232,
},
[456780] = {
["event"] = "SPELL_CAST_START",
["source"] = "King Splash",
["npcID"] = 220275,
},
[411730] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Molten Hound",
["npcID"] = 205611,
},
[383062] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[9672] = {
["source"] = "Blackscale Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 45985,
},
[393302] = {
["source"] = "Smoldering Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 188673,
},
[198715] = {
["source"] = "Val'kyr Battlemaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 100876,
},
[184381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Synod",
["npcID"] = 159190,
},
[268391] = {
["source"] = "Abyssal Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 134514,
},
[141379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[393305] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[193597] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[372828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[407640] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[393306] = {
["source"] = "Primalist Earthwarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 193709,
},
[346208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Deadeye",
["npcID"] = 167323,
},
[157762] = {
["source"] = "Auchenai Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 77696,
},
[393307] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 193558,
},
[22414] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[393308] = {
["source"] = "Primalist Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 193558,
},
[411738] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rashok",
["npcID"] = 201320,
},
[389213] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[166978] = {
["source"] = "Exarch Maladaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 79537,
},
[401500] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[125988] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[366689] = {
["source"] = "Ebonsteel Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 185268,
},
[411740] = {
["isChanneled"] = true,
["source"] = "Rashok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201320,
},
[383073] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[123429] = {
["source"] = "Broketooth Sneaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 60195,
},
[323689] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Rotted Flesh",
["npcID"] = 158642,
},
[317546] = {
["source"] = "King Phaoris",
["event"] = "SPELL_CAST_START",
["npcID"] = 161112,
},
[200768] = {
["source"] = "Crazed Razorbeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 95766,
},
[317547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grunk",
["npcID"] = 153581,
},
[393314] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[374885] = {
["source"] = "Astral Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 189555,
},
[376933] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[333931] = {
["source"] = "Feral Helhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 171245,
},
[376934] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[372839] = {
["source"] = "Nokhud Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 191227,
},
[301168] = {
["isChanneled"] = true,
["source"] = "Muck Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145333,
},
[411747] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Elementium",
["npcID"] = 205628,
},
[270453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geolord Grek'og",
["npcID"] = 151091,
},
[428130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlann Timbercrush",
["npcID"] = 207554,
},
[198723] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[64535] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[430179] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[81452] = {
["source"] = "Jorgensen",
["event"] = "SPELL_CAST_START",
["npcID"] = 43546,
},
[417893] = {
["event"] = "SPELL_CAST_START",
["source"] = "Walking Nightmare",
["npcID"] = 206627,
},
[197700] = {
["source"] = "Temple Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 100450,
},
[364652] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[200772] = {
["source"] = "High Explorer Dellorah",
["event"] = "SPELL_CAST_START",
["npcID"] = 161938,
},
[374892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plainswalker Calf",
["npcID"] = 190908,
},
[409704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[403561] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[87084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skitterweb Matriarch",
["npcID"] = 44906,
},
[383084] = {
["source"] = "Water Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 190066,
},
[286840] = {
["source"] = "Azerite Droplet",
["event"] = "SPELL_CAST_START",
["npcID"] = 152098,
},
[411754] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[415850] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roiling Deathstalker",
["npcID"] = 211242,
},
[376943] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[411755] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conduit Guardian",
["npcID"] = 205478,
},
[413803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mooncaller",
["npcID"] = 205851,
},
[317559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodbeak",
["npcID"] = 153964,
},
[360562] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[403565] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[413804] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Mender",
["npcID"] = 205852,
},
[403566] = {
["source"] = "Flare Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202683,
},
[413805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[374898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grasslands Musken",
["npcID"] = 195172,
},
[385137] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[403567] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[372851] = {
["encounterName"] = "Melidrussa Chillworn",
["event"] = "SPELL_CAST_START",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
},
[342135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavin the Breaker",
["npcID"] = 167532,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[395377] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[317563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'raxx",
["npcID"] = 153326,
},
[147535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gu'chi the Swarmbringer",
["npcID"] = 72909,
},
[395378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[413808] = {
["source"] = "Cenrrrn Cirrgl Tideshifter",
["event"] = "SPELL_CAST_START",
["npcID"] = 204516,
},
[257090] = {
["source"] = "Partially Teleported Trogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 226668,
},
[129577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Korjan Slavemaster",
["npcID"] = 65638,
},
[260162] = {
["source"] = "Jambani Spirit Twister",
["event"] = "SPELL_CAST_START",
["npcID"] = 129513,
},
[138321] = {
["encounterName"] = "Ra-den",
["source"] = "Ra-den",
["npcID"] = 69473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1580,
},
[385141] = {
["source"] = "Primalist Galesinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 190373,
},
[403571] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[9481] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 209254,
},
[362617] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[153680] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[38940] = {
["source"] = "Sargeron Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 20901,
},
[387191] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[257092] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[135251] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["encounterID"] = 1565,
["event"] = "SPELL_CAST_START",
["npcID"] = 67977,
},
[403574] = {
["source"] = "Fael'lin",
["event"] = "SPELL_CAST_START",
["npcID"] = 198916,
},
[397431] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[81456] = {
["source"] = "Jorgensen",
["event"] = "SPELL_CAST_START",
["npcID"] = 43546,
},
[385145] = {
["source"] = "Time-Lost Raptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187256,
},
[173135] = {
["source"] = "Ogron Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 83578,
},
[256069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Snapclaw",
["npcID"] = 127526,
},
[366716] = {
["source"] = "Astral Particle",
["event"] = "SPELL_CAST_START",
["npcID"] = 185274,
},
[403576] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[68658] = {
["source"] = "Netgun Gnome",
["event"] = "SPELL_CAST_START",
["npcID"] = 36385,
},
[29583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[428150] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[409721] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 202610,
},
[144468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[372862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Churning Splash",
["npcID"] = 187318,
},
[244808] = {
["source"] = "Sandclaw Crab",
["event"] = "SPELL_CAST_START",
["npcID"] = 145337,
},
[389245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Ruinstalker",
["npcID"] = 199379,
},
[150612] = {
["source"] = "Nagrand Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 81902,
},
[200782] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiendish Creeper",
["npcID"] = 99759,
},
[413819] = {
["isChanneled"] = true,
["source"] = "Stormforged Tactician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206059,
},
[409724] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[173138] = {
["source"] = "Beremus the Overgrowth",
["event"] = "SPELL_CAST_START",
["npcID"] = 80700,
},
[389247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Avenger",
["npcID"] = 187187,
},
[143446] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 71480,
},
[144470] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[323720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[41245] = {
["source"] = "Suffering Soul Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 23399,
},
[200784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[144471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[125997] = {
["source"] = "Battleworn Paratrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 63764,
},
[317579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Dominator",
["npcID"] = 162164,
},
[270481] = {
["source"] = "Demonic Tyrant",
["event"] = "SPELL_CAST_START",
["npcID"] = 135002,
},
[389251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[319628] = {
["source"] = "Larion Sire",
["event"] = "SPELL_CAST_START",
["npcID"] = 157761,
},
[393348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[387205] = {
["source"] = "Tyrhold Gryphon",
["event"] = "SPELL_CAST_START",
["npcID"] = 198417,
},
[346251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Willbreaker",
["npcID"] = 178490,
},
[299153] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Trixie Tazer",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 150712,
},
[307345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hovok",
["npcID"] = 153241,
},
[87603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bolgaff",
["npcID"] = 47003,
},
[56860] = {
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[147546] = {
["source"] = "Golganarr",
["event"] = "SPELL_CAST_START",
["npcID"] = 72970,
},
[444546] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[268440] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[417926] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[389258] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[403593] = {
["source"] = "Magma Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 200801,
},
[405641] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[456835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungerer of the Deeps",
["npcID"] = 221199,
},
[360591] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Necrotic Ritualist",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 182045,
},
[15241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Darkcaster",
["npcID"] = 17269,
},
[391308] = {
["source"] = "Boolk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191450,
},
[106546] = {
["source"] = "Bloated Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59518,
},
[148572] = {
["source"] = "Thresher Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 73742,
},
[15497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewalker Slave",
["npcID"] = 17963,
},
[116273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Stalker",
["npcID"] = 56683,
},
[379023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hillside Forager",
["npcID"] = 191240,
},
[422026] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[325782] = {
["source"] = "Darkwarren Spitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 164038,
},
[422027] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Spirit of the Kaldorei",
["npcID"] = 207800,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[258128] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Thug",
["npcID"] = 130025,
},
[106547] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[98868] = {
["encounterName"] = "Alysrazor",
["source"] = "Blazing Talon Initiate",
["npcID"] = 53369,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1206,
},
[385170] = {
["source"] = "Wind Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 191645,
},
[260177] = {
["source"] = "Jambani Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 134156,
},
[317595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Aum-ka",
["npcID"] = 154619,
},
[409744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[403601] = {
["source"] = "Warden Entrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 200960,
},
[389267] = {
["source"] = "Clearwater Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 192678,
},
[409745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kretchenwrath",
["npcID"] = 201673,
},
[389268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Expedition Guardian",
["npcID"] = 187135,
},
[417937] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[389269] = {
["source"] = "Expedition Guarantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 187061,
},
[317598] = {
["source"] = "Ishak of the Four Winds",
["event"] = "SPELL_CAST_START",
["npcID"] = 157134,
},
[262309] = {
["source"] = "Thalassian Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 145113,
},
[125490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Searsting",
["npcID"] = 63569,
},
[389270] = {
["source"] = "Expedition Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 187123,
},
[325790] = {
["source"] = "Bitter Memory",
["event"] = "SPELL_CAST_START",
["npcID"] = 158629,
},
[119347] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sik'thik Vanguard",
["npcID"] = 61434,
},
[389271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[407701] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pendule",
["npcID"] = 204030,
},
[379033] = {
["source"] = "Feral Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193545,
},
[417941] = {
["source"] = "Rotted Gladiator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207808,
},
[411798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozing Sludge",
["npcID"] = 205644,
},
[389273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[317602] = {
["source"] = "Golden Lotus Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 162836,
},
[389274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Shaman",
["npcID"] = 186679,
},
[270505] = {
["source"] = "Fallen Heartpiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[165985] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[424087] = {
["source"] = "Zaqali Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 207089,
},
[417944] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[11082] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["encounterID"] = 380,
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[317605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[385181] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[198750] = {
["encounterName"] = "Odyn",
["source"] = "Stormforged Obliterator",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 102019,
},
[136294] = {
["encounterName"] = "Tortos",
["source"] = "Tortos",
["npcID"] = 67977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1565,
},
[409756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[409757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[387232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Preserver",
["npcID"] = 209202,
},
[389280] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[148582] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Xiang-Lin",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73725,
},
[157797] = {
["source"] = "Sargerei Arbiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 77080,
},
[167012] = {
["source"] = "Saberon Ambusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 88813,
},
[193633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[59167] = {
["source"] = "Stormfury Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 28826,
},
[270513] = {
["source"] = "Infused Bedrock",
["event"] = "SPELL_CAST_START",
["npcID"] = 137906,
},
[164965] = {
["source"] = "Everbloom Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81820,
},
[430238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Spellshaper",
["npcID"] = 219302,
},
[376997] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[411809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahi'rys",
["npcID"] = 205540,
},
[366759] = {
["source"] = "Illicit Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 183498,
},
[270515] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azerite-Infused Elemental",
["npcID"] = 137905,
},
[176229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vrok the Ancient",
["npcID"] = 87356,
},
[411811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbling Slime",
["npcID"] = 205651,
},
[405668] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[383143] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[417955] = {
["isChanneled"] = true,
["source"] = "Wild Sproutling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205304,
},
[413860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chromie",
["npcID"] = 205707,
},
[79932] = {
["source"] = "Nevo",
["event"] = "SPELL_CAST_START",
["npcID"] = 81999,
},
[147562] = {
["source"] = "Ashleaf Sprite",
["event"] = "SPELL_CAST_START",
["npcID"] = 72877,
},
[329904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Advisor",
["npcID"] = 157118,
},
[422053] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Lasher",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 210231,
},
[168040] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[329905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Advisor",
["npcID"] = 157118,
},
[377004] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[403625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[405673] = {
["source"] = "Overflowing Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 203277,
},
[168041] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[15242] = {
["source"] = "Hellfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17477,
},
[456868] = {
["source"] = "Sureki Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 222688,
},
[329908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lithic Watcher",
["npcID"] = 157017,
},
[405675] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[428202] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[141423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hekima the Wise",
["npcID"] = 70544,
},
[192617] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[59169] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[270529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mareen Sherwood",
["npcID"] = 137551,
},
[164973] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[299198] = {
["source"] = "Aerial Enforcer XZ-9",
["event"] = "SPELL_CAST_START",
["npcID"] = 154700,
},
[226406] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 1984,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[244836] = {
["source"] = "Phantom Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 154624,
},
[270531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thorn Sutton",
["npcID"] = 137548,
},
[256099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Ma'da Ateena",
["npcID"] = 121504,
},
[191595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[303296] = {
["source"] = "Zanj'ir Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 155618,
},
[210025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightborne Eradicator",
["npcID"] = 106049,
},
[413875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apiazhus",
["npcID"] = 200981,
},
[9739] = {
["source"] = "Plainsmender Darragh",
["event"] = "SPELL_CAST_START",
["npcID"] = 82013,
},
[264390] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[374969] = {
["encounterName"] = "Forgemaster Gorek",
["source"] = "Forgemaster Gorek",
["encounterID"] = 2612,
["event"] = "SPELL_CAST_START",
["npcID"] = 189478,
},
[262343] = {
["source"] = "Reckless Cutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 121577,
},
[303299] = {
["source"] = "Tidemistress Ethendriss",
["event"] = "SPELL_CAST_START",
["npcID"] = 153934,
},
[256101] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[207979] = {
["source"] = "Jazshariu",
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[192621] = {
["encounterName"] = "Ash'Golm",
["source"] = "Ash'Golm",
["npcID"] = 95886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1816,
},
[145523] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Stone Statue",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72535,
},
[274633] = {
["source"] = "Ironhull Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139799,
},
[207980] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[258150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[201837] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[383165] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[387261] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[405691] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[336068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blind Souldrinker",
["npcID"] = 182686,
},
[297161] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Ravager",
["npcID"] = 153065,
},
[407740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurantia",
["npcID"] = 203047,
},
[79938] = {
["source"] = "Anruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 81998,
},
[411837] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Fire",
["npcID"] = 205971,
},
[356548] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalmancer Zo'honn",
["npcID"] = 179334,
},
[440506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stream Skipper",
["npcID"] = 213700,
},
[360644] = {
["source"] = "Adrift Core",
["event"] = "SPELL_CAST_START",
["npcID"] = 184660,
},
[197744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 96503,
},
[307403] = {
["encounterName"] = "Vexiona",
["source"] = "Void Ascendant",
["npcID"] = 157467,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[12491] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["encounterID"] = 597,
["event"] = "SPELL_CAST_START",
["npcID"] = 7271,
},
[258153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Seaspeaker",
["npcID"] = 130026,
},
[329929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewing Ravager",
["npcID"] = 157083,
},
[405696] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[12747] = {
["source"] = "Verdant Emerald Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 208750,
},
[163957] = {
["source"] = "Fungus Covered Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 80721,
},
[329930] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonewing Ravager",
["npcID"] = 157083,
},
[256106] = {
["encounterName"] = "Skycap'n Kragg",
["source"] = "Skycap'n Kragg",
["npcID"] = 126832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2093,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[377029] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid Queen",
["npcID"] = 184853,
},
[144504] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Desperation",
["event"] = "SPELL_CAST_START",
["npcID"] = 71482,
},
[244844] = {
["source"] = "Brinescale Wavecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 131305,
},
[13323] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Theurgist",
["npcID"] = 18315,
},
[194675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[444608] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[377033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[264407] = {
["source"] = "Faceless Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131821,
},
[377034] = {
["encounterName"] = "Crawth",
["source"] = "Crawth",
["npcID"] = 191736,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2564,
},
[150650] = {
["source"] = "Kraulshaper Tukaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 74900,
},
[311508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sanguimar",
["npcID"] = 159767,
},
[445974] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222281,
},
[397514] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[427583] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[393419] = {
["source"] = "Penumbrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189289,
},
[448515] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Elaena Emberlanz",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 211290,
},
[16006] = {
["source"] = "Farseer Drek'Thar",
["event"] = "SPELL_CAST_START",
["npcID"] = 78996,
},
[146556] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[303319] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wekemara",
["npcID"] = 152671,
},
[387277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Revenant",
["npcID"] = 195917,
},
[400842] = {
["source"] = "Zaqali Blazestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199828,
},
[200498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Burning Soulstalker",
["npcID"] = 96278,
},
[176249] = {
["source"] = "Woodfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 83871,
},
[423536] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[422090] = {
["source"] = "Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 54983,
},
[55077] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Worg",
["npcID"] = 29735,
},
[153521] = {
["source"] = "Adept of the Dawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 79467,
},
[305369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidbound Honor Guard",
["npcID"] = 156406,
},
[141438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Drak'on",
["npcID"] = 67391,
},
[432135] = {
["source"] = "Partially Teleported Kobold",
["event"] = "SPELL_CAST_START",
["npcID"] = 226669,
},
[444449] = {
["source"] = "Fervent Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 206694,
},
[450330] = {
["encounterName"] = "Waxface",
["source"] = "Waxface",
["npcID"] = 214263,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2894,
},
[178298] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[424140] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[106563] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[123791] = {
["encounterName"] = "Imperial Vizier Zor'lok",
["source"] = "Imperial Vizier Zor'lok",
["encounterID"] = 1507,
["event"] = "SPELL_CAST_START",
["npcID"] = 62980,
},
[159802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Champion",
["npcID"] = 72940,
},
[456905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[448341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[440007] = {
["source"] = "Iron-Runed Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 214576,
},
[137344] = {
["encounterName"] = "Council of Elders",
["source"] = "High Priestess Mar'li",
["npcID"] = 69132,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[171132] = {
["source"] = "Tailthrasher Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 85718,
},
[448384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[272609] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[452539] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[224374] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 112668,
},
[418000] = {
["source"] = "Fel-Corrupted Kaldorei",
["event"] = "SPELL_CAST_START",
["npcID"] = 206146,
},
[432114] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[194682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Imp",
["npcID"] = 98963,
},
[391380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Sorcerer",
["npcID"] = 201152,
},
[163966] = {
["isChanneled"] = true,
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 81236,
},
[246900] = {
["source"] = "Void Discharge",
["event"] = "SPELL_CAST_START",
["npcID"] = 122478,
},
[430288] = {
["source"] = "Void Fragment",
["event"] = "SPELL_CAST_START",
["npcID"] = 207202,
},
[224375] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Infernal Imp",
["npcID"] = 112668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1869,
},
[393429] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Stormwrought Despoiler",
["npcID"] = 198326,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[193659] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[235638] = {
["source"] = "Roottender Treant",
["event"] = "SPELL_CAST_START",
["npcID"] = 209280,
},
[171134] = {
["source"] = "Tailthrasher Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 85718,
},
[393430] = {
["source"] = "Forge-Keep Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192703,
},
[448485] = {
["source"] = "Guard Captain Suleyman",
["event"] = "SPELL_CAST_START",
["npcID"] = 212826,
},
[372953] = {
["isChanneled"] = true,
["source"] = "Purified Slime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 185762,
},
[456211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Sticker",
["npcID"] = 216948,
},
[200827] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Soul Fragment",
["npcID"] = 96279,
},
[305378] = {
["source"] = "Voidbound Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 156406,
},
[432116] = {
["source"] = "Boss Whiskerlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 220385,
},
[424148] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[393432] = {
["source"] = "Refti Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 190340,
},
[411862] = {
["event"] = "SPELL_CAST_START",
["source"] = "Animation Fluid",
["npcID"] = 203939,
},
[430292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[391385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[303332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rijz'x the Devourer",
["npcID"] = 154490,
},
[387290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Lasher",
["npcID"] = 194588,
},
[34345] = {
["source"] = "Refining Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 67283,
},
[446000] = {
["source"] = "Infested Jawgrub",
["event"] = "SPELL_CAST_START",
["npcID"] = 217379,
},
[393434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Supplyhand",
["npcID"] = 193790,
},
[440376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Encroaching Undercrawler",
["npcID"] = 215771,
},
[35369] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Phoenix",
["npcID"] = 21362,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[199805] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 96574,
},
[39207] = {
["source"] = "Bloodvenom",
["event"] = "SPELL_CAST_START",
["npcID"] = 49264,
},
[450781] = {
["source"] = "Flickerflame Sticker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212629,
},
[260214] = {
["source"] = "Mindslaved Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130219,
},
[452442] = {
["source"] = "Terror of the Forge",
["event"] = "SPELL_CAST_START",
["npcID"] = 220271,
},
[418009] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Archer",
["npcID"] = 206352,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[136954] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[83017] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[425974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[100423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Subjugator",
["npcID"] = 53188,
},
[272620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Striker",
["npcID"] = 131112,
},
[452651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[374215] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[450613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamekeeper Graz",
["npcID"] = 219279,
},
[119365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorcerer Mogu",
["npcID"] = 61250,
},
[312782] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[366818] = {
["source"] = "Kelmortos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185275,
},
[393439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Mercenary",
["npcID"] = 193791,
},
[366326] = {
["source"] = "Foul Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183497,
},
[299243] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[106055] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["encounterID"] = 1418,
["event"] = "SPELL_CAST_START",
["npcID"] = 56448,
},
[396877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enraged Air Elemental",
["npcID"] = 196155,
},
[387297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[136953] = {
["source"] = "Zandalari Water-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 69455,
},
[375011] = {
["source"] = "Seismic Force",
["event"] = "SPELL_CAST_START",
["npcID"] = 192745,
},
[368522] = {
["source"] = "Zatojin",
["event"] = "SPELL_CAST_START",
["npcID"] = 183764,
},
[395489] = {
["source"] = "Karantun",
["event"] = "SPELL_CAST_START",
["npcID"] = 193647,
},
[117830] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[126903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Berserker",
["npcID"] = 70471,
},
[102472] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[452567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oath-Eater",
["npcID"] = 206844,
},
[432125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[427899] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1751,
},
[418016] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[387300] = {
["source"] = "Feasting Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 192739,
},
[450180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coal Rager",
["npcID"] = 219726,
},
[366823] = {
["source"] = "Kelmortos",
["event"] = "SPELL_CAST_START",
["npcID"] = 185275,
},
[81995] = {
["source"] = "Messner",
["event"] = "SPELL_CAST_START",
["npcID"] = 43826,
},
[450757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[446409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Kelp",
["npcID"] = 215702,
},
[456259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candleflyer Captain",
["npcID"] = 220276,
},
[143497] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["encounterID"] = 1598,
["event"] = "SPELL_CAST_START",
["npcID"] = 71475,
},
[201858] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[294349] = {
["source"] = "Living Waste",
["event"] = "SPELL_CAST_START",
["npcID"] = 144301,
},
[162951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Impaler",
["npcID"] = 154367,
},
[456171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlurk",
["npcID"] = 223091,
},
[13900] = {
["encounterName"] = "Lord Incendius",
["source"] = "Lord Incendius",
["encounterID"] = 232,
["event"] = "SPELL_CAST_START",
["npcID"] = 9017,
},
[415253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Sporecap",
["npcID"] = 207482,
},
[456788] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Splash",
["npcID"] = 220275,
},
[418020] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[193668] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[430097] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[130630] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[81996] = {
["source"] = "Messner",
["event"] = "SPELL_CAST_START",
["npcID"] = 43826,
},
[131178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pandaren Scarecrow",
["npcID"] = 66768,
},
[372971] = {
["source"] = "Qalashi Blacksmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 189471,
},
[265679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandfury Assassin",
["npcID"] = 129525,
},
[385258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[452024] = {
["source"] = "Earthen-Ward Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 216221,
},
[145547] = {
["source"] = "Kor'kron Dark Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72451,
},
[391402] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["npcID"] = 189492,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2607,
},
[378413] = {
["source"] = "Frenzied Tidecore",
["event"] = "SPELL_CAST_START",
["npcID"] = 213699,
},
[450424] = {
["source"] = "Waxy Blob",
["event"] = "SPELL_CAST_START",
["npcID"] = 229818,
},
[458657] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[296510] = {
["source"] = "Crawling Corruption",
["event"] = "SPELL_CAST_START",
["npcID"] = 152704,
},
[401642] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[428263] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[145548] = {
["source"] = "Poison Bolt Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 72562,
},
[114249] = {
["source"] = "Broketooth Tosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 59416,
},
[418025] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[431552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Webspinner",
["npcID"] = 224149,
},
[83021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacksmith Verringtan",
["npcID"] = 47792,
},
[154356] = {
["source"] = "Sargerei Soulpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 76595,
},
[393453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Defender",
["npcID"] = 199941,
},
[395501] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[117833] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Meng the Demented",
["npcID"] = 60708,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[358642] = {
["source"] = "Violetsail Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 179606,
},
[393454] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlehorn Pyrhus",
["npcID"] = 190986,
},
[444648] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[456198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scary Sticker",
["npcID"] = 216948,
},
[69068] = {
["source"] = "Soulguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 36620,
},
[150661] = {
["source"] = "Gorg the Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 76496,
},
[329975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Adjutant Felipos",
["npcID"] = 185103,
},
[389360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[407790] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[398780] = {
["source"] = "Farscale Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 200485,
},
[395504] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thondrozus",
["npcID"] = 192769,
},
[446261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Famished Fog Beast",
["npcID"] = 219447,
},
[358645] = {
["source"] = "Violetsail Swiftshot",
["event"] = "SPELL_CAST_START",
["npcID"] = 179736,
},
[42027] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Spiritbinder",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23524,
},
[428269] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Void Chunk",
["encounterID"] = 2836,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 213684,
},
[145551] = {
["source"] = "Kor'kron Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 72150,
},
[444123] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[418031] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[30691] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Vazruden the Herald",
["npcID"] = 17307,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1892,
},
[307453] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[450628] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[393459] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[395163] = {
["source"] = "Gethdazr",
["event"] = "SPELL_CAST_START",
["npcID"] = 196165,
},
[389364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandana the Tempest",
["npcID"] = 193176,
},
[424176] = {
["source"] = "Ancient Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 210637,
},
[311550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[403699] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[456438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Reaver",
["npcID"] = 215842,
},
[104318] = {
["source"] = "Wild Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 55659,
},
[311551] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[440185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustul Titancap",
["npcID"] = 213115,
},
[9613] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Sandfury Acolyte",
["encounterID"] = 598,
["event"] = "SPELL_CAST_START",
["npcID"] = 8876,
},
[407796] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[163983] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[448443] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[64041] = {
["source"] = "Shatterspear Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 34309,
},
[448640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[151697] = {
["source"] = "Bloodmaul Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75426,
},
[144530] = {
["source"] = "Yu'lon",
["event"] = "SPELL_CAST_START",
["npcID"] = 71955,
},
[450037] = {
["source"] = "Malfunctioning Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220068,
},
[284933] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145616,
},
[448002] = {
["source"] = "Rustcloud Runt",
["event"] = "SPELL_CAST_START",
["npcID"] = 222796,
},
[297220] = {
["source"] = "Voidbound Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 153097,
},
[33325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Necromancer",
["npcID"] = 18702,
},
[305236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[258181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[143445] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["encounterID"] = 1599,
["event"] = "SPELL_CAST_START",
["npcID"] = 71529,
},
[145555] = {
["source"] = "Kor'kron Warshaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 71773,
},
[85584] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[142139] = {
["event"] = "SPELL_CAST_START",
["source"] = "Urtharges the Destroyer",
["npcID"] = 70959,
},
[452169] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[444324] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[106877] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["encounterID"] = 1305,
["event"] = "SPELL_CAST_START",
["npcID"] = 56719,
},
[444683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moss-Draped Ramolith",
["npcID"] = 218191,
},
[11085] = {
["encounterName"] = "Electrocutioner 6000",
["source"] = "Electrocutioner 6000",
["encounterID"] = 380,
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[122874] = {
["source"] = "Elder Regail",
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[30615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Scryer",
["npcID"] = 17478,
},
[385277] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[379134] = {
["source"] = "Magmasworn Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190210,
},
[194284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[446328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungerer of the Deeps",
["npcID"] = 221199,
},
[168082] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[188270] = {
["source"] = "Black Rook Falcon",
["event"] = "SPELL_CAST_START",
["npcID"] = 93064,
},
[448444] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[383231] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[198379] = {
["encounterName"] = "Archdruid Glaidalis",
["source"] = "Archdruid Glaidalis",
["encounterID"] = 1836,
["event"] = "SPELL_CAST_START",
["npcID"] = 96512,
},
[440181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boskroot Brute",
["npcID"] = 212736,
},
[419870] = {
["encounterName"] = "Kyrioss",
["source"] = "Kyrioss",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 209230,
},
[175250] = {
["source"] = "Beatface",
["event"] = "SPELL_CAST_START",
["npcID"] = 81264,
},
[442387] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[450546] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[361913] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[171155] = {
["source"] = "Skull Thrash",
["event"] = "SPELL_CAST_START",
["npcID"] = 85733,
},
[442618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazaar Guard",
["npcID"] = 220974,
},
[431714] = {
["source"] = "Dark Apothecary",
["event"] = "SPELL_CAST_START",
["npcID"] = 219651,
},
[274703] = {
["source"] = "Drowned Depthbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 134418,
},
[391425] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frostwrought Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198308,
},
[418046] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[411903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[450197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skittering Swarmer",
["npcID"] = 208245,
},
[59179] = {
["source"] = "Titanium Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28965,
},
[418047] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[297230] = {
["source"] = "Fathom Ray",
["event"] = "SPELL_CAST_START",
["npcID"] = 145967,
},
[256138] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Honor Guard",
["npcID"] = 127799,
},
[450786] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[352520] = {
["encounterName"] = "The Jailer",
["source"] = "Kevin's Oozeling",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 178601,
},
[193682] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[452013] = {
["source"] = "Tempest Wolf",
["event"] = "SPELL_CAST_START",
["npcID"] = 222797,
},
[383237] = {
["source"] = "Provoking Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188697,
},
[418049] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[411906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Chemist",
["npcID"] = 205656,
},
[449965] = {
["source"] = "Raging Roots",
["event"] = "SPELL_CAST_START",
["npcID"] = 216250,
},
[172816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[429487] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[456782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Workmaster Nast",
["npcID"] = 213200,
},
[428103] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Frost Witch",
["npcID"] = 44404,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[308669] = {
["encounterName"] = "Overlord Mathias Shaw",
["source"] = "Eye of Chaos",
["encounterID"] = 2376,
["event"] = "SPELL_CAST_START",
["npcID"] = 158315,
},
[418051] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[429545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtouched Speaker",
["npcID"] = 223469,
},
[440372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Undercrawler",
["npcID"] = 215739,
},
[95826] = {
["source"] = "Orgrimmar Wind Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 51346,
},
[378394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seaborne Elemental",
["npcID"] = 214549,
},
[185493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Archivist",
["npcID"] = 157016,
},
[351976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torment Golem",
["npcID"] = 176598,
},
[171159] = {
["source"] = "Tailthrasher Vinebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 85725,
},
[141421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[411910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[432142] = {
["source"] = "Nerubian War-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 222731,
},
[142296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Shaman Xorenth",
["npcID"] = 70683,
},
[431697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[428293] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[388529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seabreaker Skrog",
["npcID"] = 192931,
},
[114646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[146180] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Staff of Resonating Water",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 72810,
},
[411912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[141187] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 67426,
},
[407817] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[418056] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[313621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Falconer Amenophis",
["npcID"] = 158491,
},
[15245] = {
["encounterName"] = "Witch Doctor Zum'rah",
["source"] = "Witch Doctor Zum'rah",
["encounterID"] = 597,
["event"] = "SPELL_CAST_START",
["npcID"] = 7271,
},
[7655] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thule Ravenclaw",
["npcID"] = 47023,
},
[311574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[436180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Thunder Elemental",
["npcID"] = 222888,
},
[430109] = {
["source"] = "Cursed Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207198,
},
[141380] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[143339] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Rik'kal the Dissector",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71158,
},
[462686] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[374343] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[375056] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[311576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jesh'ra",
["npcID"] = 159764,
},
[387343] = {
["source"] = "Bouldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193644,
},
[450182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Mudspawn",
["npcID"] = 219897,
},
[366866] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[377105] = {
["source"] = "Vault Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 190510,
},
[374192] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[141318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Headhunter",
["npcID"] = 70473,
},
[375058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grasslands Stomper",
["npcID"] = 195219,
},
[176127] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[156829] = {
["source"] = "Gul'kosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 78437,
},
[223381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dire Shaman",
["npcID"] = 112153,
},
[8398] = {
["source"] = "Hakkari Frostwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 5291,
},
[168092] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[272672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grand Ma'da Ateena",
["npcID"] = 121504,
},
[128970] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Guardian",
["npcID"] = 61783,
},
[366869] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[22883] = {
["source"] = "Atal'ai High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 5273,
},
[136986] = {
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 69388,
},
[427432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[122406] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Wind Lord Mel'jarak",
["npcID"] = 62397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1498,
},
[444692] = {
["source"] = "Ramolith Curlhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 221672,
},
[169117] = {
["source"] = "Kor'gall",
["event"] = "SPELL_CAST_START",
["npcID"] = 77020,
},
[145568] = {
["source"] = "Overlord Runthak",
["event"] = "SPELL_CAST_START",
["npcID"] = 72191,
},
[143280] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Skeer the Bloodseeker",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71152,
},
[141327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Fizzel",
["npcID"] = 70963,
},
[403731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[130115] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[137995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[431612] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[411923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diganthor",
["npcID"] = 204434,
},
[145569] = {
["source"] = "Hellscream Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72194,
},
[171166] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charl Doomwing",
["npcID"] = 81548,
},
[319775] = {
["source"] = "Swiftwing Larion",
["event"] = "SPELL_CAST_START",
["npcID"] = 160569,
},
[444055] = {
["source"] = "Rampaging Threadling",
["event"] = "SPELL_CAST_START",
["npcID"] = 222730,
},
[373017] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[375065] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[29927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spell Shade",
["npcID"] = 16525,
},
[142222] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[146511] = {
["source"] = "Sra'thik Amber-Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 72929,
},
[176280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[425381] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[120215] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[389401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Sea-Shaman",
["npcID"] = 214435,
},
[111008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[427428] = {
["source"] = "Greedy Gessie",
["event"] = "SPELL_CAST_START",
["npcID"] = 209936,
},
[142298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embercore",
["npcID"] = 70663,
},
[405784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarasek Boarder",
["npcID"] = 203307,
},
[59182] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[65215] = {
["source"] = "Lord Magmathar",
["event"] = "SPELL_CAST_START",
["npcID"] = 34295,
},
[102998] = {
["source"] = "Xiao",
["event"] = "SPELL_CAST_START",
["npcID"] = 54926,
},
[35377] = {
["source"] = "Subjugated Firestarter",
["event"] = "SPELL_CAST_START",
["npcID"] = 46838,
},
[116725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Husshun",
["npcID"] = 54925,
},
[137994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 69702,
},
[425379] = {
["source"] = "Flamespreader",
["event"] = "SPELL_CAST_START",
["npcID"] = 210294,
},
[119843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Guardian",
["npcID"] = 61766,
},
[173798] = {
["source"] = "Ontogen the Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 82372,
},
[172193] = {
["source"] = "Jandvik Bonepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 100948,
},
[172774] = {
["source"] = "Gronn Rockthrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 80689,
},
[145288] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71395,
},
[22938] = {
["source"] = "Arcane Remnant",
["event"] = "SPELL_CAST_START",
["npcID"] = 45728,
},
[385310] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[403740] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[373024] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[448791] = {
["source"] = "Ardent Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 206704,
},
[117309] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[403741] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[273844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167664,
},
[411958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iridikron's Creation",
["npcID"] = 205691,
},
[409885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[216800] = {
["source"] = "Thistleleaf Menace",
["event"] = "SPELL_CAST_START",
["npcID"] = 91472,
},
[422172] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[171171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Charl Doomwing",
["npcID"] = 81548,
},
[385313] = {
["source"] = "Primalist Shockcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195119,
},
[444698] = {
["source"] = "Riftwalker Nilara",
["event"] = "SPELL_CAST_START",
["npcID"] = 214644,
},
[373027] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[145564] = {
["source"] = "Kor'kron Arcweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 71771,
},
[176291] = {
["source"] = "Tarlna Thorncaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 83826,
},
[118865] = {
["source"] = "Jade Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 62619,
},
[394660] = {
["source"] = "Bluescale",
["event"] = "SPELL_CAST_START",
["npcID"] = 188723,
},
[59183] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[122784] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[139319] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 70236,
},
[286695] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Retribution",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146491,
},
[428345] = {
["source"] = "Molten Scorpid",
["event"] = "SPELL_CAST_START",
["npcID"] = 213696,
},
[176292] = {
["source"] = "Tarlna Infested",
["event"] = "SPELL_CAST_START",
["npcID"] = 83824,
},
[400802] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 187676,
},
[389412] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[76688] = {
["isChanneled"] = true,
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40019,
},
[418081] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[446519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mycotic Shalehorn",
["npcID"] = 212704,
},
[147351] = {
["source"] = "Fallen Pool Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73342,
},
[375079] = {
["source"] = "Squallbringer Cyraz",
["event"] = "SPELL_CAST_START",
["npcID"] = 190370,
},
[418082] = {
["source"] = "Felhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 206090,
},
[405821] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[384538] = {
["source"] = "Memory of a Tuskarr Hero",
["event"] = "SPELL_CAST_START",
["npcID"] = 194731,
},
[161509] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[258777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Oarsman",
["npcID"] = 127111,
},
[126958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Warden",
["npcID"] = 64061,
},
[420125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roth the Earthwound",
["npcID"] = 226300,
},
[14030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Warden",
["npcID"] = 8890,
},
[393511] = {
["source"] = "Cauldronbearer Blakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 186783,
},
[444705] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[373034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Mudrunner",
["npcID"] = 186690,
},
[76682] = {
["source"] = "Twilight Element Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 40017,
},
[172771] = {
["source"] = "Grom'kar Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 86809,
},
[68664] = {
["source"] = "Zapper Gnome",
["event"] = "SPELL_CAST_START",
["npcID"] = 36384,
},
[198820] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[399656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[426277] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[145489] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73724,
},
[388975] = {
["isChanneled"] = true,
["source"] = "Matriarch Remalla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193246,
},
[117187] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[415435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Moment",
["npcID"] = 206064,
},
[313652] = {
["encounterName"] = "The Hivemind",
["source"] = "Ka'zir",
["npcID"] = 157253,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[387398] = {
["source"] = "Worldbreaker Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 185589,
},
[114117] = {
["isChanneled"] = true,
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61546,
},
[168105] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83892,
},
[169129] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Backdraft",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 84464,
},
[145550] = {
["source"] = "Kor'kron Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 72150,
},
[162986] = {
["source"] = "Scavenging Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83448,
},
[180392] = {
["source"] = "Eredar Riftweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 92450,
},
[115289] = {
["encounterName"] = "Thalnos the Soulrender",
["source"] = "Thalnos the Soulrender",
["npcID"] = 59789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1423,
},
[215204] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Vigilant Duskwatch",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104918,
},
[440615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Shadowcaster",
["npcID"] = 213405,
},
[139228] = {
["source"] = "Zandalari High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 69906,
},
[125914] = {
["source"] = "Gatecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 64479,
},
[133990] = {
["source"] = "Thane Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 67636,
},
[391470] = {
["source"] = "Clove",
["event"] = "SPELL_CAST_START",
["npcID"] = 194457,
},
[448818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[264510] = {
["source"] = "Crazed Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 131849,
},
[389423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thieving Conjurer",
["npcID"] = 196388,
},
[183465] = {
["source"] = "Tarspitter Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 91001,
},
[426283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedheart Invader",
["npcID"] = 212389,
},
[395567] = {
["source"] = "Gravlion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193654,
},
[216796] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seirdr",
["npcID"] = 93444,
},
[146606] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[393520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ceeqa the Peacetaker",
["npcID"] = 188708,
},
[404932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[147290] = {
["source"] = "Imperial Python",
["event"] = "SPELL_CAST_START",
["npcID"] = 73163,
},
[399664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igneous Darkness",
["npcID"] = 202866,
},
[33844] = {
["source"] = "Kengtus Pranch the Patient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82012,
},
[395196] = {
["source"] = "Volcanakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 200911,
},
[34356] = {
["isChanneled"] = true,
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[146607] = {
["source"] = "Corrupted Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72983,
},
[377140] = {
["source"] = "River Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 191618,
},
[411952] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[136990] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[399666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[35892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Annihilator",
["npcID"] = 18856,
},
[179101] = {
["source"] = "Hatecoil Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 88089,
},
[373046] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[375094] = {
["source"] = "Swiftfoot Tallstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 192641,
},
[188587] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[411954] = {
["isChanneled"] = true,
["source"] = "Infinite Timeslicer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205384,
},
[274755] = {
["source"] = "Seer Drannix",
["event"] = "SPELL_CAST_START",
["npcID"] = 146443,
},
[424241] = {
["source"] = "Amirdrassil Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207769,
},
[176301] = {
["event"] = "SPELL_CAST_START",
["source"] = "Everbloom Waterspeaker",
["npcID"] = 88261,
},
[452910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zilthara",
["npcID"] = 220270,
},
[405812] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[322980] = {
["source"] = "Wayward Gormling",
["event"] = "SPELL_CAST_START",
["npcID"] = 160713,
},
[44224] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["encounterID"] = 1894,
["event"] = "SPELL_CAST_START",
["npcID"] = 24664,
},
[360775] = {
["source"] = "Sandskim Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 185511,
},
[389431] = {
["source"] = "Bazual",
["event"] = "SPELL_CAST_START",
["npcID"] = 193532,
},
[150705] = {
["source"] = "Grom'kar Siegesmith",
["event"] = "SPELL_CAST_START",
["npcID"] = 80552,
},
[393527] = {
["source"] = "Cracktooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 187528,
},
[199389] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[342168] = {
["source"] = "Champion of Wisdom",
["event"] = "SPELL_CAST_START",
["npcID"] = 170833,
},
[147309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Windfeather Nestkeeper",
["npcID"] = 72761,
},
[41986] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Angered Soul Fragment",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23398,
},
[444722] = {
["source"] = "Zealous Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 207949,
},
[389433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qiraji Prophet",
["npcID"] = 195641,
},
[150706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Bonerender",
["npcID"] = 96535,
},
[388532] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[125980] = {
["source"] = "Quid",
["event"] = "SPELL_CAST_START",
["npcID"] = 58771,
},
[415403] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201579,
},
[113690] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[385339] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[268050] = {
["source"] = "Tidesage Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 136186,
},
[389435] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[448820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Skullface",
["npcID"] = 203951,
},
[360767] = {
["source"] = "Lured Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 181879,
},
[387388] = {
["source"] = "Worldbreaker Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 185595,
},
[260262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Effusion",
["npcID"] = 130139,
},
[130120] = {
["source"] = "Apparition of Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 66100,
},
[120789] = {
["encounterName"] = "Commander Vo'jak",
["source"] = "Commander Vo'jak",
["encounterID"] = 1502,
["event"] = "SPELL_CAST_START",
["npcID"] = 61634,
},
[403771] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[414010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[449937] = {
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 222959,
},
[217260] = {
["source"] = "Mudfin Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 186679,
},
[403772] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[406934] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[144461] = {
["source"] = "Chi-Ji",
["event"] = "SPELL_CAST_START",
["npcID"] = 71952,
},
[424234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amirdrassil Sentinel",
["npcID"] = 207769,
},
[413387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[446776] = {
["source"] = "War Lynx",
["event"] = "SPELL_CAST_START",
["npcID"] = 206699,
},
[399678] = {
["source"] = "Rampant Shadowflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 203698,
},
[147422] = {
["source"] = "Ordon Candlekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72875,
},
[193712] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["encounterID"] = 1811,
["event"] = "SPELL_CAST_START",
["npcID"] = 91789,
},
[137399] = {
["encounterName"] = "Jin'rokh the Breaker",
["source"] = "Jin'rokh the Breaker",
["encounterID"] = 1577,
["event"] = "SPELL_CAST_START",
["npcID"] = 69465,
},
[317769] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Tracker",
["npcID"] = 154461,
},
[377154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[297292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodian Thonar",
["npcID"] = 185011,
},
[373059] = {
["encounterName"] = "The Primal Council",
["source"] = "Kadros Icewrath",
["npcID"] = 187771,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[383298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Lava Elemental",
["npcID"] = 182815,
},
[116192] = {
["isChanneled"] = true,
["source"] = "Mist Creeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56304,
},
[140400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zandalari Prophet",
["npcID"] = 70557,
},
[235692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Darius Crowley",
["npcID"] = 213057,
},
[115809] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[388918] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[395586] = {
["source"] = "Spellforged Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194402,
},
[389443] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[391491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sootscale the Indomitable",
["npcID"] = 190307,
},
[409921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[79930] = {
["source"] = "Darbel Montrose",
["event"] = "SPELL_CAST_START",
["npcID"] = 142688,
},
[114182] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[360373] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[303439] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kelfin Scout",
["npcID"] = 156265,
},
[316951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[6728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerspine Siren",
["npcID"] = 2371,
},
[319843] = {
["source"] = "Bonescarred Veteran",
["event"] = "SPELL_CAST_START",
["npcID"] = 168331,
},
[176309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twisted Guardian",
["npcID"] = 88279,
},
[452926] = {
["source"] = "Zilthara",
["event"] = "SPELL_CAST_START",
["npcID"] = 220270,
},
[389446] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Nullification Device",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 196712,
},
[446807] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222787,
},
[385351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Arcanogolem",
["npcID"] = 201554,
},
[41188] = {
["source"] = "Ashtongue Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 22847,
},
[300777] = {
["source"] = "Slime Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 151792,
},
[167095] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[111667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evoker",
["npcID"] = 58756,
},
[193716] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[113134] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[138427] = {
["source"] = "Gurubashi Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 69905,
},
[40946] = {
["encounterName"] = "Supremus",
["source"] = "Illidari Fearbringer",
["encounterID"] = 602,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22954,
},
[116710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zhi-Zhi",
["npcID"] = 54924,
},
[114087] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[110963] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "Scarlet Purifier",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 58569,
},
[277920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jessibelle Moonshield",
["npcID"] = 148390,
},
[193717] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[282153] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["encounterID"] = 2276,
["event"] = "SPELL_CAST_START",
["npcID"] = 144796,
},
[145119] = {
["source"] = "Storeroom Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 73152,
},
[34871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbrafen Witchdoctor",
["npcID"] = 20115,
},
[297302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Endless Hunger Totem",
["npcID"] = 153141,
},
[121762] = {
["source"] = "Sik'thik Builder",
["event"] = "SPELL_CAST_START",
["npcID"] = 62633,
},
[334162] = {
["source"] = "Malifis",
["event"] = "SPELL_CAST_START",
["npcID"] = 166908,
},
[393547] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[359829] = {
["encounterName"] = "Skolex, the Insatiable Ravener",
["source"] = "Skolex",
["encounterID"] = 2542,
["event"] = "SPELL_CAST_START",
["npcID"] = 181395,
},
[392685] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 198081,
},
[285017] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[450885] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[428360] = {
["source"] = "Firelands Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210293,
},
[15503] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Warlord Salaris",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24559,
},
[392659] = {
["source"] = "Crazed Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 194224,
},
[409931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[444743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Mage",
["npcID"] = 221760,
},
[427404] = {
["encounterName"] = "Kyrioss",
["source"] = "Voidrider",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[195767] = {
["source"] = "Slumber",
["event"] = "SPELL_CAST_START",
["npcID"] = 98890,
},
[385359] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[272364] = {
["source"] = "Congealed Oil",
["event"] = "SPELL_CAST_START",
["npcID"] = 150698,
},
[306735] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[8040] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[120929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abomination of Anger",
["npcID"] = 61707,
},
[113641] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[124967] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1500,
},
[388977] = {
["isChanneled"] = true,
["source"] = "Matriarch Remalla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 193246,
},
[418125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[130466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Grunt",
["npcID"] = 66269,
},
[42729] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[427402] = {
["source"] = "Cursed Rookguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 207197,
},
[287070] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[387410] = {
["source"] = "Scalesmith Mita",
["event"] = "SPELL_CAST_START",
["npcID"] = 191010,
},
[34360] = {
["isChanneled"] = true,
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 18420,
},
[448843] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[385363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[387411] = {
["source"] = "Soulharvester Galtmaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 195927,
},
[166077] = {
["source"] = "Blackrock Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 80468,
},
[26262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Tendril",
["npcID"] = 65282,
},
[394878] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Flamecaller",
["npcID"] = 198500,
},
[403794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[169690] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[42024] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Elementalist",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 23523,
},
[368983] = {
["source"] = "Raging Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 194095,
},
[123490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Bonesmasher",
["npcID"] = 63030,
},
[39670] = {
["source"] = "Illidari Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22853,
},
[407891] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[368984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186605,
},
[362841] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Fracturing Rift Blast Portal",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 183663,
},
[260275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutosaur",
["npcID"] = 122107,
},
[317791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[147649] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[422233] = {
["encounterName"] = "Skarmorak",
["source"] = "Skarmorak",
["npcID"] = 210156,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2880,
},
[425889] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["npcID"] = 208445,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2731,
},
[366938] = {
["source"] = "Taskmaster Xy'pro",
["event"] = "SPELL_CAST_START",
["npcID"] = 185032,
},
[393559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhuzast the Tempest",
["npcID"] = 197409,
},
[297315] = {
["source"] = "Greater Void Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 153130,
},
[385390] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[200700] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[147650] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[354653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Troz'igal",
["npcID"] = 179560,
},
[414038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aquifon",
["npcID"] = 203468,
},
[154331] = {
["source"] = "Grove Cultivator Kados",
["event"] = "SPELL_CAST_START",
["npcID"] = 133104,
},
[394972] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 197148,
},
[195344] = {
["source"] = "Drogbar Manathirster",
["event"] = "SPELL_CAST_START",
["npcID"] = 95866,
},
[274792] = {
["source"] = "Released Crawg",
["event"] = "SPELL_CAST_START",
["npcID"] = 140149,
},
[225042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Feeler",
["npcID"] = 113088,
},
[450899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Forager",
["npcID"] = 222976,
},
[428374] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[166081] = {
["source"] = "Blackrock Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81063,
},
[191678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Viletongue Belcher",
["npcID"] = 96480,
},
[368990] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[292826] = {
["source"] = "Etruvis the Vassal",
["event"] = "SPELL_CAST_START",
["npcID"] = 151041,
},
[405850] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Sundered Destroyer",
["npcID"] = 201753,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[264038] = {
["source"] = "Coven Thornshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 131666,
},
[418137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[411994] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Chronoweaver",
["npcID"] = 205384,
},
[373087] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Blazebound Firestorm",
["npcID"] = 189886,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[41455] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[37945] = {
["source"] = "Greater Felfire Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 21462,
},
[362849] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Artificer Xy'mox",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 183501,
},
[274796] = {
["source"] = "Necrotic Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 146459,
},
[77721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thule Ravenclaw",
["npcID"] = 47023,
},
[147653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tsavo'ka",
["npcID"] = 72808,
},
[86633] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["npcID"] = 46264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1145,
},
[381280] = {
["source"] = "Uktulut Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 193203,
},
[301418] = {
["source"] = "Mechanized Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 154448,
},
[111594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[84469] = {
["source"] = "Rok'nah Felcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65507,
},
[195585] = {
["source"] = "Helarjar Soulthief",
["event"] = "SPELL_CAST_START",
["npcID"] = 115291,
},
[407902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Farseer",
["npcID"] = 204206,
},
[219913] = {
["source"] = "Violent Crageater",
["event"] = "SPELL_CAST_START",
["npcID"] = 95916,
},
[264560] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[115814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greenwood Trickster",
["npcID"] = 54987,
},
[147529] = {
["source"] = "Cursed Hozen Swabby",
["event"] = "SPELL_CAST_START",
["npcID"] = 71920,
},
[393569] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[74613] = {
["source"] = "Dark Ranger",
["event"] = "SPELL_CAST_START",
["npcID"] = 48269,
},
[389474] = {
["source"] = "Frozion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193655,
},
[393588] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Broodguardian Ziruss",
["npcID"] = 198214,
},
[110579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Hatchling",
["npcID"] = 58384,
},
[387427] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[166085] = {
["source"] = "Burning Blade Saberguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 81129,
},
[167109] = {
["source"] = "Scavenger Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 83447,
},
[88170] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turbulent Squall",
["npcID"] = 45924,
},
[130414] = {
["source"] = "Ed",
["event"] = "SPELL_CAST_START",
["npcID"] = 82003,
},
[260282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutosaur",
["npcID"] = 122107,
},
[278919] = {
["source"] = "Decrepit Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 146227,
},
[207865] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[307008] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Gaze of Madness",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157442,
},
[223423] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Tainted Bloodpetal",
["npcID"] = 112118,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1873,
},
[111715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[92266] = {
["source"] = "Irradiated Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 6329,
},
[86620] = {
["encounterName"] = "Hogger",
["source"] = "Hogger",
["npcID"] = 46254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1144,
},
[389478] = {
["source"] = "Darktooth Spirit-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195267,
},
[389487] = {
["source"] = "Lookout Mordren",
["event"] = "SPELL_CAST_START",
["npcID"] = 193668,
},
[385383] = {
["source"] = "Forge-Keep Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 192700,
},
[327054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Epilon",
["npcID"] = 158869,
},
[307569] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[175302] = {
["source"] = "Char the Burning",
["event"] = "SPELL_CAST_START",
["npcID"] = 82311,
},
[387440] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[56632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahn'kahar Web Winder",
["npcID"] = 30276,
},
[41183] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[144089] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[183202] = {
["source"] = "Dread-Rider Malwick",
["event"] = "SPELL_CAST_START",
["npcID"] = 90902,
},
[298488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Bonecrusher",
["npcID"] = 153531,
},
[186302] = {
["source"] = "Helhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 105532,
},
[142539] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71397,
},
[385386] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[106864] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[166714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terokk",
["npcID"] = 82820,
},
[399721] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[298485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scrapbone Trashtosser",
["npcID"] = 151660,
},
[86636] = {
["encounterName"] = "Lord Overheat",
["source"] = "Lord Overheat",
["npcID"] = 46264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1145,
},
[440131] = {
["source"] = "Alleria Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 215014,
},
[131940] = {
["event"] = "SPELL_CAST_START",
["source"] = "Giant Siftworm",
["npcID"] = 67084,
},
[200901] = {
["source"] = "Solsten",
["event"] = "SPELL_CAST_START",
["npcID"] = 97219,
},
[415556] = {
["source"] = "Dr. Boom",
["event"] = "SPELL_CAST_START",
["npcID"] = 215146,
},
[377206] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["npcID"] = 189813,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2635,
},
[396674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ripsaw the Stalker",
["npcID"] = 193153,
},
[418153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderclaw Stalker",
["npcID"] = 207084,
},
[41276] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[163541] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 79545,
},
[99947] = {
["encounterName"] = "Shannox",
["source"] = "Rageface",
["npcID"] = 53695,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1205,
},
[426345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Touched Elemental",
["npcID"] = 212400,
},
[50403] = {
["source"] = "Wastes Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 28005,
},
[405868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[154828] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[393582] = {
["source"] = "Cindershard Igniter",
["event"] = "SPELL_CAST_START",
["npcID"] = 198382,
},
[412012] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Infinite Timeslicer",
["npcID"] = 205408,
},
[111722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[407917] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[319298] = {
["source"] = "Torgok",
["event"] = "SPELL_CAST_START",
["npcID"] = 162817,
},
[40251] = {
["encounterName"] = "Teron Gorefiend",
["source"] = "Teron Gorefiend",
["encounterID"] = 604,
["event"] = "SPELL_CAST_START",
["npcID"] = 22871,
},
[389488] = {
["source"] = "Srivantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 201555,
},
[260879] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[393584] = {
["source"] = "Horned Armoredon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190339,
},
[123499] = {
["event"] = "SPELL_CAST_START",
["source"] = "Set'thik Fanatic",
["npcID"] = 63031,
},
[274815] = {
["source"] = "Seer Drannix",
["event"] = "SPELL_CAST_START",
["npcID"] = 146443,
},
[398720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[250050] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[116838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Gormal",
["npcID"] = 55016,
},
[115054] = {
["isChanneled"] = true,
["source"] = "Bog Crocolisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54558,
},
[351621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Woebringer",
["npcID"] = 176573,
},
[418159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Varian Wrynn",
["npcID"] = 205308,
},
[215241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Executor",
["npcID"] = 115595,
},
[111723] = {
["encounterName"] = "Raigonn",
["source"] = "Raigonn",
["npcID"] = 56877,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1419,
},
[427657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[200905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["npcID"] = 96015,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1850,
},
[426273] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Winged Goblin",
["npcID"] = 214483,
},
[151253] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Death Speaker Jargba",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75152,
},
[179017] = {
["source"] = "Fathom-Commander Zarrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 88090,
},
[418161] = {
["source"] = "Kirkessen the Zealous",
["event"] = "SPELL_CAST_START",
["npcID"] = 207821,
},
[428400] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[168929] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 83612,
},
[312712] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Forgotten",
["npcID"] = 157176,
},
[303488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wekemara",
["npcID"] = 152671,
},
[428401] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[260291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladeguard Elite",
["npcID"] = 130451,
},
[195787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Selentia",
["npcID"] = 99524,
},
[138966] = {
["source"] = "Shadowed Voodoo Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 70060,
},
[379256] = {
["encounterName"] = "Azureblade",
["source"] = "Vault Guard",
["npcID"] = 192955,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2585,
},
[389495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terillod the Devout",
["npcID"] = 193171,
},
[167119] = {
["source"] = "Scavenger Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 83447,
},
[304537] = {
["source"] = "Expedition Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 152147,
},
[395639] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[40508] = {
["encounterName"] = "Gurtogg Bloodboil",
["source"] = "Gurtogg Bloodboil",
["encounterID"] = 605,
["event"] = "SPELL_CAST_START",
["npcID"] = 22948,
},
[442408] = {
["source"] = "Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214649,
},
[32829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[395640] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[389497] = {
["source"] = "Eternal Sand",
["event"] = "SPELL_CAST_START",
["npcID"] = 187475,
},
[167120] = {
["source"] = "Grom'kar Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81279,
},
[409975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Commander",
["npcID"] = 202109,
},
[147289] = {
["source"] = "Death Adder",
["event"] = "SPELL_CAST_START",
["npcID"] = 72841,
},
[167883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terokk",
["npcID"] = 83554,
},
[69562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[41471] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[59706] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[256198] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[411002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloud Prince",
["npcID"] = 45917,
},
[44503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wretched Husk",
["npcID"] = 24690,
},
[256865] = {
["source"] = "Crimsonwood Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 137150,
},
[418192] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[407245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrinekeeper Qanosh",
["npcID"] = 199839,
},
[193376] = {
["encounterName"] = "Ularogg Cragshaper",
["source"] = "Ularogg Cragshaper",
["encounterID"] = 1791,
["event"] = "SPELL_CAST_START",
["npcID"] = 91004,
},
[387453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[256199] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[204611] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[393597] = {
["source"] = "Kraunot",
["event"] = "SPELL_CAST_START",
["npcID"] = 186401,
},
[412027] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[332165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Howling Spectre",
["npcID"] = 170414,
},
[29582] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[147669] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Grunt",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72941,
},
[63802] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[11921] = {
["source"] = "Hellfire Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 19016,
},
[175314] = {
["source"] = "Vindicator Maraad",
["event"] = "SPELL_CAST_START",
["npcID"] = 78554,
},
[360835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[313737] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Abyssal Watcher",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[405886] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Dragonfire Golem",
["npcID"] = 203230,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2689,
},
[411000] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[335233] = {
["source"] = "Ravenous Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169499,
},
[41277] = {
["source"] = "Bonechewer Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 23196,
},
[389505] = {
["source"] = "Vernon Whitlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 212812,
},
[399744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Construct",
["npcID"] = 200598,
},
[172818] = {
["source"] = "Covenant Paladin",
["event"] = "SPELL_CAST_START",
["npcID"] = 184073,
},
[388474] = {
["source"] = "Quiescent Threshadon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194803,
},
[368277] = {
["isChanneled"] = true,
["source"] = "Corrupted Architect",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 183953,
},
[407936] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Neltharion",
["encounterID"] = 2684,
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[392569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[395650] = {
["source"] = "Conjured Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 199014,
},
[464240] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[399746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warp Crystal",
["npcID"] = 201082,
},
[200913] = {
["source"] = "Wyrmtongue Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 98792,
},
[251083] = {
["source"] = "Hanzabu",
["event"] = "SPELL_CAST_START",
["npcID"] = 124513,
},
[82800] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 68485,
},
[430247] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hallowed Monstrosity",
["npcID"] = 211933,
},
[133321] = {
["source"] = "Shieldwall Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67297,
},
[395652] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[315772] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[197797] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Risen Arcanist",
["npcID"] = 100486,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[303504] = {
["event"] = "SPELL_CAST_START",
["source"] = "Herald of the Queen",
["npcID"] = 154950,
},
[152792] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[300764] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slime Elemental",
["npcID"] = 151792,
},
[309648] = {
["encounterName"] = "Magister Umbric",
["source"] = "Magister Umbric",
["encounterID"] = 2377,
["event"] = "SPELL_CAST_START",
["npcID"] = 158035,
},
[374720] = {
["encounterName"] = "Leymor",
["source"] = "Leymor",
["npcID"] = 186644,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2582,
},
[111216] = {
["encounterName"] = "Armsmaster Harlan",
["source"] = "Armsmaster Harlan",
["npcID"] = 58632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1421,
},
[64059] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Brain of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33890,
},
[292227] = {
["source"] = "Algerson Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 149036,
},
[418180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glorious Vanguard",
["npcID"] = 208670,
},
[309451] = {
["encounterName"] = "Magister Umbric",
["source"] = "Magister Umbric",
["npcID"] = 158035,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2377,
},
[134059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilgewater Blastgineer",
["npcID"] = 67884,
},
[448897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mi'thk",
["npcID"] = 211582,
},
[147674] = {
["source"] = "Ordon Oathguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72892,
},
[313746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Reaper",
["npcID"] = 163044,
},
[360569] = {
["source"] = "Overgrown Geomental",
["event"] = "SPELL_CAST_START",
["npcID"] = 179007,
},
[311267] = {
["source"] = "Cultist Shadowblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 159632,
},
[393609] = {
["source"] = "Krojek The Shoreprowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187645,
},
[210131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Killclaw the Terrible",
["npcID"] = 153266,
},
[389514] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[276888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[385419] = {
["source"] = "Overseer Stonetongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 201552,
},
[393634] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[210099] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Dominator Tentacle",
["npcID"] = 105721,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1873,
},
[397134] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[292225] = {
["source"] = "Algerson Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 149036,
},
[264603] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[384933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[424328] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waxtail Browbeater",
["npcID"] = 213000,
},
[419185] = {
["source"] = "Invading Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206765,
},
[413704] = {
["source"] = "Ducks Devil",
["event"] = "SPELL_CAST_START",
["npcID"] = 200751,
},
[368295] = {
["source"] = "Corrupted Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 183953,
},
[257231] = {
["source"] = "Necrotic Echo",
["event"] = "SPELL_CAST_START",
["npcID"] = 145121,
},
[200918] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrath-Lord Lekos",
["npcID"] = 97069,
},
[313751] = {
["source"] = "Infused Amber Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 160930,
},
[389518] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormshackler Rynea",
["npcID"] = 189391,
},
[416139] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418187] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[44475] = {
["source"] = "Sunblade Mage Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 24683,
},
[393540] = {
["source"] = "Zhurtan the Riverboiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 188687,
},
[448912] = {
["source"] = "Shadowguard Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 216263,
},
[418188] = {
["source"] = "Shackled Flames of the Betrayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 207815,
},
[169179] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[260304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qy'telek",
["npcID"] = 130726,
},
[292223] = {
["source"] = "Algerson Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 149036,
},
[157390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Packleader",
["npcID"] = 78960,
},
[412046] = {
["source"] = "Monstrous Magmaclaw Snapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 204214,
},
[430476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hallowed Monstrosity",
["npcID"] = 211933,
},
[12098] = {
["source"] = "Illidari Dreadlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 21166,
},
[151774] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Molten Inferno Crystal",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 75308,
},
[255814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Honor Guard",
["npcID"] = 127757,
},
[364495] = {
["source"] = "Oracle Zoketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 181625,
},
[386555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
},
[425995] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[400752] = {
["source"] = "Travard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198947,
},
[405905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amniotic Ooze",
["npcID"] = 203072,
},
[208088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Greysworn",
["npcID"] = 104565,
},
[120946] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[144608] = {
["source"] = "Niuzao",
["event"] = "SPELL_CAST_START",
["npcID"] = 71954,
},
[389524] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 196946,
},
[114291] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[360856] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185314,
},
[305567] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[36645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temperamental Rumbler",
["npcID"] = 43480,
},
[448910] = {
["source"] = "Darklost Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 216260,
},
[381357] = {
["source"] = "Hunting Ottuk",
["event"] = "SPELL_CAST_START",
["npcID"] = 190267,
},
[163687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethekk Prophet",
["npcID"] = 80638,
},
[405908] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kartoros",
["npcID"] = 202977,
},
[309664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[369049] = {
["encounterName"] = "Emberon",
["source"] = "Vault Keeper",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 186107,
},
[395670] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[384961] = {
["source"] = "Rotbow Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186208,
},
[276901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Commander I'juk",
["npcID"] = 157985,
},
[369050] = {
["source"] = "Primalist Stormsurger",
["event"] = "SPELL_CAST_START",
["npcID"] = 188343,
},
[152801] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[356764] = {
["source"] = "Mawsworn Herald",
["event"] = "SPELL_CAST_START",
["npcID"] = 181408,
},
[383385] = {
["source"] = "Filth Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185656,
},
[295332] = {
["encounterName"] = "Abyssal Commander Sivara",
["source"] = "Abyssal Commander Sivara",
["encounterID"] = 2298,
["event"] = "SPELL_CAST_START",
["npcID"] = 151881,
},
[15547] = {
["source"] = "Stormpike Mountaineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 48482,
},
[404846] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[360589] = {
["source"] = "Iska, Outrider of Ruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 182114,
},
[385434] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[313763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baruk Stoneshaper",
["npcID"] = 155957,
},
[170208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kargath Bladefist",
["npcID"] = 84053,
},
[422023] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["npcID"] = 209333,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2820,
},
[207861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Genn Greymane",
["npcID"] = 214073,
},
[59710] = {
["source"] = "Vereesa Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 207816,
},
[382573] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthen Guardian",
["npcID"] = 184131,
},
[416152] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[418200] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[395675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Embar Firepath",
["npcID"] = 187767,
},
[405914] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[171233] = {
["event"] = "SPELL_CAST_START",
["source"] = "Biolante",
["npcID"] = 75207,
},
[369055] = {
["source"] = "Djaradin Crustshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186110,
},
[211999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 105629,
},
[299432] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[387504] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[418202] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Riftmage",
["npcID"] = 208698,
},
[38209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 210969,
},
[63038] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Guardian of Yogg-Saron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33136,
},
[118903] = {
["source"] = "Glintrok Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 61216,
},
[78828] = {
["isChanneled"] = true,
["source"] = "Blood Guard Gro'tash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 67927,
},
[395678] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[397726] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[375201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Divebeak Ohuna",
["npcID"] = 189373,
},
[286915] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Indomitable",
["npcID"] = 147745,
},
[134164] = {
["source"] = "Alliance Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 67900,
},
[313583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Meredy Huntswell",
["npcID"] = 156943,
},
[309674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torsheg",
["npcID"] = 157156,
},
[165578] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[41169] = {
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23339,
},
[400747] = {
["source"] = "Damaged Titan Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 201441,
},
[46042] = {
["source"] = "Sunblade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 24686,
},
[385442] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[412063] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Epoch Ripper",
["npcID"] = 205435,
},
[397729] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[152818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[434589] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overfiend",
["npcID"] = 217429,
},
[165093] = {
["source"] = "Verdant Mandragora",
["event"] = "SPELL_CAST_START",
["npcID"] = 81983,
},
[345554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Myrmidon",
["npcID"] = 184471,
},
[150759] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[418208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Prophet",
["npcID"] = 206474,
},
[179996] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfallen Construct",
["npcID"] = 90377,
},
[405922] = {
["source"] = "Kartoros",
["event"] = "SPELL_CAST_START",
["npcID"] = 202977,
},
[301487] = {
["source"] = "OOX-Avenger/MG",
["event"] = "SPELL_CAST_START",
["npcID"] = 151296,
},
[425819] = {
["encounterName"] = "Gnarlroot",
["source"] = "Tainted Treant",
["npcID"] = 211904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2820,
},
[360859] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[386411] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Teera",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186339,
},
[44538] = {
["source"] = "Ethereum Smuggler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24698,
},
[410019] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2693,
},
[395685] = {
["source"] = "Spellforged Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 184456,
},
[405924] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[58053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusader of Virtue",
["npcID"] = 30189,
},
[139498] = {
["source"] = "Corpse Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 68248,
},
[181477] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightfallen Construct",
["npcID"] = 90005,
},
[225289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 101106,
},
[14034] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[360875] = {
["source"] = "Engorged Annelid",
["event"] = "SPELL_CAST_START",
["npcID"] = 180722,
},
[388544] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[81020] = {
["source"] = "Blackscale Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 45984,
},
[33860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Annihilator",
["npcID"] = 18856,
},
[360876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custos",
["npcID"] = 185755,
},
[387497] = {
["source"] = "Time-Lost Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187244,
},
[177088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Hunter",
["npcID"] = 82938,
},
[378835] = {
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186362,
},
[412081] = {
["event"] = "SPELL_CAST_START",
["source"] = "Colossal Draconic Golem",
["npcID"] = 203826,
},
[417808] = {
["source"] = "Haywire Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 205889,
},
[424217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Sentinel",
["npcID"] = 216676,
},
[245706] = {
["source"] = "Shadowguard Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 122403,
},
[201411] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[59712] = {
["source"] = "Lady Sylvanas Windrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 46026,
},
[405929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellsworn Crecheguard",
["npcID"] = 203368,
},
[399786] = {
["isChanneled"] = true,
["source"] = "Unknown",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 201117,
},
[170910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethe",
["npcID"] = 80644,
},
[45101] = {
["source"] = "Dawnblade Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 24979,
},
[430503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomshadow",
["npcID"] = 208029,
},
[407978] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Ahnzon",
["npcID"] = 201792,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[196838] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 99868,
},
[368294] = {
["source"] = "Charged Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 185752,
},
[315830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 161571,
},
[309687] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Shredded Psyche",
["npcID"] = 158781,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[369072] = {
["source"] = "Plainswalker Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 187937,
},
[448944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Snuffercrusher",
["npcID"] = 218662,
},
[302816] = {
["source"] = "Crazed Earth Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 151638,
},
[388796] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["encounterID"] = 2563,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196482,
},
[118905] = {
["source"] = "Capacitor Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 61245,
},
[395694] = {
["source"] = "Primalist Shocktrooper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199037,
},
[364978] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[279003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Vanguard",
["npcID"] = 142082,
},
[290955] = {
["encounterName"] = "King Rastakhan",
["source"] = "Headhunter Gal'wana",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146326,
},
[395695] = {
["source"] = "Sleeping Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 196073,
},
[364979] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[286619] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[147694] = {
["source"] = "Cursed Hozen Swabby",
["event"] = "SPELL_CAST_START",
["npcID"] = 71920,
},
[423265] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[198888] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[285118] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146256,
},
[418222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[152814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Bone-Mender",
["npcID"] = 75713,
},
[368085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sorranos",
["npcID"] = 183722,
},
[138480] = {
["encounterName"] = "Dark Animus",
["source"] = "Large Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69700,
},
[271731] = {
["isChanneled"] = true,
["source"] = "Gnomish Gyro-Engineer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 148441,
},
[362934] = {
["source"] = "Creeping Brambles",
["event"] = "SPELL_CAST_START",
["npcID"] = 182215,
},
[196290] = {
["encounterName"] = "Serpentrix",
["source"] = "Stormwake Hydra",
["encounterID"] = 1813,
["event"] = "SPELL_CAST_START",
["npcID"] = 91792,
},
[142576] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Ka'roz the Locust",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71154,
},
[295359] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 151660,
},
[387508] = {
["source"] = "High Keeper Orendi",
["event"] = "SPELL_CAST_START",
["npcID"] = 205874,
},
[178412] = {
["source"] = "Ogron Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 83578,
},
[288441] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[418225] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[403891] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[150753] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[150768] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[418226] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[250096] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[299457] = {
["source"] = "Malfunctioning Scrapboss",
["event"] = "SPELL_CAST_START",
["npcID"] = 151683,
},
[384473] = {
["source"] = "Icegnaw Mantacorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 187826,
},
[398690] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[317894] = {
["source"] = "Stoneborn Rebel",
["event"] = "SPELL_CAST_START",
["npcID"] = 160823,
},
[287037] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[47939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xink's Shredder",
["npcID"] = 27061,
},
[427960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Fystia",
["npcID"] = 209893,
},
[80512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Redridge Drudger",
["npcID"] = 580,
},
[389560] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Reaver",
["npcID"] = 200756,
},
[309698] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[254959] = {
["source"] = "Dazar'ai Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 122984,
},
[453041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Matriarch Charfuria",
["npcID"] = 220890,
},
[198892] = {
["source"] = "Storm Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 97068,
},
[396641] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[287174] = {
["source"] = "Rustfeather",
["event"] = "SPELL_CAST_START",
["npcID"] = 152182,
},
[117372] = {
["source"] = "Polluted Viseclaw Scuttler",
["event"] = "SPELL_CAST_START",
["npcID"] = 68584,
},
[389562] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Great Shellkhan",
["npcID"] = 191305,
},
[391610] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[423771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elisande",
["npcID"] = 208668,
},
[25054] = {
["source"] = "Rok'nah Loa-Singer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64733,
},
[174787] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[191726] = {
["source"] = "Greater Lightning Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 97022,
},
[225514] = {
["source"] = "Irontide Brinecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 131303,
},
[395707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raszageth",
["npcID"] = 199031,
},
[389564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steamgill",
["npcID"] = 193123,
},
[314730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tisiphon",
["npcID"] = 157468,
},
[418233] = {
["source"] = "Vorus'arak",
["event"] = "SPELL_CAST_START",
["npcID"] = 205862,
},
[313798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abyssal Watcher",
["npcID"] = 161173,
},
[428139] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[391613] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[192631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash'golm",
["npcID"] = 96681,
},
[423260] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[244665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember of Azzinoth",
["npcID"] = 122712,
},
[144070] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[264024] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[79937] = {
["source"] = "Anruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 81998,
},
[144631] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[79490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckdweller",
["npcID"] = 43532,
},
[378208] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[412093] = {
["source"] = "Contaminated Titan Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 203834,
},
[286779] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146493,
},
[365921] = {
["source"] = "Bound Realmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183416,
},
[418237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[396637] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[387528] = {
["source"] = "Earthbound Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193795,
},
[150774] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["npcID"] = 40633,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[289230] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ancestral Avenger",
["npcID"] = 148483,
},
[284399] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Living Bomb",
["npcID"] = 146102,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[199481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusher",
["npcID"] = 97632,
},
[147703] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[395594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zurgaz Corebreaker",
["npcID"] = 193680,
},
[428004] = {
["isChanneled"] = true,
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210423,
},
[183539] = {
["source"] = "Rotdrool Grabber",
["event"] = "SPELL_CAST_START",
["npcID"] = 91002,
},
[88194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[385239] = {
["source"] = "Flare Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 202683,
},
[389572] = {
["source"] = "Time-Lost Devilsaur",
["event"] = "SPELL_CAST_START",
["npcID"] = 187262,
},
[406874] = {
["source"] = "Contaminated Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 204310,
},
[418241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet Skitra",
["npcID"] = 208491,
},
[420289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Stormchaser",
["npcID"] = 207276,
},
[445781] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[150776] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[189467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malace Shade",
["npcID"] = 97090,
},
[79721] = {
["source"] = "Forsaken Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 45376,
},
[265876] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[46150] = {
["source"] = "Coilskar Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 24696,
},
[221424] = {
["source"] = "Tormented Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 146809,
},
[289235] = {
["source"] = "Kal'ia Pa'kuaya",
["event"] = "SPELL_CAST_START",
["npcID"] = 148607,
},
[33805] = {
["source"] = "Wildhammer Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 19384,
},
[191732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Lightning Elemental",
["npcID"] = 97022,
},
[288410] = {
["encounterName"] = "Mekkatorque",
["source"] = "High Tinker Mekkatorque",
["encounterID"] = 2276,
["event"] = "SPELL_CAST_START",
["npcID"] = 144796,
},
[420292] = {
["source"] = "Tempest Conqueror",
["event"] = "SPELL_CAST_START",
["npcID"] = 207040,
},
[373194] = {
["source"] = "Windyfin Windbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187432,
},
[383433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Burning Colossus",
["npcID"] = 194147,
},
[333929] = {
["source"] = "Ylva",
["event"] = "SPELL_CAST_START",
["npcID"] = 177444,
},
[140539] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Defender",
["npcID"] = 200527,
},
[12542] = {
["source"] = "Shadowmoon Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 17694,
},
[372858] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["encounterID"] = 2606,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189232,
},
[268202] = {
["encounterName"] = "Gorak Tul",
["source"] = "Deathtouched Slaver",
["encounterID"] = 2117,
["event"] = "SPELL_CAST_START",
["npcID"] = 135552,
},
[144635] = {
["source"] = "Xuen",
["event"] = "SPELL_CAST_START",
["npcID"] = 71953,
},
[362976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Menacing Vespoid Worker",
["npcID"] = 183721,
},
[273767] = {
["source"] = "7th Legion Stalwart",
["event"] = "SPELL_CAST_START",
["npcID"] = 147168,
},
[106853] = {
["encounterName"] = "Master Snowdrift",
["source"] = "Master Snowdrift",
["encounterID"] = 1304,
["event"] = "SPELL_CAST_START",
["npcID"] = 56541,
},
[412104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lead Researcher Sytorian",
["npcID"] = 203067,
},
[174328] = {
["source"] = "Soulbinder Nyami",
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[423610] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208445,
},
[12468] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[200647] = {
["source"] = "Felguard Butcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 96494,
},
[405962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bronogg the Bully",
["npcID"] = 203386,
},
[199645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusher",
["npcID"] = 97632,
},
[401867] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[263961] = {
["source"] = "Heartsbane Soulcharmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 131812,
},
[200805] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Queen's Centurion",
["npcID"] = 103432,
},
[191735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Myrmidon",
["npcID"] = 98954,
},
[125056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Clefthoof",
["npcID"] = 165189,
},
[46406] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahunite Coldwave",
["npcID"] = 25756,
},
[314720] = {
["source"] = "Gamon",
["event"] = "SPELL_CAST_START",
["npcID"] = 158588,
},
[387465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[172005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ralshira",
["npcID"] = 86135,
},
[7978] = {
["source"] = "Goblin Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 35333,
},
[389583] = {
["source"] = "Dragonspawn Spell Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 196119,
},
[375249] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluebill Waddler",
["npcID"] = 192947,
},
[144642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Xuen",
["npcID"] = 71953,
},
[372056] = {
["encounterName"] = "The Primal Council",
["source"] = "Opalfang",
["npcID"] = 187772,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[402772] = {
["source"] = "Deepstrider Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 202312,
},
[163077] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 85942,
},
[369107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Construct",
["npcID"] = 200286,
},
[197880] = {
["source"] = "Bonespeaker Runeaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 93066,
},
[198904] = {
["source"] = "Rotheart Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 99358,
},
[375251] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[225207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felblade Assassin",
["npcID"] = 101100,
},
[157375] = {
["encounterName"] = "Gnarlroot",
["source"] = "Primal Storm Elemental",
["encounterID"] = 2820,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 77942,
},
[304479] = {
["event"] = "SPELL_CAST_START",
["source"] = "Writhing Soulmass",
["npcID"] = 185017,
},
[391634] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[459210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[179900] = {
["source"] = "Darkmoon Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 90304,
},
[200674] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vile Soulmaster",
["npcID"] = 97014,
},
[427384] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[135425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Hunter",
["npcID"] = 68334,
},
[427343] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[417735] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mycelial Growth",
["npcID"] = 208525,
},
[146688] = {
["source"] = "Dragonmaw Cannoneer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72365,
},
[427964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Incarnation",
["npcID"] = 213559,
},
[107140] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["npcID"] = 56754,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1303,
},
[33806] = {
["source"] = "Wildhammer Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 19384,
},
[183548] = {
["source"] = "Stoneclaw Grubmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 102404,
},
[418258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[420306] = {
["source"] = "Primalist Chainmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 211058,
},
[427342] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[255824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[393686] = {
["source"] = "Turboris",
["event"] = "SPELL_CAST_START",
["npcID"] = 187886,
},
[255220] = {
["source"] = "Hexbone Raiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 134816,
},
[69056] = {
["source"] = "Soulguard Watchman",
["event"] = "SPELL_CAST_START",
["npcID"] = 36478,
},
[34785] = {
["source"] = "Tempest-Forge Peacekeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18405,
},
[204574] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[412117] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[397783] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[391382] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 197671,
},
[410070] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["encounterID"] = 2680,
["event"] = "SPELL_CAST_START",
["npcID"] = 201320,
},
[173311] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[282209] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["encounterID"] = 2268,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 148962,
},
[10452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vermillion Flamelash",
["npcID"] = 45569,
},
[58438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Trickster",
["npcID"] = 30856,
},
[34121] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["npcID"] = 19514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[99172] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[312666] = {
["source"] = "High Executor Yothrim",
["event"] = "SPELL_CAST_START",
["npcID"] = 158597,
},
[204852] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[201839] = {
["source"] = "Taintheart Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 99366,
},
[453084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sweetspark the Oozeful",
["npcID"] = 220883,
},
[383452] = {
["source"] = "Rugren",
["event"] = "SPELL_CAST_START",
["npcID"] = 201563,
},
[80009] = {
["source"] = "Monishot",
["event"] = "SPELL_CAST_START",
["npcID"] = 82001,
},
[201399] = {
["source"] = "Dreadfire Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 100527,
},
[48054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[424408] = {
["source"] = "Bodwin",
["event"] = "SPELL_CAST_START",
["npcID"] = 209153,
},
[344546] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[98951] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[290437] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Laminaria",
["npcID"] = 146256,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[264153] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[327296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archilon",
["npcID"] = 158867,
},
[35124] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18420,
},
[264694] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[342500] = {
["source"] = "Champion of Humility",
["event"] = "SPELL_CAST_START",
["npcID"] = 170836,
},
[424419] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[250114] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Dragon Whelp",
["npcID"] = 8776,
},
[34879] = {
["source"] = "Bloodwarder Falconer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17994,
},
[408029] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Loszkeleth",
["npcID"] = 201790,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[88201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[201983] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113537,
},
[174777] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[365036] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Defense Matrix Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 184126,
},
[393696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[98952] = {
["encounterName"] = "Ragnaros",
["source"] = "Ragnaros",
["encounterID"] = 1203,
["event"] = "SPELL_CAST_START",
["npcID"] = 52409,
},
[9232] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 450,
["event"] = "SPELL_CAST_START",
["npcID"] = 209254,
},
[335187] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Engulfer",
["npcID"] = 183516,
},
[365903] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185346,
},
[421616] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[301177] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[424414] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[303310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theurgist Nitara",
["npcID"] = 155836,
},
[35511] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[299502] = {
["source"] = "Phleep",
["event"] = "SPELL_CAST_START",
["npcID"] = 193210,
},
[314708] = {
["source"] = "HK-3 Aerial Dissuasion Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 159261,
},
[110945] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Gu Cloudstrike",
["encounterID"] = 1303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56747,
},
[412129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[256846] = {
["source"] = "Dinomancer Kish'o",
["event"] = "SPELL_CAST_START",
["npcID"] = 129553,
},
[367079] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[164102] = {
["source"] = "Grimrail Laborer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81235,
},
[365901] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 185346,
},
[13952] = {
["source"] = "Lightsworn Vindicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 22861,
},
[257275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Bulwark",
["npcID"] = 133072,
},
[46153] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[192706] = {
["event"] = "SPELL_CAST_START",
["source"] = "Channeler Varisz",
["npcID"] = 100249,
},
[400954] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[369129] = {
["source"] = "Modak Flamespit",
["event"] = "SPELL_CAST_START",
["npcID"] = 186509,
},
[387559] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[111752] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1426,
},
[120455] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[200963] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fel Shocktrooper",
["npcID"] = 92776,
},
[346605] = {
["source"] = "Chained Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 182296,
},
[291316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[65351] = {
["source"] = "Wolvar Orphan",
["event"] = "SPELL_CAST_START",
["npcID"] = 33532,
},
[57780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelforged Defender",
["npcID"] = 33236,
},
[403943] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[332272] = {
["source"] = "Popo",
["event"] = "SPELL_CAST_START",
["npcID"] = 180028,
},
[424421] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[296276] = {
["source"] = "Juvenile Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 154181,
},
[420326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Ashwalker",
["npcID"] = 210504,
},
[397801] = {
["encounterName"] = "Wise Mari",
["source"] = "Wise Mari",
["npcID"] = 56448,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1418,
},
[81039] = {
["encounterName"] = "Viscous Fallout",
["source"] = "Irradiated Slime",
["encounterID"] = 378,
["event"] = "SPELL_CAST_START",
["npcID"] = 6218,
},
[147723] = {
["source"] = "Ordon Fire-Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72894,
},
[412136] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[87180] = {
["source"] = "Summoned Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 46820,
},
[424423] = {
["source"] = "Sergeant Shaynemail",
["event"] = "SPELL_CAST_START",
["npcID"] = 211291,
},
[451044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[387564] = {
["source"] = "Conjured Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 196102,
},
[162058] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[285177] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[385517] = {
["source"] = "Rotbow Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 187021,
},
[395756] = {
["source"] = "Qalashi Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 196336,
},
[406854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[257279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Bulwark",
["npcID"] = 133072,
},
[396615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[112992] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[392519] = {
["isChanneled"] = true,
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 197799,
},
[427670] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[432638] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[11538] = {
["source"] = "Marius Sunshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 113542,
},
[102241] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[180327] = {
["source"] = "Felsoul Trickster",
["event"] = "SPELL_CAST_START",
["npcID"] = 106375,
},
[264525] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[32422] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[414189] = {
["source"] = "Krrrn Trr Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205821,
},
[421402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Pyremancer",
["npcID"] = 209963,
},
[426206] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[267604] = {
["source"] = "Deadrot Budling",
["event"] = "SPELL_CAST_START",
["npcID"] = 136129,
},
[256922] = {
["source"] = "Faceless Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 131821,
},
[391665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ash Bugsbane",
["npcID"] = 197292,
},
[319994] = {
["source"] = "Satiated Sawtooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 164587,
},
[420334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Adranas",
["npcID"] = 209931,
},
[397809] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[268801] = {
["source"] = "Sandfury Axe Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 121017,
},
[197696] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1833,
},
[387571] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[414192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krrrn Trr Cryomancer",
["npcID"] = 204451,
},
[276993] = {
["source"] = "Ruul Onestone",
["event"] = "SPELL_CAST_START",
["npcID"] = 142683,
},
[200969] = {
["source"] = "King Tor",
["event"] = "SPELL_CAST_START",
["npcID"] = 97084,
},
[395763] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Flameslinger",
["npcID"] = 196336,
},
[121994] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[319966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lobber Jalrax",
["npcID"] = 161016,
},
[319997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Arbalest",
["npcID"] = 164510,
},
[305663] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[381430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Protector",
["npcID"] = 186849,
},
[365895] = {
["source"] = "Dominated Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 185574,
},
[46155] = {
["encounterName"] = "Selin Fireheart",
["source"] = "Selin Fireheart",
["encounterID"] = 1897,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24723,
},
[427510] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["npcID"] = 83894,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1757,
},
[121182] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Harthak Flameseeker",
["npcID"] = 61392,
},
[143638] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71515,
},
[393718] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[428530] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[377335] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[249093] = {
["source"] = "Nokali the Scarred",
["event"] = "SPELL_CAST_START",
["npcID"] = 125485,
},
[421971] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[161040] = {
["source"] = "Pack Boar",
["event"] = "SPELL_CAST_START",
["npcID"] = 80174,
},
[137491] = {
["encounterName"] = "Twin Empyreans",
["source"] = "Suen",
["npcID"] = 68904,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1560,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[82064] = {
["source"] = "John J. Keeshan",
["event"] = "SPELL_CAST_START",
["npcID"] = 43812,
},
[427579] = {
["source"] = "Stalwart Bristlebruin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210507,
},
[149416] = {
["source"] = "Vespoid Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 183257,
},
[116364] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["npcID"] = 60009,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1390,
},
[223417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grisly Trapper",
["npcID"] = 112162,
},
[120416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[291334] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[34637] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Sunseeker Channeler",
["encounterID"] = 1928,
["event"] = "SPELL_CAST_START",
["npcID"] = 19505,
},
[385531] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["npcID"] = 189722,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2616,
},
[421570] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[291335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[427885] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[377341] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[338434] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[162066] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[154899] = {
["encounterName"] = "Orebender Gor'ashan",
["source"] = "Orebender Gor'ashan",
["encounterID"] = 1761,
["event"] = "SPELL_CAST_START",
["npcID"] = 76413,
},
[360960] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[386675] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[381438] = {
["source"] = "Angered Steam",
["event"] = "SPELL_CAST_START",
["npcID"] = 190694,
},
[175377] = {
["source"] = "Limbflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 86652,
},
[37965] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[200720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul Fragment",
["npcID"] = 101753,
},
[213975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellwyrm",
["npcID"] = 105884,
},
[375296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Collier",
["npcID"] = 195605,
},
[377344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Eagle",
["npcID"] = 192329,
},
[420347] = {
["source"] = "Kaldorei Archdruid",
["event"] = "SPELL_CAST_START",
["npcID"] = 211066,
},
[427992] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[417928] = {
["source"] = "Invading Flameclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 206805,
},
[385536] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[259336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmange",
["npcID"] = 127794,
},
[419595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten General",
["npcID"] = 207941,
},
[285213] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145644,
},
[419790] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[387585] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["npcID"] = 189729,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[120458] = {
["encounterName"] = "Sha of Fear",
["source"] = "Sha of Fear",
["npcID"] = 60999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1431,
},
[158997] = {
["source"] = "Acidtooth Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 79416,
},
[258313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Jailer",
["npcID"] = 135699,
},
[346631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Necrobinder",
["npcID"] = 175930,
},
[263502] = {
["source"] = "Ritual Mask",
["event"] = "SPELL_CAST_START",
["npcID"] = 134123,
},
[148762] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Zak'tar",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71409,
},
[369157] = {
["source"] = "Embertooth Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 188948,
},
[428542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[307725] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[416256] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron's Creation",
["npcID"] = 204918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[228050] = {
["isChanneled"] = true,
["source"] = "Guardian of the Forgotten Queen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 114565,
},
[444925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drifting Sporebloom",
["npcID"] = 214961,
},
[396605] = {
["source"] = "Fulgurb",
["event"] = "SPELL_CAST_START",
["npcID"] = 193170,
},
[331402] = {
["source"] = "Popo",
["event"] = "SPELL_CAST_START",
["npcID"] = 180028,
},
[61515] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[416048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[174769] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81747,
},
[300414] = {
["source"] = "Scrapbone Grinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 150143,
},
[422039] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[387192] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Hammer",
["npcID"] = 209831,
},
[265880] = {
["source"] = "Matron Alma",
["event"] = "SPELL_CAST_START",
["npcID"] = 135365,
},
[309776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dokani Shadewalker",
["npcID"] = 153107,
},
[196883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Etheldrin Ravencrest",
["npcID"] = 98521,
},
[427509] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[198931] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207026,
},
[383496] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[428077] = {
["source"] = "Keeper of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 210423,
},
[384316] = {
["encounterName"] = "The Raging Tempest",
["source"] = "The Raging Tempest",
["encounterID"] = 2636,
["event"] = "SPELL_CAST_START",
["npcID"] = 186615,
},
[174768] = {
["source"] = "Steamscar Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81747,
},
[444946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormtop Terralisk",
["npcID"] = 214581,
},
[426500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[395784] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[372202] = {
["isChanneled"] = true,
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189464,
},
[422416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Protector",
["npcID"] = 209450,
},
[157931] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[216342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koralune Ettin",
["npcID"] = 99791,
},
[274968] = {
["source"] = "Grimscowl the Harebrained",
["event"] = "SPELL_CAST_START",
["npcID"] = 141059,
},
[34639] = {
["source"] = "Sunseeker Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 19509,
},
[413023] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lerai, Timesworn Maiden",
["npcID"] = 205152,
},
[337556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbreakable Urtz",
["npcID"] = 162853,
},
[111668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 56877,
},
[416264] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[41396] = {
["source"] = "Ardent Host",
["event"] = "SPELL_CAST_START",
["npcID"] = 22959,
},
[387596] = {
["source"] = "Risen Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 195877,
},
[162074] = {
["source"] = "Fireblade Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 77047,
},
[403201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ishyra",
["npcID"] = 200579,
},
[214989] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[379406] = {
["source"] = "Qalashi Lavabearer",
["event"] = "SPELL_CAST_START",
["npcID"] = 189472,
},
[274971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mala'kili",
["npcID"] = 128935,
},
[365883] = {
["source"] = "Dominated Architect",
["event"] = "SPELL_CAST_START",
["npcID"] = 181045,
},
[360977] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[29928] = {
["encounterName"] = "Opera Hall",
["source"] = "Phantom Guest",
["npcID"] = 16409,
["event"] = "SPELL_CAST_START",
["encounterID"] = 655,
},
[23337] = {
["source"] = "Booty Bay Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 4624,
},
[169233] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale One",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84554,
},
[385551] = {
["encounterName"] = "Gulping Goliath",
["source"] = "Gulping Goliath",
["encounterID"] = 2616,
["event"] = "SPELL_CAST_START",
["npcID"] = 189722,
},
[264734] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[111762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Neophyte",
["npcID"] = 58823,
},
[411763] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Infinite Keeper",
["npcID"] = 205212,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[429615] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[32424] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[15611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormsnout",
["npcID"] = 3240,
},
[391696] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Thundering Ravager",
["npcID"] = 190690,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2605,
},
[385553] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Stormseeker Acolyte",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 194990,
},
[427727] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[288301] = {
["source"] = "Tyrande Whisperwind",
["event"] = "SPELL_CAST_START",
["npcID"] = 146989,
},
[142623] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hekima the Wise",
["npcID"] = 70544,
},
[418318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless One",
["npcID"] = 206463,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[188114] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[408080] = {
["source"] = "Kob'rok",
["event"] = "SPELL_CAST_START",
["npcID"] = 203462,
},
[423410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethka",
["npcID"] = 208740,
},
[394591] = {
["source"] = "Tombcaller Arban",
["event"] = "SPELL_CAST_START",
["npcID"] = 190047,
},
[315932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron-Willed Enforcer",
["npcID"] = 162718,
},
[193826] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[320028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshard Breacher",
["npcID"] = 167458,
},
[412177] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[162078] = {
["source"] = "Blademaster Bralok",
["event"] = "SPELL_CAST_START",
["npcID"] = 76981,
},
[265540] = {
["source"] = "Fetid Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 130909,
},
[415373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Footman",
["npcID"] = 207578,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["encounterID"] = 1980,
["event"] = "SPELL_CAST_START",
["npcID"] = 29305,
},
[225562] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[142625] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[385558] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[395797] = {
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 198424,
},
[421340] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Anvil",
["npcID"] = 206478,
},
[394798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azra's Prized Peony",
["npcID"] = 193135,
},
[317511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandstone Burrower",
["npcID"] = 158477,
},
[421400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Spear",
["npcID"] = 209973,
},
[362410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cipherclad",
["npcID"] = 181349,
},
[128658] = {
["source"] = "Rok'nah Felcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 65507,
},
[316855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwing Commander",
["npcID"] = 165267,
},
[387608] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ukhel Corruptor",
["npcID"] = 195842,
},
[312884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplord Zrihj",
["npcID"] = 154559,
},
[418333] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[393752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[428564] = {
["isChanneled"] = true,
["source"] = "Firelands Flameguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210290,
},
[421746] = {
["source"] = "The Stonewarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210235,
},
[313363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terror Tendril",
["npcID"] = 160676,
},
[400688] = {
["source"] = "Wyrmslayer Angvardi",
["event"] = "SPELL_CAST_START",
["npcID"] = 201013,
},
[169248] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[201781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mushroom Merchant",
["npcID"] = 101823,
},
[212031] = {
["source"] = "Bound Energy",
["event"] = "SPELL_CAST_START",
["npcID"] = 105705,
},
[407122] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Warlock",
["npcID"] = 203857,
},
[181535] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[270334] = {
["source"] = "Portal Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 209821,
},
[195240] = {
["source"] = "Drogbar Rivertroller",
["event"] = "SPELL_CAST_START",
["npcID"] = 96124,
},
[426519] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[353588] = {
["source"] = "Nathrezim Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 182426,
},
[30633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Protector",
["npcID"] = 26792,
},
[418329] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[181536] = {
["source"] = "Sea Skrog",
["event"] = "SPELL_CAST_START",
["npcID"] = 88094,
},
[373279] = {
["source"] = "Thing From Beyond",
["event"] = "SPELL_CAST_START",
["npcID"] = 189988,
},
[375327] = {
["source"] = "Subterranean Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190404,
},
[420236] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[387614] = {
["source"] = "Ukhel Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 195851,
},
[409018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Prototype",
["npcID"] = 203927,
},
[39347] = {
["source"] = "Sunseeker Gene-Splicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 19507,
},
[124854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sele'na",
["npcID"] = 50766,
},
[363042] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vine-Choked Protector",
["npcID"] = 182350,
},
[47696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[277037] = {
["source"] = "Elven Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 146329,
},
[168227] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Skulloc",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 83612,
},
[310780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Depths",
["npcID"] = 159510,
},
[145702] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71385,
},
[417634] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[426524] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208459,
},
[323058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salvage Dredger",
["npcID"] = 165609,
},
[198944] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[375331] = {
["encounterName"] = "The Primal Council",
["source"] = "Dathea Stormlash",
["npcID"] = 187768,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[200992] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Savage Felstalker",
["npcID"] = 92782,
},
[387618] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primalist Infuser",
["npcID"] = 196043,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2618,
},
[315947] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[143666] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Iyyokuk the Lucid",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71160,
},
[418335] = {
["source"] = "Queen Angerboda",
["event"] = "SPELL_CAST_START",
["npcID"] = 207823,
},
[299431] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[193502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glayvianna Soulrender",
["npcID"] = 98177,
},
[157355] = {
["source"] = "Shadowmoon Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 81711,
},
[118940] = {
["encounterName"] = "Gekkan",
["source"] = "Glintrok Oracle",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61339,
},
[395811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Pillager",
["npcID"] = 190983,
},
[285020] = {
["encounterName"] = "Tussle Tonks",
["source"] = "The Platinum Pummeler",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 144244,
},
[342570] = {
["source"] = "Champion of Loyalty",
["event"] = "SPELL_CAST_START",
["npcID"] = 170832,
},
[251683] = {
["source"] = "Imp Mother Laglath",
["event"] = "SPELL_CAST_START",
["npcID"] = 125820,
},
[197418] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Illysanna Ravencrest",
["npcID"] = 98696,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[389040] = {
["source"] = "Thondrozus",
["event"] = "SPELL_CAST_START",
["npcID"] = 192769,
},
[159015] = {
["source"] = "Voracious Stonemuncher",
["event"] = "SPELL_CAST_START",
["npcID"] = 84253,
},
[377383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[264757] = {
["encounterName"] = "Elder Leaxa",
["source"] = "Elder Leaxa",
["encounterID"] = 2111,
["event"] = "SPELL_CAST_START",
["npcID"] = 131318,
},
[85147] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 45601,
},
[432673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Looter",
["npcID"] = 216303,
},
[377384] = {
["source"] = "Aqua Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190407,
},
[403203] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[365870] = {
["source"] = "Eternal Assembler",
["event"] = "SPELL_CAST_START",
["npcID"] = 183404,
},
[111774] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scholomance Acolyte",
["npcID"] = 58757,
},
[442913] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[202019] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[130198] = {
["source"] = "Heavy Mook",
["event"] = "SPELL_CAST_START",
["npcID"] = 67399,
},
[96416] = {
["source"] = "Hakkari Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 52086,
},
[442914] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[3606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem",
["npcID"] = 2523,
},
[147516] = {
["source"] = "Eroded Cliffdweller",
["event"] = "SPELL_CAST_START",
["npcID"] = 72809,
},
[159017] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[385578] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[395817] = {
["isChanneled"] = true,
["source"] = "Primalist Frostsculptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198424,
},
[423491] = {
["source"] = "Raelas Firewind",
["event"] = "SPELL_CAST_START",
["npcID"] = 209152,
},
[309812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zror'um the Infinite",
["npcID"] = 154087,
},
[369197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Firebinder",
["npcID"] = 186599,
},
[412200] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[141612] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fiery Anger",
["npcID"] = 70824,
},
[391723] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[377389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alpha Eagle",
["npcID"] = 192333,
},
[395819] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["npcID"] = 18431,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[417763] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[393772] = {
["source"] = "Hihveer",
["event"] = "SPELL_CAST_START",
["npcID"] = 188717,
},
[387629] = {
["source"] = "Desecrated Ohuna",
["event"] = "SPELL_CAST_START",
["npcID"] = 195876,
},
[148785] = {
["source"] = "War Master Kragg",
["event"] = "SPELL_CAST_START",
["npcID"] = 73775,
},
[208165] = {
["encounterName"] = "Talixae Flamewreath",
["source"] = "Talixae Flamewreath",
["encounterID"] = 1869,
["event"] = "SPELL_CAST_START",
["npcID"] = 104217,
},
[442919] = {
["source"] = "Blind Blademaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72131,
},
[397878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[266106] = {
["source"] = "Feral Bloodswarmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 133835,
},
[391726] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[428082] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["npcID"] = 82682,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1751,
},
[387631] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[422443] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[148138] = {
["source"] = "Blackfuse Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 73095,
},
[88186] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empyrean Assassin",
["npcID"] = 45922,
},
[382249] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[376829] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[89757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[153905] = {
["source"] = "Whirling Dervish",
["event"] = "SPELL_CAST_START",
["npcID"] = 77605,
},
[222501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Grub Redcut",
["npcID"] = 199351,
},
[294195] = {
["source"] = "Defense Bot Mk I",
["event"] = "SPELL_CAST_START",
["npcID"] = 151649,
},
[159021] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[426541] = {
["source"] = "Runic Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 131685,
},
[361023] = {
["source"] = "Cartel Xy Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 181005,
},
[384474] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[375348] = {
["source"] = "Gusting Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190401,
},
[413622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Infiltrator",
["npcID"] = 206214,
},
[107357] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[60211] = {
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[309821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zror'um the Infinite",
["npcID"] = 154087,
},
[303678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Creation",
["npcID"] = 155824,
},
[338490] = {
["source"] = "Devmorta",
["event"] = "SPELL_CAST_START",
["npcID"] = 162875,
},
[145712] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Sri'thik Bombardier",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71385,
},
[401297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[393780] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[387657] = {
["source"] = "Earthbound Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 193795,
},
[311399] = {
["source"] = "Armsmaster Terenson",
["event"] = "SPELL_CAST_START",
["npcID"] = 156949,
},
[257315] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Irontide Grenadier",
["npcID"] = 129758,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[393781] = {
["source"] = "Flame Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 192764,
},
[196916] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[389686] = {
["source"] = "Crystal Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 196116,
},
[449071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Taskfinder",
["npcID"] = 204127,
},
[393793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hacklung",
["npcID"] = 187752,
},
[420403] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decaymonger Rotpaw",
["npcID"] = 205995,
},
[111772] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 58757,
},
[137528] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["encounterID"] = 1573,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69712,
},
[393783] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[194860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overgrown Larva",
["npcID"] = 94691,
},
[195884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltotem Bloodsinger",
["npcID"] = 96423,
},
[377402] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[420405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[141619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Bonechiller",
["npcID"] = 70465,
},
[387652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Revenant",
["npcID"] = 187203,
},
[319465] = {
["source"] = "Ambitious Duelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 164184,
},
[412215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[397881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Living Water",
["npcID"] = 59873,
},
[285255] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Strongarm",
["npcID"] = 146553,
},
[320067] = {
["source"] = "Masked Faerie",
["event"] = "SPELL_CAST_START",
["npcID"] = 160293,
},
[395834] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197121,
},
[141620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[424401] = {
["source"] = "Winterskorn Vrykul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206037,
},
[393787] = {
["source"] = "Iskakx",
["event"] = "SPELL_CAST_START",
["npcID"] = 192761,
},
[169265] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[167589] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[397892] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[303687] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[404027] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[141621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frost Totem",
["npcID"] = 70982,
},
[395855] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[46164] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 24664,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1894,
},
[166197] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[288281] = {
["source"] = "Lieutenant Maliyra",
["event"] = "SPELL_CAST_START",
["npcID"] = 146458,
},
[399933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tukkaraq's Boat",
["npcID"] = 201121,
},
[423523] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anguished Dream Spirit",
["npcID"] = 210304,
},
[315900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Dunewalker",
["npcID"] = 162171,
},
[397886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Droplet",
["npcID"] = 62358,
},
[415419] = {
["source"] = "Larodar, Keeper of the Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 205136,
},
[451128] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[307805] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[387668] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[423775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amerinth",
["npcID"] = 210675,
},
[90273] = {
["source"] = "Captain Balinda Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 48507,
},
[115030] = {
["source"] = "Muck Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 192630,
},
[133432] = {
["source"] = "Domination Point Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 67671,
},
[191524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[377411] = {
["source"] = "Mature Slyvern",
["event"] = "SPELL_CAST_START",
["npcID"] = 192169,
},
[395841] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197120,
},
[397889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[377421] = {
["source"] = "Amberfur Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 187455,
},
[270929] = {
["source"] = "Harpy Boltcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 152843,
},
[140600] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[111775] = {
["source"] = "Lilian Voss",
["event"] = "SPELL_CAST_START",
["npcID"] = 58722,
},
[159030] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glut",
["npcID"] = 80868,
},
[451132] = {
["source"] = "Sparking Haulbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 219497,
},
[289360] = {
["source"] = "Div'yane",
["event"] = "SPELL_CAST_START",
["npcID"] = 148615,
},
[34342] = {
["encounterName"] = "Al'ar",
["source"] = "Al'ar",
["npcID"] = 19514,
["event"] = "SPELL_CAST_START",
["encounterID"] = 730,
},
[131390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felstorm Summoner",
["npcID"] = 66271,
},
[204905] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 99676,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[120149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 194853,
},
[406083] = {
["isChanneled"] = true,
["source"] = "Flesh Spawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203338,
},
[367176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Euv'ouk",
["npcID"] = 184409,
},
[157348] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[428609] = {
["source"] = "Stormforged Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207024,
},
[296372] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[285995] = {
["encounterName"] = "Opulence",
["source"] = "Opulence",
["npcID"] = 145261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2271,
},
[417640] = {
["source"] = "Fel-Touched Shu'halo",
["event"] = "SPELL_CAST_START",
["npcID"] = 206182,
},
[420419] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Caller",
["npcID"] = 207041,
},
[381512] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[142650] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Whelp",
["npcID"] = 71401,
},
[331045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savagewing Teroclaw",
["npcID"] = 170067,
},
[368890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Herald",
["npcID"] = 181408,
},
[404896] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[148805] = {
["source"] = "Bladespire Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 80172,
},
[90275] = {
["source"] = "Captain Balinda Stonehearth",
["event"] = "SPELL_CAST_START",
["npcID"] = 48507,
},
[33111] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[445718] = {
["source"] = "Sparklit Rust Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 212597,
},
[100002] = {
["encounterName"] = "Shannox",
["source"] = "Shannox",
["npcID"] = 53691,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1205,
},
[59433] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[420422] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[397897] = {
["source"] = "Jazshariu",
["event"] = "SPELL_CAST_START",
["npcID"] = 104273,
},
[395872] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[421672] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[387659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melkhop",
["npcID"] = 193311,
},
[414280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eternus",
["npcID"] = 208168,
},
[194545] = {
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 144913,
},
[393803] = {
["source"] = "Trakhan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193783,
},
[412233] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[397899] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[199915] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[393804] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[56858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Worshipper",
["npcID"] = 30111,
},
[373327] = {
["encounterName"] = "Eranog",
["source"] = "Primal Flame",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 187593,
},
[159035] = {
["source"] = "Shaadum",
["event"] = "SPELL_CAST_START",
["npcID"] = 78728,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["encounterID"] = 2025,
["event"] = "SPELL_CAST_START",
["npcID"] = 23954,
},
[196787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel-Infused Fury",
["npcID"] = 99956,
},
[381519] = {
["source"] = "Embertooth Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 187426,
},
[399949] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Tempest",
["npcID"] = 200673,
},
[7948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Shambler",
["npcID"] = 5761,
},
[410904] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["npcID"] = 199000,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2673,
},
[373329] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[408141] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Dazhak",
["npcID"] = 201788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[316996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[420428] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[381521] = {
["source"] = "Encroaching Downpour",
["event"] = "SPELL_CAST_START",
["npcID"] = 191324,
},
[164168] = {
["source"] = "Grimrail Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81212,
},
[279134] = {
["source"] = "Risen Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 145120,
},
[194611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Hunter",
["npcID"] = 98926,
},
[397904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha-Touched Guardian",
["npcID"] = 200131,
},
[427694] = {
["source"] = "Reefbreaker Moruud",
["event"] = "SPELL_CAST_START",
["npcID"] = 209898,
},
[424227] = {
["source"] = "Priestess of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 211076,
},
[395857] = {
["source"] = "Qalashi Stonemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187600,
},
[8600] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Theka the Martyr",
["encounterID"] = 596,
["event"] = "SPELL_CAST_START",
["npcID"] = 7272,
},
[126625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Violence",
["npcID"] = 64656,
},
[426596] = {
["source"] = "Coven Diviner",
["event"] = "SPELL_CAST_START",
["npcID"] = 131819,
},
[151432] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[166205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmaul Bonecrusher",
["npcID"] = 77995,
},
[285280] = {
["source"] = "Kul Tiran Tideweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 146552,
},
[393811] = {
["source"] = "Maiden of Diligence",
["event"] = "SPELL_CAST_START",
["npcID"] = 192718,
},
[169277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sargerei Destructor",
["npcID"] = 84337,
},
[397907] = {
["source"] = "Baalgar the Watchful",
["event"] = "SPELL_CAST_START",
["npcID"] = 104274,
},
[414303] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["npcID"] = 198996,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2667,
},
[426576] = {
["source"] = "Dream Seedling",
["event"] = "SPELL_CAST_START",
["npcID"] = 211339,
},
[395860] = {
["source"] = "The Black Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195975,
},
[381516] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["npcID"] = 190485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2623,
},
[150848] = {
["source"] = "Blood-Branded Razorfen",
["event"] = "SPELL_CAST_START",
["npcID"] = 74553,
},
[365851] = {
["source"] = "Eternal Assembler",
["event"] = "SPELL_CAST_START",
["npcID"] = 183404,
},
[387670] = {
["source"] = "Qu'ruk the Time-Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 195322,
},
[259732] = {
["encounterName"] = "Sporecaller Zancha",
["source"] = "Sporecaller Zancha",
["encounterID"] = 2112,
["event"] = "SPELL_CAST_START",
["npcID"] = 131383,
},
[375384] = {
["source"] = "Primalist Earthshaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 190371,
},
[369241] = {
["source"] = "Searing Flame Harchek",
["event"] = "SPELL_CAST_START",
["npcID"] = 191476,
},
[453199] = {
["source"] = "Vanishing Nightmare",
["event"] = "SPELL_CAST_START",
["npcID"] = 224922,
},
[307809] = {
["encounterName"] = "Carapace of N'Zoth",
["source"] = "Fury of N'Zoth",
["encounterID"] = 2337,
["event"] = "SPELL_CAST_START",
["npcID"] = 157439,
},
[150849] = {
["source"] = "Razorfen Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 74552,
},
[328287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honored Duelist",
["npcID"] = 165265,
},
[136521] = {
["encounterName"] = "Council of Elders",
["source"] = "Sul the Sandcrawler",
["npcID"] = 69078,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[40536] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Akama",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 23089,
},
[261438] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[287333] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145644,
},
[367215] = {
["source"] = "Toadious",
["event"] = "SPELL_CAST_START",
["npcID"] = 184395,
},
[381530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Thunderfist",
["npcID"] = 193373,
},
[200898] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Inquisitor Tormentorum",
["npcID"] = 96015,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[377435] = {
["source"] = "Time-Lost Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187265,
},
[196508] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Deranged Mindflayer",
["npcID"] = 99657,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[58966] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[375388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Watercaller",
["npcID"] = 190995,
},
[51287] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[297574] = {
["encounterName"] = "Oblivion Elemental",
["source"] = "Oblivion Elemental",
["encounterID"] = 2372,
["event"] = "SPELL_CAST_START",
["npcID"] = 153244,
},
[397914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Depraved Mistweaver",
["npcID"] = 200137,
},
[196587] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[200007] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[161090] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Borka the Brute",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77816,
},
[252215] = {
["source"] = "Crimson Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 138274,
},
[253239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Juggernaut",
["npcID"] = 122971,
},
[388374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Dreadsquall",
["npcID"] = 191831,
},
[331044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savagewing Teroclaw",
["npcID"] = 170067,
},
[389725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazual",
["npcID"] = 193532,
},
[134470] = {
["source"] = "Bow Fly Swarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 68222,
},
[270956] = {
["source"] = "Disciple of Jan'alai",
["event"] = "SPELL_CAST_START",
["npcID"] = 120950,
},
[31405] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Oracle",
["npcID"] = 17771,
},
[381535] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[419684] = {
["source"] = "Molten Runebear",
["event"] = "SPELL_CAST_START",
["npcID"] = 207101,
},
[394763] = {
["source"] = "Private Shikzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 193127,
},
[63830] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[201033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[32173] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Enchantress",
["npcID"] = 17961,
},
[335505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stygian Behemoth",
["npcID"] = 181064,
},
[395871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Stonemender",
["npcID"] = 187600,
},
[56919] = {
["source"] = "Lord Walden",
["event"] = "SPELL_CAST_START",
["npcID"] = 45879,
},
[12248] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[32858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[107175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aqua Dancer",
["npcID"] = 56867,
},
[309062] = {
["source"] = "Baruk Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 153099,
},
[406802] = {
["source"] = "Cavern Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 202307,
},
[404754] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Null Glimmer",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 202971,
},
[135503] = {
["source"] = "Tidesage Defector",
["event"] = "SPELL_CAST_START",
["npcID"] = 152301,
},
[58967] = {
["source"] = "Drakkari Battle Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29836,
},
[165193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stele",
["npcID"] = 72627,
},
[423626] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["encounterID"] = 2725,
["event"] = "SPELL_CAST_START",
["npcID"] = 207438,
},
[387683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[131414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Demolitionist",
["npcID"] = 66273,
},
[303693] = {
["source"] = "Deepwater Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 151569,
},
[85846] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 46052,
},
[387684] = {
["source"] = "Earthen Spire",
["event"] = "SPELL_CAST_START",
["npcID"] = 195348,
},
[455260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[277106] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[131402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Deathguard",
["npcID"] = 66272,
},
[152917] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[375420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Chomper",
["npcID"] = 190886,
},
[200002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[377447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Wingguard",
["npcID"] = 192220,
},
[385652] = {
["source"] = "Awakened Crag",
["event"] = "SPELL_CAST_START",
["npcID"] = 195243,
},
[414307] = {
["encounterName"] = "Manifested Timeways",
["source"] = "Manifested Timeways",
["encounterID"] = 2667,
["event"] = "SPELL_CAST_START",
["npcID"] = 198996,
},
[301681] = {
["source"] = "Mechagon Cavalry",
["event"] = "SPELL_CAST_START",
["npcID"] = 150292,
},
[102569] = {
["encounterName"] = "Murozond",
["source"] = "Murozond",
["encounterID"] = 1271,
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[395878] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Talking Fish",
["npcID"] = 59546,
},
[274400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cutwater Duelist",
["npcID"] = 129559,
},
[167239] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 83028,
},
[313938] = {
["source"] = "Aqir Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161218,
},
[371306] = {
["source"] = "Arcane Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 186741,
},
[375237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[49241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Watcher",
["npcID"] = 27542,
},
[140619] = {
["source"] = "Cavern Burrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 70589,
},
[410234] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[167240] = {
["source"] = "Grom'kar Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 83028,
},
[375422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 189337,
},
[65301] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[406120] = {
["source"] = "Keeper Tyr",
["event"] = "SPELL_CAST_START",
["npcID"] = 198982,
},
[146763] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72353,
},
[377473] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[173384] = {
["source"] = "Rampaging Clefthoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 83392,
},
[21807] = {
["source"] = "Wily Woodling",
["event"] = "SPELL_CAST_START",
["npcID"] = 61155,
},
[142668] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[289420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kal'ia Pa'kuaya",
["npcID"] = 148607,
},
[195473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gritslime Snail",
["npcID"] = 91786,
},
[397931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Doubt",
["npcID"] = 57109,
},
[285305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Tideweaver",
["npcID"] = 146552,
},
[411236] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[375385] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[124072] = {
["source"] = "Set'thik Gustwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 63592,
},
[268924] = {
["source"] = "Arathor Arbalest",
["event"] = "SPELL_CAST_START",
["npcID"] = 142733,
},
[37979] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[31704] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17882,
},
[194887] = {
["source"] = "Drogbar Wormhook",
["event"] = "SPELL_CAST_START",
["npcID"] = 95013,
},
[391790] = {
["source"] = "Seismic Stomps",
["event"] = "SPELL_CAST_START",
["npcID"] = 197829,
},
[12167] = {
["encounterName"] = "Lord Serpentis",
["source"] = "Lord Serpentis",
["npcID"] = 3673,
["event"] = "SPELL_CAST_START",
["encounterID"] = 590,
},
[436841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Ohuna",
["npcID"] = 195876,
},
[371984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Chillweaver",
["npcID"] = 188067,
},
[391791] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[320120] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Paceran the Virulent",
["npcID"] = 164463,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2391,
},
[313977] = {
["source"] = "Abyssal Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 161173,
},
[313400] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Corruptor Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158375,
},
[261440] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lord Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131527,
},
[32860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[370225] = {
["source"] = "Shrieking Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 187159,
},
[449136] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flickerflame Overseer",
["npcID"] = 212542,
},
[391793] = {
["source"] = "Furious Deluge",
["event"] = "SPELL_CAST_START",
["npcID"] = 197220,
},
[393841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[380174] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[373364] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[285311] = {
["source"] = "Kul Tiran Stormbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 146831,
},
[131409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twinspire Demolitionist",
["npcID"] = 66273,
},
[197961] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[396600] = {
["source"] = "Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 192759,
},
[261446] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 131545,
},
[410225] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2677,
},
[387719] = {
["encounterName"] = "Kurog Grimtotem",
["event"] = "SPELL_CAST_START",
["source"] = "Water Snail",
["npcID"] = 191790,
},
[118297] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[399987] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[270979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Invader",
["npcID"] = 131373,
},
[201039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor",
["npcID"] = 97044,
},
[449154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[411589] = {
["source"] = "Jalgon Stoutburn",
["event"] = "SPELL_CAST_START",
["npcID"] = 204426,
},
[223100] = {
["source"] = "Dreadheart Ruiner",
["event"] = "SPELL_CAST_START",
["npcID"] = 112021,
},
[395893] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[162127] = {
["source"] = "Grimfrost Drudge",
["event"] = "SPELL_CAST_START",
["npcID"] = 72955,
},
[391798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Incinerator",
["npcID"] = 195062,
},
[102573] = {
["encounterName"] = "Gu Cloudstrike",
["source"] = "Azure Serpent",
["encounterID"] = 1303,
["event"] = "SPELL_CAST_START",
["npcID"] = 56754,
},
[363130] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[451843] = {
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[391799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[225100] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[406792] = {
["source"] = "Agitated Magmaclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 202288,
},
[267905] = {
["encounterName"] = "Tidesage Council",
["source"] = "Brother Ironhull",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134063,
},
[164187] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[116560] = {
["source"] = "Mist Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 56310,
},
[59146] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[198963] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["npcID"] = 91005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1792,
},
[367228] = {
["source"] = "Subjugated Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 184767,
},
[135508] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Rootshaper",
["npcID"] = 68821,
},
[449135] = {
["source"] = "Flickerflame Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 212542,
},
[422518] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[285319] = {
["source"] = "Kul Tiran Stormbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 146831,
},
[55633] = {
["source"] = "Drakkari Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 29832,
},
[140628] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[365835] = {
["source"] = "Eternal Artisan",
["event"] = "SPELL_CAST_START",
["npcID"] = 183407,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[442997] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215597,
},
[395899] = {
["source"] = "Primalist Chillblaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 199124,
},
[8858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Geologist",
["npcID"] = 5839,
},
[309894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[361088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cartel Xy Plunderer",
["npcID"] = 182378,
},
[140629] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[99503] = {
["source"] = "Lava Wielder",
["event"] = "SPELL_CAST_START",
["npcID"] = 53575,
},
[100015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Spellweaver",
["npcID"] = 152135,
},
[201038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kethrazor",
["npcID"] = 96997,
},
[412283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[365185] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 184659,
},
[146773] = {
["encounterName"] = "Galakras",
["source"] = "Master Cannoneer Dagryn",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72356,
},
[410236] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["encounterID"] = 2672,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203679,
},
[140630] = {
["source"] = "Eternal Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 70586,
},
[119981] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[183633] = {
["source"] = "Rockbound Pelter",
["event"] = "SPELL_CAST_START",
["npcID"] = 91008,
},
[426619] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torchsnarl",
["npcID"] = 212993,
},
[420476] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[376073] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[179538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Spitespeaker",
["npcID"] = 89025,
},
[41053] = {
["source"] = "Shadowmoon Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 22880,
},
[157013] = {
["source"] = "Thunderlord Eagle-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 78806,
},
[381570] = {
["source"] = "Earthen Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 186849,
},
[309420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rei Lun",
["npcID"] = 157162,
},
[145752] = {
["source"] = "Spike Mine",
["event"] = "SPELL_CAST_START",
["npcID"] = 72656,
},
[420478] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[260425] = {
["source"] = "Muddy Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 130757,
},
[388897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Pincher",
["npcID"] = 200949,
},
[118958] = {
["isChanneled"] = true,
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 61242,
},
[393881] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[178837] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[408193] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[393859] = {
["source"] = "Bustled Beetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 193705,
},
[381582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[6605] = {
["source"] = "Plaguebat",
["event"] = "SPELL_CAST_START",
["npcID"] = 8600,
},
[146776] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Proto-Drake",
["encounterID"] = 1622,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72943,
},
[302964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ma'haat the Indomitable",
["npcID"] = 151739,
},
[395908] = {
["source"] = "Primal Icebulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 192767,
},
[411700] = {
["source"] = "Time-Lost Tidehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 205365,
},
[59430] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[260072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pa'kura Priest",
["npcID"] = 131834,
},
[377500] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[381575] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[359688] = {
["source"] = "Oracle Zoketh",
["event"] = "SPELL_CAST_START",
["npcID"] = 181625,
},
[196947] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["npcID"] = 96759,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1824,
},
[428674] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[113999] = {
["encounterName"] = "Rattlegore",
["source"] = "Rattlegore",
["encounterID"] = 1428,
["event"] = "SPELL_CAST_START",
["npcID"] = 59153,
},
[120495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Seedstealer",
["npcID"] = 61302,
},
[270543] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 134091,
},
[29579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Guest",
["npcID"] = 16409,
},
[400642] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[83877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[393864] = {
["source"] = "Trap-Layer Kerwal",
["event"] = "SPELL_CAST_START",
["npcID"] = 186516,
},
[420485] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[412928] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[424581] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[457359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Colossus",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29307,
},
[58972] = {
["source"] = "Drakkari Fire Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 29822,
},
[285335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldheart Javelineer",
["npcID"] = 185221,
},
[374020] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[420487] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[381580] = {
["source"] = "Sundered Flame Brawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 203620,
},
[84013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agatha",
["npcID"] = 44951,
},
[410249] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["encounterID"] = 2670,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198998,
},
[124085] = {
["source"] = "Set'thik Zephyrian",
["event"] = "SPELL_CAST_START",
["npcID"] = 63593,
},
[141663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthborn Hatred",
["npcID"] = 70822,
},
[414974] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[377486] = {
["source"] = "Infinite Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 184335,
},
[197974] = {
["encounterName"] = "Ilysanna Ravencrest",
["source"] = "Soul-torn Vanguard",
["npcID"] = 100485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1833,
},
[307863] = {
["encounterName"] = "Inquisitor Gnshal",
["source"] = "Inquisitor Gnshal",
["encounterID"] = 2371,
["event"] = "SPELL_CAST_START",
["npcID"] = 156161,
},
[391821] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[327280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valinor",
["npcID"] = 167524,
},
[210261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskwatch Sentry",
["npcID"] = 104251,
},
[373392] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[31664] = {
["source"] = "Frenzied Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27691,
},
[377488] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[157020] = {
["source"] = "Blinding Solar Flare",
["event"] = "SPELL_CAST_START",
["npcID"] = 79462,
},
[427260] = {
["source"] = "Cursed Rooktender",
["event"] = "SPELL_CAST_START",
["npcID"] = 207199,
},
[146786] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73909,
},
[12549] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[390715] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[260432] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[250505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[410254] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[387729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goopal",
["npcID"] = 203477,
},
[373395] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[391825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shiobhan Waterborn",
["npcID"] = 201559,
},
[279199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[84662] = {
["source"] = "Korok the Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 45301,
},
[58973] = {
["source"] = "Drakkari God Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29820,
},
[432781] = {
["source"] = "Radiating Voidstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 212739,
},
[418469] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Deathwingurlugull",
["npcID"] = 205037,
},
[420495] = {
["source"] = "Deceiver Hr'qoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 206784,
},
[87222] = {
["source"] = "Ambermill Witchalok",
["event"] = "SPELL_CAST_START",
["npcID"] = 1889,
},
[150879] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[143712] = {
["encounterName"] = "General Nazgrim",
["source"] = "General Nazgrim",
["encounterID"] = 1603,
["event"] = "SPELL_CAST_START",
["npcID"] = 71697,
},
[387732] = {
["source"] = "Titan Defense Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 193244,
},
[428695] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[375446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunhide Stomphoof",
["npcID"] = 190953,
},
[418449] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[325802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeneye Bowman",
["npcID"] = 166936,
},
[443640] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[285346] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145616,
},
[157387] = {
["source"] = "Thunderlord Eagle-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 78962,
},
[330397] = {
["source"] = "Blistering Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 160345,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["encounterID"] = 1983,
["event"] = "SPELL_CAST_START",
["npcID"] = 29573,
},
[449167] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[118963] = {
["source"] = "Glintrok Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61240,
},
[406183] = {
["source"] = "Krono Sandtongue",
["event"] = "SPELL_CAST_START",
["npcID"] = 205622,
},
[406165] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[200027] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bastillax",
["npcID"] = 96783,
},
[426643] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Abominable Greench",
["npcID"] = 54499,
},
[165220] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[381593] = {
["source"] = "Ebonstone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 184300,
},
[122547] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber-Shaper Un'sok",
["npcID"] = 62511,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1499,
},
[164192] = {
["source"] = "Grimrail Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 81236,
},
[420501] = {
["source"] = "Wildfire Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 209200,
},
[455313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[394493] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[443027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bazaar Guard",
["npcID"] = 220974,
},
[136548] = {
["encounterName"] = "Lei Shen",
["source"] = "Ball Lightning",
["npcID"] = 69232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[275112] = {
["source"] = "Blisterhide",
["event"] = "SPELL_CAST_START",
["npcID"] = 197353,
},
[376063] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Smoldering Hellion",
["npcID"] = 191510,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[131429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[79884] = {
["source"] = "Instructor Rufus",
["event"] = "SPELL_CAST_START",
["npcID"] = 48922,
},
[373405] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[301734] = {
["source"] = "Mechanized Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 153068,
},
[412922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spurlok, Timesworn Sentinel",
["npcID"] = 205158,
},
[412313] = {
["source"] = "Emberdusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203664,
},
[391856] = {
["source"] = "Tenmod",
["event"] = "SPELL_CAST_START",
["npcID"] = 194763,
},
[188292] = {
["source"] = "Dark Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 91697,
},
[377502] = {
["source"] = "Cliffdrip Fallstriker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189815,
},
[406778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Blaze Hound",
["npcID"] = 205234,
},
[170825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlock Soulstealer",
["npcID"] = 79482,
},
[391837] = {
["source"] = "Emerald Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 191252,
},
[377503] = {
["source"] = "Rune Seal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187155,
},
[120502] = {
["source"] = "Sandfury Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 130242,
},
[393894] = {
["source"] = "Nezascar the Sightless",
["event"] = "SPELL_CAST_START",
["npcID"] = 196535,
},
[414041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goblin Shredder",
["npcID"] = 200964,
},
[11802] = {
["source"] = "Dark Iron Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 6212,
},
[395934] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[87225] = {
["source"] = "Ambermill Witchalok",
["event"] = "SPELL_CAST_START",
["npcID"] = 1889,
},
[375457] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[377505] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[391855] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[443636] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[188046] = {
["source"] = "Denizen of the Dream",
["event"] = "SPELL_CAST_START",
["npcID"] = 198489,
},
[260741] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[420509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamesworn Infernomancer",
["npcID"] = 210503,
},
[381602] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[375459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Rumbler",
["npcID"] = 192941,
},
[391849] = {
["source"] = "Surging Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 195330,
},
[193611] = {
["encounterName"] = "Lady Hatecoil",
["source"] = "Lady Hatecoil",
["npcID"] = 91789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1811,
},
[59347] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29063,
},
[383651] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[174735] = {
["source"] = "Grulkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 86157,
},
[12890] = {
["encounterName"] = "Shade of Eranikus",
["source"] = "Shade of Eranikus",
["encounterID"] = 493,
["event"] = "SPELL_CAST_START",
["npcID"] = 5709,
},
[174436] = {
["source"] = "Grom'kar Shadowblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 75753,
},
[17843] = {
["source"] = "Novice Timewalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 189583,
},
[290053] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Unexploded Ordnance",
["encounterID"] = 2281,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 149535,
},
[395939] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[381605] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[427252] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[40876] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[385574] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[41058] = {
["source"] = "Whirling Blade",
["event"] = "SPELL_CAST_START",
["npcID"] = 23369,
},
[207806] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[459421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[395941] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[294884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Scrapboss",
["npcID"] = 151683,
},
[408228] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Grommash Hellscream",
["npcID"] = 203678,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[147817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[166543] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Blackrock Turret",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 82721,
},
[430754] = {
["source"] = "Corrupted Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 214439,
},
[52496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Fiend",
["npcID"] = 27734,
},
[372027] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[314033] = {
["source"] = "K'thir Doomsayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 156572,
},
[406182] = {
["isChanneled"] = true,
["source"] = "Corruptor Tentacle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 203338,
},
[114874] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[114872] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[420490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crustbreaker Conduit",
["npcID"] = 207038,
},
[20787] = {
["source"] = "Blazing Fireguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 8910,
},
[142699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Admiral Hagman",
["npcID"] = 67426,
},
[417683] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[371358] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[211299] = {
["source"] = "Watchful Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 105715,
},
[85692] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 11859,
},
[428711] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Dorlita",
["npcID"] = 213216,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[395946] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 197119,
},
[111801] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[424615] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[426663] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vicious Snap Dragon",
["npcID"] = 212681,
},
[395947] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197124,
},
[447141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Repurposed Loaderbot",
["npcID"] = 222923,
},
[305011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tidemistress Ethendriss",
["npcID"] = 153934,
},
[114873] = {
["source"] = "Professor Slate",
["event"] = "SPELL_CAST_START",
["npcID"] = 59613,
},
[412330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malrogg",
["npcID"] = 202606,
},
[374699] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[323438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Ardenmoth",
["npcID"] = 166073,
},
[250208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snapshell Hatchling",
["npcID"] = 152384,
},
[61353] = {
["source"] = "Dagna Flintlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 29476,
},
[373424] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[165875] = {
["source"] = "Keli'dan the Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 79702,
},
[169613] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 83846,
},
[57825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbringer",
["npcID"] = 30286,
},
[192138] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Crestrider",
["npcID"] = 97269,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[191848] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1813,
},
[418476] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[276884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-shaper Gokilak",
["npcID"] = 155985,
},
[150326] = {
["source"] = "Razorfen Stonechanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 74549,
},
[195944] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skrog Wavecrasher",
["npcID"] = 91796,
},
[377522] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Raging Ember",
["encounterID"] = 2611,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 192464,
},
[420525] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[309961] = {
["encounterName"] = "Il'gynoth, Corruption Reborn",
["source"] = "Il'gynoth",
["npcID"] = 158328,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2345,
},
[375475] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Juvenile Frost Proto-Dragon",
["npcID"] = 191222,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[418478] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[202088] = {
["encounterName"] = "Helya",
["source"] = "Helya",
["npcID"] = 96759,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1824,
},
[162157] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dorogg the Ruthless",
["npcID"] = 74254,
},
[289484] = {
["source"] = "Molten Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 147439,
},
[183350] = {
["source"] = "Eredar Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96196,
},
[400057] = {
["source"] = "Deepstrider Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 203727,
},
[3396] = {
["source"] = "Hungry Mine Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 47662,
},
[400050] = {
["source"] = "Deepflayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 217753,
},
[42772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[151570] = {
["encounterName"] = "Charlga Razorflank",
["source"] = "Venomous Discharge Crystal",
["encounterID"] = 1661,
["event"] = "SPELL_CAST_START",
["npcID"] = 74942,
},
[316093] = {
["source"] = "Zuythiz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162141,
},
[138609] = {
["encounterName"] = "Dark Animus",
["source"] = "Massive Anima Golem",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69699,
},
[369335] = {
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184107,
},
[371383] = {
["source"] = "Hailbringer Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189229,
},
[392455] = {
["source"] = "Uurhilt",
["event"] = "SPELL_CAST_START",
["npcID"] = 194760,
},
[400052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[156301] = {
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_START",
["npcID"] = 80935,
},
[395957] = {
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 194401,
},
[40875] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[150904] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[153581] = {
["source"] = "Soaring Chakram Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 76132,
},
[148849] = {
["encounterName"] = "Galakras",
["source"] = "Archmage Aethas Sunreaver",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 73909,
},
[419052] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[367290] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[376049] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[264903] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Aqu'sirr",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 134056,
},
[147646] = {
["source"] = "Crag Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72807,
},
[400055] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scavenging Slicer",
["npcID"] = 203384,
},
[147826] = {
["source"] = "Huolon",
["event"] = "SPELL_CAST_START",
["npcID"] = 73167,
},
[387037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torch Revenant",
["npcID"] = 201472,
},
[196516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Channeler Varisz",
["npcID"] = 100249,
},
[159089] = {
["source"] = "Emberbark Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82284,
},
[414394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nixke Voltscroll",
["npcID"] = 200965,
},
[29492] = {
["source"] = "Phantom Guest",
["event"] = "SPELL_CAST_START",
["npcID"] = 16409,
},
[117948] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Qiang the Merciless",
["npcID"] = 60709,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[34661] = {
["encounterName"] = "Thorngrin the Tender",
["source"] = "Thorngrin the Tender",
["encounterID"] = 1928,
["event"] = "SPELL_CAST_START",
["npcID"] = 17978,
},
[377532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[387135] = {
["source"] = "Primalist Arcblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 194898,
},
[314942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Goliath",
["npcID"] = 166869,
},
[375485] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[192135] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Hatecoil Shellbreaker",
["npcID"] = 97264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[451268] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[266285] = {
["source"] = "Stillwater Crocolisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 156760,
},
[30643] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["npcID"] = 17309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1893,
},
[405415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Shaz'ra",
["npcID"] = 200885,
},
[157043] = {
["source"] = "Sargerei Ritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 77130,
},
[398012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[167282] = {
["source"] = "Boneseer Cold-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 88361,
},
[89932] = {
["source"] = "Teracula",
["event"] = "SPELL_CAST_START",
["npcID"] = 49265,
},
[404178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[218755] = {
["isChanneled"] = true,
["source"] = "Festerhide Grizzly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 95779,
},
[391870] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[451812] = {
["source"] = "Dogmatic Forgecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 212884,
},
[404171] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[56933] = {
["encounterName"] = "Frozen Commander",
["source"] = "Alliance Ranger",
["encounterID"] = 519,
["event"] = "SPELL_CAST_START",
["npcID"] = 26802,
},
[79554] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Kor'kron Provisioner",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 72411,
},
[80066] = {
["source"] = "Zephyrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 49263,
},
[395967] = {
["source"] = "Vicious Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 197123,
},
[404713] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[400063] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pesky Sporemoth",
["npcID"] = 202625,
},
[426684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[296182] = {
["source"] = "Venomous Snapdragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 152356,
},
[133496] = {
["source"] = "Shieldwall Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 67297,
},
[6254] = {
["encounterName"] = "Skum",
["source"] = "Skum",
["npcID"] = 3674,
["event"] = "SPELL_CAST_START",
["encounterID"] = 589,
},
[260409] = {
["source"] = "Bloodraged Pterrordax",
["event"] = "SPELL_CAST_START",
["npcID"] = 126618,
},
[365805] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[153974] = {
["source"] = "Black Iron Leadbelcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 76157,
},
[405043] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[196977] = {
["source"] = "Balnazzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 90981,
},
[53333] = {
["source"] = "Anub'ar Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 29064,
},
[406209] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[400066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Preying Dustmoth",
["npcID"] = 201068,
},
[115650] = {
["source"] = "Fizzy Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59520,
},
[289488] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[406210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[164218] = {
["source"] = "Grimrail Bombardier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81407,
},
[289497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
},
[407504] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[174453] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invasive Razorwing",
["npcID"] = 131558,
},
[200050] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[84165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempered War Golem",
["npcID"] = 5853,
},
[389056] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[365257] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Guardian Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182071,
},
[241680] = {
["encounterName"] = "Aqu'sirr",
["source"] = "Lord Stormsong",
["encounterID"] = 2130,
["event"] = "SPELL_CAST_START",
["npcID"] = 139737,
},
[303563] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Zoatroid",
["npcID"] = 152067,
},
[119487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[408805] = {
["source"] = "Incorporeal Being",
["event"] = "SPELL_CAST_START",
["npcID"] = 204560,
},
[334542] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arch-Suppressor Laguas",
["npcID"] = 185019,
},
[386866] = {
["source"] = "Gorging Stagbeetle",
["event"] = "SPELL_CAST_START",
["npcID"] = 195709,
},
[412900] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[145786] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zar'thik Amber Priest",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71397,
},
[146327] = {
["source"] = "Broken Clefthoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 72881,
},
[455380] = {
["source"] = "Malfunctioning Railbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 218251,
},
[157049] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[406215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandy Crocolisk",
["npcID"] = 199196,
},
[38618] = {
["encounterName"] = "Frozen Commander",
["source"] = "Commander Stoutbeard",
["encounterID"] = 519,
["event"] = "SPELL_CAST_START",
["npcID"] = 26796,
},
[152964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[152954] = {
["encounterName"] = "Vigilant Kaathar",
["source"] = "Vigilant Kaathar",
["encounterID"] = 1686,
["event"] = "SPELL_CAST_START",
["npcID"] = 75839,
},
[58980] = {
["source"] = "Drakkari Medicine Man",
["event"] = "SPELL_CAST_START",
["npcID"] = 29826,
},
[424646] = {
["source"] = "Flametouched Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 210150,
},
[451276] = {
["source"] = "Rotbark the Unfelled",
["event"] = "SPELL_CAST_START",
["npcID"] = 217670,
},
[412360] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[68948] = {
["encounterName"] = "The Crown Chemical Co.",
["source"] = "Apothecary Baxter",
["npcID"] = 36565,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2879,
},
[289496] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[303830] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlord Zalzjar",
["npcID"] = 155840,
},
[264923] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[417872] = {
["source"] = "Freya",
["event"] = "SPELL_CAST_START",
["npcID"] = 205304,
},
[383693] = {
["source"] = "Nokhud Beastmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 192794,
},
[369359] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194200,
},
[157051] = {
["source"] = "Grom'tash the Destructor",
["event"] = "SPELL_CAST_START",
["npcID"] = 77889,
},
[332500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fathomless Lurker",
["npcID"] = 209580,
},
[111631] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Instructor Chillheart",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[361169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Antros",
["npcID"] = 182466,
},
[289498] = {
["encounterName"] = "Champion of the Light",
["source"] = "Dark Iron Primalist",
["npcID"] = 146371,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[162171] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[400077] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[417678] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meantron 7000",
["npcID"] = 206131,
},
[412383] = {
["source"] = "Colossian",
["event"] = "SPELL_CAST_START",
["npcID"] = 204093,
},
[79913] = {
["source"] = "General Marstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 45995,
},
[400078] = {
["source"] = "Deeplung Glowsplasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 204013,
},
[314083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Huojin Defender",
["npcID"] = 159335,
},
[200551] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[8142] = {
["encounterName"] = "Verdan the Everliving",
["source"] = "Verdan the Everliving",
["npcID"] = 5775,
["event"] = "SPELL_CAST_START",
["encounterID"] = 591,
},
[194942] = {
["encounterName"] = "Glazer",
["source"] = "Glazer",
["npcID"] = 95887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1817,
},
[382555] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[412366] = {
["source"] = "Subterrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 203662,
},
[394466] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[365299] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[406752] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[330457] = {
["source"] = "Jovraal",
["event"] = "SPELL_CAST_START",
["npcID"] = 161271,
},
[422606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volgoth The Flamebringer",
["npcID"] = 209129,
},
[159847] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Grunt",
["npcID"] = 76556,
},
[369365] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[412368] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[140682] = {
["source"] = "Mist Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 70594,
},
[285428] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["npcID"] = 144693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[328411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Audat",
["npcID"] = 185123,
},
[395987] = {
["source"] = "Jumping Spiderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 199182,
},
[260466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow of the Darkness",
["npcID"] = 132090,
},
[309982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidtender Malketh",
["npcID"] = 154332,
},
[422614] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[403890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duzalgor",
["npcID"] = 200610,
},
[406227] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[394464] = {
["source"] = "Piercer Gigra",
["event"] = "SPELL_CAST_START",
["npcID"] = 186511,
},
[377559] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 186120,
},
[412371] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[422610] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tithris",
["npcID"] = 210674,
},
[171390] = {
["source"] = "Volatile Fire Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80380,
},
[328414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Royal Arcanist",
["npcID"] = 165270,
},
[408798] = {
["isChanneled"] = true,
["source"] = "Slaghide Shalewing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 204548,
},
[422611] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[381659] = {
["source"] = "Cascade",
["event"] = "SPELL_CAST_START",
["npcID"] = 186962,
},
[451280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbark the Unfelled",
["npcID"] = 217670,
},
[395991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[264608] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[402050] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[39849] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[406231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Wrath",
["npcID"] = 201758,
},
[257397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bonesaw",
["npcID"] = 129788,
},
[39593] = {
["encounterName"] = "Shade of Akama",
["source"] = "Ashtongue Searing Totem",
["encounterID"] = 603,
["event"] = "SPELL_CAST_START",
["npcID"] = 22896,
},
[152962] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[430805] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[391898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Haerothal",
["npcID"] = 201822,
},
[229753] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felsworn Overseer",
["npcID"] = 115273,
},
[289511] = {
["source"] = "Char'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 146367,
},
[111813] = {
["encounterName"] = "Instructor Chillheart",
["source"] = "Risen Guard",
["encounterID"] = 1426,
["event"] = "SPELL_CAST_START",
["npcID"] = 58822,
},
[271866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Dreadcroc",
["npcID"] = 123090,
},
[418531] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[289512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Char'golm",
["npcID"] = 146367,
},
[414425] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[318181] = {
["source"] = "Vyrm the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 158179,
},
[385757] = {
["source"] = "Mender Eskros",
["event"] = "SPELL_CAST_START",
["npcID"] = 195303,
},
[412378] = {
["source"] = "Infinite Timebender",
["event"] = "SPELL_CAST_START",
["npcID"] = 205337,
},
[158083] = {
["source"] = "Adorned Bladetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 79303,
},
[351459] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Woebringer",
["npcID"] = 176573,
},
[46184] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[404188] = {
["source"] = "Static Charge",
["event"] = "SPELL_CAST_START",
["npcID"] = 202847,
},
[381663] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[171394] = {
["source"] = "Liquid Life",
["event"] = "SPELL_CAST_START",
["npcID"] = 81942,
},
[307303] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zan-Tien Caller",
["npcID"] = 153095,
},
[428762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Archer",
["npcID"] = 162931,
},
[161781] = {
["source"] = "Frostfire Gronnling",
["event"] = "SPELL_CAST_START",
["npcID"] = 79529,
},
[128708] = {
["source"] = "Bubbling Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59521,
},
[144005] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[289516] = {
["source"] = "Char'golm",
["event"] = "SPELL_CAST_START",
["npcID"] = 146367,
},
[56935] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[31999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void-Twisted Invader",
["npcID"] = 151742,
},
[366701] = {
["source"] = "Ebonsteel Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 185268,
},
[322281] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sparring Aspirant",
["npcID"] = 159505,
},
[430812] = {
["source"] = "Coalescing Void Diffuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 214421,
},
[275012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Worg",
["npcID"] = 152998,
},
[115013] = {
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 58739,
},
[428765] = {
["source"] = "Tindral Sageswift",
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[325232] = {
["source"] = "Sylvari Tenderhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 170031,
},
[457434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riled Dirtdiver",
["npcID"] = 225905,
},
[369400] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 184132,
},
[388316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oppressive Artificer",
["npcID"] = 184444,
},
[373477] = {
["source"] = "Bound Shoresnapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 190193,
},
[257402] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[418528] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[281329] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Jolly",
["npcID"] = 126845,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[166032] = {
["source"] = "Ogron Warcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 80775,
},
[396020] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[376426] = {
["source"] = "Summoned Ripple",
["event"] = "SPELL_CAST_START",
["npcID"] = 192463,
},
[157534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Seer",
["npcID"] = 78073,
},
[169823] = {
["encounterName"] = "Archmage Sol",
["source"] = "Spore Image",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 84983,
},
[267969] = {
["source"] = "Temple Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 134137,
},
[46185] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 24556,
},
[396005] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 198424,
},
[332525] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[182333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormcaller",
["npcID"] = 88087,
},
[102601] = {
["source"] = "Infinite Suppressor",
["event"] = "SPELL_CAST_START",
["npcID"] = 54920,
},
[412388] = {
["source"] = "Underlight Queen",
["event"] = "SPELL_CAST_START",
["npcID"] = 203593,
},
[332526] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[120519] = {
["encounterName"] = "Sha of Fear",
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Fear",
["npcID"] = 60999,
},
[100549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Magma",
["npcID"] = 53901,
},
[396007] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["npcID"] = 26928,
},
[374724] = {
["source"] = "Flamecaller Aymi",
["event"] = "SPELL_CAST_START",
["npcID"] = 190368,
},
[378832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Collier",
["npcID"] = 195605,
},
[82760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[373483] = {
["source"] = "Soggymaw Wavebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 187263,
},
[50025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Catapult",
["npcID"] = 34793,
},
[426725] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[255366] = {
["source"] = "Zulian Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 124549,
},
[117960] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[449251] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Threadmancer",
["npcID"] = 208244,
},
[387189] = {
["source"] = "Srivantor",
["event"] = "SPELL_CAST_START",
["npcID"] = 201555,
},
[418269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Vizier Zor'lok",
["npcID"] = 208500,
},
[256382] = {
["source"] = "Mountain Greatstag",
["event"] = "SPELL_CAST_START",
["npcID"] = 127806,
},
[391915] = {
["source"] = "Shapemaster Za'lani",
["event"] = "SPELL_CAST_START",
["npcID"] = 201545,
},
[9053] = {
["source"] = "Shadowforge Surveyor",
["event"] = "SPELL_CAST_START",
["npcID"] = 4844,
},
[169341] = {
["source"] = "Grom'kar Footsoldier",
["event"] = "SPELL_CAST_START",
["npcID"] = 81283,
},
[365295] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[143765] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Kaz'tik the Manipulator",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71156,
},
[36971] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Grand Astromancer Capernian",
["npcID"] = 20062,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[39592] = {
["source"] = "Summoned Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 67380,
},
[46187] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Zelfan",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24556,
},
[257407] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[389870] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Colossal Stormfiend",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 197145,
},
[307968] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[194951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Siegemaster",
["npcID"] = 211937,
},
[150917] = {
["encounterName"] = "Hunter Bonetusk",
["source"] = "Hunter Bonetusk",
["encounterID"] = 1656,
["event"] = "SPELL_CAST_START",
["npcID"] = 75001,
},
[368545] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 184599,
},
[305913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Shadowcaster",
["npcID"] = 153242,
},
[365298] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[271588] = {
["source"] = "Kael'thas Sunstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 144913,
},
[426731] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Oracle",
["npcID"] = 41096,
},
[152973] = {
["source"] = "Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76087,
},
[381681] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rustpine Immolator",
["npcID"] = 187396,
},
[387708] = {
["source"] = "Phenran",
["event"] = "SPELL_CAST_START",
["npcID"] = 193688,
},
[406918] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Lavamancer",
["npcID"] = 202256,
},
[404207] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[31281] = {
["source"] = "Chet the Slime-Breeder",
["event"] = "SPELL_CAST_START",
["npcID"] = 48322,
},
[67280] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Agmar",
["npcID"] = 34922,
},
[410351] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[387826] = {
["source"] = "Ukhel Beastcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195878,
},
[381683] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[85710] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[87762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minister of Air",
["npcID"] = 45930,
},
[396018] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Crybaby Hozen",
["npcID"] = 59552,
},
[182667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sentry Brute",
["npcID"] = 88888,
},
[12492] = {
["encounterName"] = "Jammal'an the Prophet",
["source"] = "Jammal'an the Prophet",
["encounterID"] = 488,
["event"] = "SPELL_CAST_START",
["npcID"] = 5710,
},
[418338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchie",
["npcID"] = 205708,
},
[396019] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Golden Beetle",
["npcID"] = 59545,
},
[394620] = {
["source"] = "Nightrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 188707,
},
[272592] = {
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 138281,
},
[369399] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[412402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[199050] = {
["source"] = "Valarjar Shieldmaiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 95832,
},
[309757] = {
["source"] = "Zan-Tien Pikeman",
["event"] = "SPELL_CAST_START",
["npcID"] = 156325,
},
[287490] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Frozen Ballista",
["encounterID"] = 2281,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 148522,
},
[406737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Betrayer",
["npcID"] = 200828,
},
[260483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrogg the Darkspeaker",
["npcID"] = 104890,
},
[372562] = {
["source"] = "Brackenhide Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 188542,
},
[34984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Ray",
["npcID"] = 21128,
},
[396040] = {
["encounterName"] = "Eranog",
["source"] = "Flamescale Captain",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 199233,
},
[215433] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[326399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elder Longbranch",
["npcID"] = 185021,
},
[453392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sureki Eradicator",
["npcID"] = 225408,
},
[396023] = {
["encounterName"] = "Eranog",
["source"] = "Eranog",
["encounterID"] = 2587,
["event"] = "SPELL_CAST_START",
["npcID"] = 184972,
},
[194956] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[395427] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[377594] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[330496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayspeaker",
["npcID"] = 185022,
},
[131485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Succubus",
["npcID"] = 66901,
},
[375547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Eruption",
["npcID"] = 191286,
},
[426741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Sentinel",
["npcID"] = 40577,
},
[404216] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[100559] = {
["event"] = "SPELL_CAST_START",
["source"] = "Majordomo Staghelm",
["npcID"] = 54015,
},
[391842] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Mender",
["npcID"] = 195060,
},
[118988] = {
["encounterName"] = "Gekkan",
["source"] = "Gekkan",
["encounterID"] = 2129,
["event"] = "SPELL_CAST_START",
["npcID"] = 61243,
},
[412408] = {
["event"] = "SPELL_CAST_START",
["source"] = "Field Despair Bot K156",
["npcID"] = 205612,
},
[385157] = {
["source"] = "Greenbelt Riverbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 192834,
},
[139903] = {
["source"] = "Stormbringer Draz'kil",
["event"] = "SPELL_CAST_START",
["npcID"] = 70445,
},
[402170] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[259462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandskitter Crab",
["npcID"] = 129318,
},
[145812] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Set'thik Wind Wielder",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71405,
},
[106856] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[384663] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[330500] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decayspeaker",
["npcID"] = 185022,
},
[381694] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[90325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naga Brute",
["npcID"] = 91459,
},
[31287] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[404220] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[312537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeplord Zrihj",
["npcID"] = 154559,
},
[373201] = {
["source"] = "Windyfin Skybasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 187431,
},
[369409] = {
["source"] = "Earthen Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184130,
},
[388743] = {
["source"] = "Risen Bakar",
["event"] = "SPELL_CAST_START",
["npcID"] = 188510,
},
[307977] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[87761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Executor of the Caliph",
["npcID"] = 45928,
},
[151548] = {
["source"] = "Bloodmaul Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 75272,
},
[412413] = {
["source"] = "Skornak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203643,
},
[294165] = {
["source"] = "Ebon Chainguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185316,
},
[310026] = {
["source"] = "Summoned Boggart",
["event"] = "SPELL_CAST_START",
["npcID"] = 158943,
},
[369411] = {
["source"] = "Cavern Seeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184301,
},
[412414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Gastrinax",
["npcID"] = 203521,
},
[389250] = {
["source"] = "Blacktalon Slayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 201831,
},
[395816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Wallcrasher",
["npcID"] = 187813,
},
[262929] = {
["source"] = "Torraske the Eternal",
["event"] = "SPELL_CAST_START",
["npcID"] = 127939,
},
[194966] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["encounterID"] = 1832,
["event"] = "SPELL_CAST_START",
["npcID"] = 98542,
},
[414463] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Tangler",
["npcID"] = 205824,
},
[418578] = {
["source"] = "Illidan Stormrage",
["event"] = "SPELL_CAST_START",
["npcID"] = 205306,
},
[147863] = {
["source"] = "Jademist Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72767,
},
[387843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Invoker",
["npcID"] = 196202,
},
[156722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[391939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormbound Reaver",
["npcID"] = 201153,
},
[35950] = {
["encounterName"] = "Warbringer O'mrogg",
["source"] = "Shattered Hand Houndmaster",
["encounterID"] = 1937,
["event"] = "SPELL_CAST_START",
["npcID"] = 17670,
},
[387243] = {
["source"] = "Time-Lost Murhulk",
["event"] = "SPELL_CAST_START",
["npcID"] = 187677,
},
[381701] = {
["source"] = "Force of the Springs",
["event"] = "SPELL_CAST_START",
["npcID"] = 197008,
},
[449290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[170035] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 84358,
},
[255371] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[414466] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Gutcutter",
["npcID"] = 204515,
},
[169375] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[267891] = {
["encounterName"] = "Tidesage Council",
["source"] = "Galecaller Faye",
["encounterID"] = 2131,
["event"] = "SPELL_CAST_START",
["npcID"] = 134058,
},
[314115] = {
["event"] = "SPELL_CAST_START",
["source"] = "Manipulator Shrog'lth",
["npcID"] = 159103,
},
[445205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Buzzer",
["npcID"] = 215021,
},
[396812] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[377608] = {
["source"] = "Frigellus",
["event"] = "SPELL_CAST_START",
["npcID"] = 189217,
},
[445207] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Howler",
["npcID"] = 221979,
},
[414468] = {
["event"] = "SPELL_CAST_START",
["source"] = "MR-7 Shadowflipper",
["npcID"] = 205825,
},
[191900] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[377609] = {
["source"] = "Worldbreaker Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185594,
},
[289572] = {
["source"] = "7th Legion Cavalier",
["event"] = "SPELL_CAST_START",
["npcID"] = 147828,
},
[381721] = {
["source"] = "Nokhud Wardog",
["event"] = "SPELL_CAST_START",
["npcID"] = 185465,
},
[391944] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[403978] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[255373] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2086,
},
[20793] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Summoner",
["npcID"] = 4463,
},
[200084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Retainer",
["npcID"] = 98366,
},
[84804] = {
["source"] = "Forsaken Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 45282,
},
[193941] = {
["source"] = "Embershard Scorpion",
["event"] = "SPELL_CAST_START",
["npcID"] = 98406,
},
[375579] = {
["source"] = "Primalist Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 190716,
},
[83780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 44897,
},
[377612] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[402209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[267034] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[310037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlbranch Boggart",
["npcID"] = 165910,
},
[41382] = {
["isChanneled"] = true,
["source"] = "Illidari Battle-mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23402,
},
[289560] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Kimbul's Aspect",
["encounterID"] = 2268,
["event"] = "SPELL_CAST_START",
["npcID"] = 144963,
},
[414473] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[391948] = {
["source"] = "Sulfuric Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 191682,
},
[369423] = {
["source"] = "Skittering Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 184303,
},
[396044] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["npcID"] = 188252,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[174489] = {
["source"] = "Solar Magnifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 77559,
},
[361676] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[151964] = {
["source"] = "Cave Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 75467,
},
[57047] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[414475] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[424737] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["npcID"] = 207205,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2861,
},
[7951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Venomwing",
["npcID"] = 5756,
},
[169382] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[414476] = {
["source"] = "Greaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 207278,
},
[310041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summoned Boggart",
["npcID"] = 158955,
},
[151965] = {
["source"] = "Bloodmaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75191,
},
[169371] = {
["encounterName"] = "Xeri'tac",
["source"] = "Venom-Crazed Pale Hulk",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84554,
},
[414477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greaves",
["npcID"] = 207278,
},
[310042] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Basher Tentacle",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158367,
},
[131488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fixxul Lonelyheart",
["npcID"] = 66281,
},
[412430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gastrite",
["npcID"] = 205801,
},
[256401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadraspawn Lurker",
["npcID"] = 133857,
},
[208279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Igrul the Scalebane",
["npcID"] = 105159,
},
[250258] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[82137] = {
["source"] = "Rom'ogg Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[457503] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cogchewer",
["npcID"] = 212617,
},
[64163] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Yogg-Saron",
["encounterID"] = 1143,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 33288,
},
[421059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[273185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shieldbearer of Zul",
["npcID"] = 127879,
},
[451775] = {
["source"] = "Cogwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 224527,
},
[257426] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[271138] = {
["source"] = "Bombarding Zeppelin",
["event"] = "SPELL_CAST_START",
["npcID"] = 129867,
},
[60781] = {
["source"] = "Forgotten Depths Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 30205,
},
[373526] = {
["source"] = "Shimmerwing Monarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 210767,
},
[253548] = {
["isChanneled"] = true,
["source"] = "Dazar'ai Augur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 122972,
},
[426768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[373960] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[125758] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[375575] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Dragonspawn Flamebender",
["npcID"] = 191230,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[75992] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Tempest Witch",
["npcID"] = 40634,
},
[160375] = {
["source"] = "Maggle",
["event"] = "SPELL_CAST_START",
["npcID"] = 78896,
},
[401205] = {
["source"] = "Carcaxas",
["event"] = "SPELL_CAST_START",
["npcID"] = 202836,
},
[391958] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cloying Gale",
["npcID"] = 198126,
},
[396075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Revenant",
["npcID"] = 191129,
},
[23601] = {
["source"] = "Bolgaff",
["event"] = "SPELL_CAST_START",
["npcID"] = 47003,
},
[256404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Gull",
["npcID"] = 127530,
},
[391959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[426771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Bound Despoiler",
["npcID"] = 212765,
},
[113364] = {
["encounterName"] = "Flameweaver Koegler",
["source"] = "Flameweaver Koegler",
["npcID"] = 59150,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1420,
},
[203163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[130770] = {
["event"] = "SPELL_CAST_START",
["source"] = "White Orchid",
["npcID"] = 62650,
},
[41072] = {
["source"] = "Shadowmoon Blood Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 22945,
},
[394436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shas'ith",
["npcID"] = 189822,
},
[256405] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[269096] = {
["source"] = "Sandfury Dunerider",
["event"] = "SPELL_CAST_START",
["npcID"] = 130230,
},
[212773] = {
["source"] = "Duskwatch Reinforcement",
["event"] = "SPELL_CAST_START",
["npcID"] = 107073,
},
[169376] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[176218] = {
["source"] = "Smokemaster Snarl",
["event"] = "SPELL_CAST_START",
["npcID"] = 81749,
},
[269097] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[382712] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[265002] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[385824] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[373545] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tranquil Tideskipper",
["npcID"] = 192148,
},
[276892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber-shaper Gokilak",
["npcID"] = 155985,
},
[428823] = {
["encounterName"] = "Yalnu",
["source"] = "Yalnu",
["npcID"] = 83846,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[289596] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Cavalier",
["npcID"] = 147828,
},
[22458] = {
["source"] = "Blackwing Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 12458,
},
[320293] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2391,
},
[330532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Arbalest",
["npcID"] = 164510,
},
[207261] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[283422] = {
["encounterName"] = "Tussle Tonks",
["source"] = "Gnomercy 4.U.",
["encounterID"] = 2257,
["event"] = "SPELL_CAST_START",
["npcID"] = 145185,
},
[361001] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Custodian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 184522,
},
[193951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Barbed Spiderling",
["npcID"] = 97677,
},
[37591] = {
["source"] = "Ambermill Brewmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 3577,
},
[31673] = {
["encounterName"] = "Hungarfen",
["source"] = "Hungarfen",
["encounterID"] = 1946,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17770,
},
[76611] = {
["isChanneled"] = true,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[412444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[422683] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[359203] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archaic Curator",
["npcID"] = 181857,
},
[369442] = {
["source"] = "Infused Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194200,
},
[404259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[406302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Caster",
["npcID"] = 200824,
},
[408767] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[147878] = {
["source"] = "Cinderfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73175,
},
[36979] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["npcID"] = 21268,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[422685] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[449318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[29427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[152998] = {
["source"] = "Grand Defense Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 76145,
},
[101592] = {
["source"] = "Murozond",
["event"] = "SPELL_CAST_START",
["npcID"] = 54432,
},
[78509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodfang Scavenger",
["npcID"] = 44547,
},
[418591] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[412448] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deepflayer Broodmatron",
["npcID"] = 200115,
},
[375596] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[3256] = {
["encounterName"] = "Theka the Martyr",
["source"] = "Scarab",
["encounterID"] = 596,
["event"] = "SPELL_CAST_START",
["npcID"] = 7269,
},
[320300] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2391,
},
[404258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 2010,
["event"] = "SPELL_CAST_START",
["npcID"] = 26929,
},
[143990] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[147880] = {
["source"] = "Cinderfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 73175,
},
[289585] = {
["source"] = "Stormbound Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 148582,
},
[153528] = {
["encounterName"] = "Roogug",
["source"] = "Roogug",
["encounterID"] = 438,
["event"] = "SPELL_CAST_START",
["npcID"] = 74948,
},
[375591] = {
["source"] = "Bubbling Sapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 191313,
},
[361016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Attendant",
["npcID"] = 183988,
},
[76508] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 39982,
},
[117975] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Protector Kaolan",
["npcID"] = 60583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1409,
},
[400165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Twilight Magus",
["npcID"] = 201223,
},
[147881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Guardian",
["npcID"] = 72888,
},
[165287] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Apexis Turret",
["npcID"] = 82153,
},
[422691] = {
["encounterName"] = "Smolderon",
["source"] = "Smolderon",
["encounterID"] = 2824,
["event"] = "SPELL_CAST_START",
["npcID"] = 200927,
},
[200099] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghostly Protector",
["npcID"] = 98368,
},
[201123] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilethorn Blossom",
["npcID"] = 99360,
},
[445217] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[260508] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[408358] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["npcID"] = 201579,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2683,
},
[385832] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[265016] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[422693] = {
["source"] = "Oxis of Fire",
["event"] = "SPELL_CAST_START",
["npcID"] = 210319,
},
[309316] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[308018] = {
["source"] = "Aqir Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 157904,
},
[412455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alcanon",
["npcID"] = 203515,
},
[118077] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Regail",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60585,
},
[138668] = {
["source"] = "Drakkari Frost Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 69910,
},
[34931] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Darkcaster",
["npcID"] = 18331,
},
[420647] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashendir Hartwood",
["npcID"] = 211258,
},
[373549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hot Springs Damselfly",
["npcID"] = 198592,
},
[200105] = {
["source"] = "Ghostly Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 98368,
},
[340412] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[265019] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[422696] = {
["source"] = "Avius Flamebeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 210305,
},
[130775] = {
["source"] = "Kunzen Rockflinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 59120,
},
[312118] = {
["source"] = "Guardian of the Tombs",
["event"] = "SPELL_CAST_START",
["npcID"] = 127072,
},
[396084] = {
["source"] = "Force of the Springs",
["event"] = "SPELL_CAST_START",
["npcID"] = 197008,
},
[447270] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["event"] = "SPELL_CAST_START",
["npcID"] = 207946,
},
[375599] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mature Hornswog",
["npcID"] = 191315,
},
[359235] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[396476] = {
["source"] = "Piskato",
["event"] = "SPELL_CAST_START",
["npcID"] = 195973,
},
[414506] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashen Emberwing",
["npcID"] = 209098,
},
[391982] = {
["source"] = "Magmatalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189538,
},
[209587] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dread Falke",
["npcID"] = 105750,
},
[396078] = {
["source"] = "Summoned Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193288,
},
[422699] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[141746] = {
["source"] = "Viletongue Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 58737,
},
[388284] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Commander",
["npcID"] = 190776,
},
[305978] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[170411] = {
["source"] = "Infested Venomfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 85232,
},
[413787] = {
["source"] = "Entropic Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 203809,
},
[418605] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Future Self",
["npcID"] = 208959,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[115418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Krik'thik Wind Shaper",
["npcID"] = 59801,
},
[316218] = {
["source"] = "Darkhaven Dredger",
["event"] = "SPELL_CAST_START",
["npcID"] = 156064,
},
[100060] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flamewaker Cauterizer",
["npcID"] = 53639,
},
[373573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sprite Dreamer",
["npcID"] = 207617,
},
[196512] = {
["encounterName"] = "Fenryr",
["source"] = "Fenryr",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 95674,
},
[418621] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Fanatic",
["npcID"] = 207896,
},
[400177] = {
["isChanneled"] = true,
["source"] = "Zaqali Ritualist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 199971,
},
[402225] = {
["source"] = "Vengeful Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 201490,
},
[394426] = {
["source"] = "Council Flamecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198503,
},
[346813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tower Sentinel",
["npcID"] = 152905,
},
[375605] = {
["source"] = "Unstable Arcanogolem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201554,
},
[207278] = {
["encounterName"] = "Patrol Captain Gerdo",
["source"] = "Patrol Captain Gerdo",
["encounterID"] = 1868,
["event"] = "SPELL_CAST_START",
["npcID"] = 104215,
},
[392007] = {
["source"] = "Shadepaw Thief",
["event"] = "SPELL_CAST_START",
["npcID"] = 192748,
},
[130265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66291,
},
[324425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[36980] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Netherstrand Longbow",
["npcID"] = 21268,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[123610] = {
["source"] = "Corrupted Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 63275,
},
[359233] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 181047,
},
[303951] = {
["source"] = "Prince Erazmin",
["event"] = "SPELL_CAST_START",
["npcID"] = 153670,
},
[394037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[256083] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[271174] = {
["source"] = "Pallid Gorger",
["event"] = "SPELL_CAST_START",
["npcID"] = 137830,
},
[212586] = {
["source"] = "Stormwing Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 91795,
},
[369465] = {
["source"] = "Earthen Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 186420,
},
[316609] = {
["source"] = "Terror Tendril",
["event"] = "SPELL_CAST_START",
["npcID"] = 157137,
},
[158128] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[326463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Slicer",
["npcID"] = 164036,
},
[262983] = {
["source"] = "Azsh'ari Stormbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 155629,
},
[149947] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[130266] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunder Hold Soldier",
["npcID"] = 66200,
},
[326464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwarren Slicer",
["npcID"] = 164036,
},
[377658] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[414535] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[400144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[142771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overseer Elaglo",
["npcID"] = 71030,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[385569] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[59696] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[329310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disobedient Citizen",
["npcID"] = 158813,
},
[403855] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[210537] = {
["source"] = "Nathrezim Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 182426,
},
[389947] = {
["source"] = "Sirena the Fangbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185907,
},
[224682] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Houndsmaster",
["npcID"] = 211882,
},
[377661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garden Herdmare",
["npcID"] = 188277,
},
[162232] = {
["source"] = "Ogron Spinecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 81240,
},
[128999] = {
["source"] = "Thundermaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 58456,
},
[269131] = {
["encounterName"] = "Lord Stormsong",
["source"] = "Lord Stormsong",
["encounterID"] = 2132,
["event"] = "SPELL_CAST_START",
["npcID"] = 134060,
},
[116027] = {
["source"] = "Hopper",
["event"] = "SPELL_CAST_START",
["npcID"] = 59464,
},
[115421] = {
["isChanneled"] = true,
["source"] = "Krik'thik Wind Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59801,
},
[389949] = {
["source"] = "Nokhud Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 187299,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[394045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vadne Bleakheart",
["npcID"] = 195764,
},
[330940] = {
["source"] = "Altered Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 168244,
},
[82797] = {
["source"] = "Snickerfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 5985,
},
[391998] = {
["source"] = "Erupting Magma",
["event"] = "SPELL_CAST_START",
["npcID"] = 191917,
},
[402237] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vengeful Research",
["npcID"] = 201490,
},
[281420] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[141750] = {
["source"] = "Huntmaster S'thoc",
["event"] = "SPELL_CAST_START",
["npcID"] = 71259,
},
[391999] = {
["source"] = "Nokhud Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 185445,
},
[314195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnashing Terror",
["npcID"] = 161334,
},
[373942] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[414525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morchie",
["npcID"] = 205708,
},
[359236] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[287565] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[406345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[389953] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[367428] = {
["source"] = "Gnarled Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184962,
},
[418622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Scarab",
["npcID"] = 207910,
},
[412479] = {
["source"] = "Dinn",
["event"] = "SPELL_CAST_START",
["npcID"] = 203646,
},
[393309] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["npcID"] = 198311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[310092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Escaped Mutation",
["npcID"] = 157267,
},
[34934] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Wraith",
["npcID"] = 18394,
},
[420671] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[190898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[87779] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[418624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Assassin",
["npcID"] = 207915,
},
[401319] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[381765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Avalantus",
["npcID"] = 201543,
},
[432959] = {
["source"] = "Void Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 212793,
},
[106720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Waveguard Adept",
["npcID"] = 56673,
},
[115423] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritbinder",
["npcID"] = 55279,
},
[199090] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[428879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[369193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Dusttwister",
["npcID"] = 192371,
},
[396101] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Brackenhide Shaper",
["npcID"] = 197128,
},
[383823] = {
["source"] = "Nokhud Hornsounder",
["event"] = "SPELL_CAST_START",
["npcID"] = 192796,
},
[392006] = {
["source"] = "Sickly Brute",
["event"] = "SPELL_CAST_START",
["npcID"] = 186668,
},
[428868] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[330574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Conjured Death",
["npcID"] = 171317,
},
[398150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Dominator",
["npcID"] = 76446,
},
[424771] = {
["source"] = "Harbinger of Incineration",
["event"] = "SPELL_CAST_START",
["npcID"] = 210147,
},
[201139] = {
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 98810,
},
[314193] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwarped Watcher",
["npcID"] = 160491,
},
[219569] = {
["source"] = "Wyrmtongue Collector",
["event"] = "SPELL_CAST_START",
["npcID"] = 102778,
},
[397048] = {
["source"] = "Frostbreath Arachnid",
["event"] = "SPELL_CAST_START",
["npcID"] = 199333,
},
[372539] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[41334] = {
["source"] = "Temple Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 22939,
},
[381770] = {
["encounterName"] = "Treemouth",
["source"] = "Decaying Slime",
["encounterID"] = 2568,
["event"] = "SPELL_CAST_START",
["npcID"] = 192481,
},
[289635] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Medic",
["npcID"] = 147825,
},
[95970] = {
["source"] = "D-1000",
["event"] = "SPELL_CAST_START",
["npcID"] = 49268,
},
[445251] = {
["source"] = "Ironwold Stormpaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 214970,
},
[406344] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[42870] = {
["source"] = "Dragonflayer Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 24051,
},
[374451] = {
["source"] = "Burning Chain Caster",
["event"] = "SPELL_CAST_START",
["npcID"] = 195919,
},
[412488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crawling Goo",
["npcID"] = 205820,
},
[398154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defiled Spirit",
["npcID"] = 75451,
},
[115002] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[201141] = {
["isChanneled"] = true,
["source"] = "Wrathguard Bladelord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 98810,
},
[396107] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hungry Hungry Lava",
["npcID"] = 194878,
},
[174917] = {
["source"] = "Infested Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 82841,
},
[375630] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[73958] = {
["source"] = "Drowned Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 39464,
},
[372201] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[99555] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Lord",
["npcID"] = 53115,
},
[392013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[143805] = {
["encounterName"] = "Malkorok",
["source"] = "Malkorok",
["encounterID"] = 1595,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71454,
},
[265407] = {
["source"] = "Banquet Steward",
["event"] = "SPELL_CAST_START",
["npcID"] = 131586,
},
[145860] = {
["source"] = "Thunderlord Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 72232,
},
[392014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rokzul",
["npcID"] = 194458,
},
[316959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrosive Digester",
["npcID"] = 162828,
},
[412492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brullo the Strong",
["npcID"] = 203621,
},
[388332] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[166335] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[289623] = {
["source"] = "7th Legion Medic",
["event"] = "SPELL_CAST_START",
["npcID"] = 147825,
},
[124048] = {
["source"] = "Osul Sharphorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 60647,
},
[373936] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[318312] = {
["source"] = "Stitchyard Surgeon",
["event"] = "SPELL_CAST_START",
["npcID"] = 159679,
},
[361300] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of War",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181549,
},
[149179] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[158141] = {
["source"] = "Icehoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 78920,
},
[395936] = {
["source"] = "Clearwater Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 192652,
},
[316598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Amberclaw",
["npcID"] = 162641,
},
[138691] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[418637] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[59685] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[369073] = {
["source"] = "Zaqali Hauler",
["event"] = "SPELL_CAST_START",
["npcID"] = 201341,
},
[198073] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1834,
},
[385827] = {
["source"] = "Rageclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 187192,
},
[257458] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[435366] = {
["source"] = "Eratus, the Unwoven Paradox",
["event"] = "SPELL_CAST_START",
["npcID"] = 217190,
},
[144832] = {
["encounterName"] = "Sha of Pride",
["source"] = "Sha of Pride",
["event"] = "SPELL_CAST_START",
["npcID"] = 71734,
},
[289647] = {
["source"] = "Breakwater Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 148569,
},
[61730] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snowplain Disciple",
["npcID"] = 26705,
},
[361304] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Wild Stampede",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 183421,
},
[202108] = {
["source"] = "Blightshard Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 90998,
},
[365400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shifting Stargorger",
["npcID"] = 184413,
},
[398172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stellagosa",
["npcID"] = 200099,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1045,
},
[381525] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Kyrakka",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190484,
},
[68841] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[196027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[373932] = {
["encounterName"] = "Azureblade",
["source"] = "Draconic Image",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 190187,
},
[148929] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[406357] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nalmir",
["npcID"] = 416,
},
[168383] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[366001] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Acquisitions Automa",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182074,
},
[406358] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[196028] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[180670] = {
["event"] = "SPELL_CAST_START",
["source"] = "K'ute",
["npcID"] = 90215,
},
[257629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[20819] = {
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4294,
},
[421029] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[369500] = {
["source"] = "Halondrus",
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[330593] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Fearspinner",
["npcID"] = 168724,
},
[390952] = {
["source"] = "Grand Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 188009,
},
[406378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Remnants of Sindragosa",
["npcID"] = 201089,
},
[385883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge-Keep Custodian",
["npcID"] = 192703,
},
[198077] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[260700] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[169418] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[259519] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brinefang Saurolisk",
["npcID"] = 136901,
},
[412505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyr's Vanguard",
["npcID"] = 205151,
},
[398171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senegos",
["npcID"] = 199923,
},
[357218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Colossus",
["npcID"] = 188673,
},
[443222] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[371551] = {
["source"] = "Stormfang Dustcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 187551,
},
[174529] = {
["source"] = "Captain Brak",
["event"] = "SPELL_CAST_START",
["npcID"] = 81254,
},
[359265] = {
["source"] = "Automa Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 182799,
},
[32888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Soul",
["npcID"] = 18506,
},
[428889] = {
["encounterName"] = "Ozumat",
["source"] = "Ink of Ozumat",
["npcID"] = 213770,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[145861] = {
["source"] = "Vanity",
["event"] = "SPELL_CAST_START",
["npcID"] = 72662,
},
[260322] = {
["source"] = "Nol'ixwan",
["event"] = "SPELL_CAST_START",
["npcID"] = 130741,
},
[86249] = {
["source"] = "7th Legion Submariner",
["event"] = "SPELL_CAST_START",
["npcID"] = 45403,
},
[198079] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["npcID"] = 98949,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1834,
},
[385172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Serpent",
["npcID"] = 191645,
},
[375649] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Tender",
["npcID"] = 196115,
},
[238586] = {
["source"] = "Brutal Punisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 117421,
},
[154216] = {
["source"] = "Sun Trinket",
["event"] = "SPELL_CAST_START",
["npcID"] = 76094,
},
[406366] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[169574] = {
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 81721,
},
[412486] = {
["source"] = "Warchanter Ronvath",
["event"] = "SPELL_CAST_START",
["npcID"] = 200128,
},
[289645] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 147787,
},
[314205] = {
["source"] = "Shadow-Walker Yash'gth",
["event"] = "SPELL_CAST_START",
["npcID"] = 159318,
},
[341163] = {
["source"] = "Kyrian Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 171396,
},
[426845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infested Icecaller",
["npcID"] = 84989,
},
[144839] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hisek the Swarmkeeper",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71153,
},
[373051] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudfin Salamancer",
["npcID"] = 186669,
},
[375652] = {
["source"] = "Arcane Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 196115,
},
[114999] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 56884,
},
[428894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Honor Guard",
["npcID"] = 214264,
},
[406369] = {
["source"] = "Primal Nightflame",
["event"] = "SPELL_CAST_START",
["npcID"] = 200931,
},
[375653] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Drakonid Stormbringer",
["npcID"] = 191232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[396751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gahz'raxes",
["npcID"] = 200537,
},
[161222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[406282] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Naturalist",
["npcID"] = 201746,
},
[125506] = {
["source"] = "Commander Lindon",
["event"] = "SPELL_CAST_START",
["npcID"] = 59191,
},
[407775] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Thadrion",
["npcID"] = 200913,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[330604] = {
["source"] = "Vault Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 200375,
},
[166342] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo Hunter",
["npcID"] = 79895,
},
[383846] = {
["source"] = "Furious Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 196540,
},
[271220] = {
["source"] = "Scrapbone Grunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 152960,
},
[169414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironmarch Warcaster",
["npcID"] = 78670,
},
[83915] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[289649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Krag'wa",
["npcID"] = 148625,
},
[395458] = {
["source"] = "Harkyn Grymstone",
["event"] = "SPELL_CAST_START",
["npcID"] = 186200,
},
[88421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forest Ettin",
["npcID"] = 44367,
},
[268030] = {
["source"] = "Tidesage Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 136186,
},
[310129] = {
["encounterName"] = "Maut",
["source"] = "Maut",
["npcID"] = 156523,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2327,
},
[398497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Praying Stingray",
["npcID"] = 205065,
},
[114859] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[162248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pridelands Stalker",
["npcID"] = 88579,
},
[408422] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[361324] = {
["encounterName"] = "Halondrus the Reclaimer",
["source"] = "Halondrus",
["encounterID"] = 2529,
["event"] = "SPELL_CAST_START",
["npcID"] = 180906,
},
[255421] = {
["encounterName"] = "Rezan",
["source"] = "Rezan",
["npcID"] = 122963,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2086,
},
[141771] = {
["source"] = "Viletongue Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 58737,
},
[191941] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[263345] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Heavy Cannon",
["npcID"] = 134025,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[265081] = {
["source"] = "Chosen Blood Matron",
["event"] = "SPELL_CAST_START",
["npcID"] = 131436,
},
[332657] = {
["event"] = "SPELL_CAST_START",
["source"] = "Satiated Sawtooth",
["npcID"] = 164587,
},
[418680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexemia",
["npcID"] = 206967,
},
[221634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braxas the Fleshcarver",
["npcID"] = 111290,
},
[371565] = {
["source"] = "Ohn'ir Windcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 191244,
},
[79085] = {
["source"] = "Ionis",
["event"] = "SPELL_CAST_START",
["npcID"] = 50790,
},
[342897] = {
["source"] = "Crazed Maw-shroom",
["event"] = "SPELL_CAST_START",
["npcID"] = 174130,
},
[426855] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[202181] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockback Gnasher",
["npcID"] = 91006,
},
[373614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[130791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrosh'ar Grunt",
["npcID"] = 66398,
},
[152894] = {
["source"] = "Initiate of the Rising Sun",
["event"] = "SPELL_CAST_START",
["npcID"] = 79466,
},
[82669] = {
["source"] = "Bloodfang Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 45536,
},
[371875] = {
["source"] = "Qalashi Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 189266,
},
[172643] = {
["encounterName"] = "Xeri'tac",
["source"] = "Xeri'tac",
["encounterID"] = 1752,
["event"] = "SPELL_CAST_START",
["npcID"] = 84550,
},
[387224] = {
["source"] = "Dracthyr Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 201069,
},
[387950] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[260696] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[359282] = {
["source"] = "Automated Eliminator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184539,
},
[396447] = {
["source"] = "Shardwing",
["event"] = "SPELL_CAST_START",
["npcID"] = 201562,
},
[173514] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 83389,
},
[128232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[305515] = {
["encounterName"] = "Ravnyr",
["source"] = "Ravnyr",
["npcID"] = 156501,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[225732] = {
["source"] = "Lady Velandras Ravencrest",
["event"] = "SPELL_CAST_START",
["npcID"] = 98538,
},
[400542] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 193460,
},
[373618] = {
["source"] = "Hypnosis Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 190174,
},
[393615] = {
["source"] = "Huntmaster Amaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 188715,
},
[165851] = {
["source"] = "Emberbark Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 82284,
},
[99052] = {
["encounterName"] = "Beth'tilac",
["source"] = "Beth'tilac",
["npcID"] = 52498,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1197,
},
[427162] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[150990] = {
["source"] = "Razorfen Scarblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 74554,
},
[385263] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coastal Eel",
["npcID"] = 198782,
},
[289662] = {
["event"] = "SPELL_CAST_START",
["source"] = "7th Legion Battlemage",
["npcID"] = 147787,
},
[360414] = {
["encounterName"] = "Vigilant Guardian",
["source"] = "Vigilant Guardian",
["encounterID"] = 2512,
["event"] = "SPELL_CAST_START",
["npcID"] = 180773,
},
[212423] = {
["source"] = "Risen Skulker",
["event"] = "SPELL_CAST_START",
["npcID"] = 99541,
},
[451435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voidwraith",
["npcID"] = 224466,
},
[387955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ethereal Restorer",
["npcID"] = 196203,
},
[128233] = {
["source"] = "Scarlet Evangelist",
["event"] = "SPELL_CAST_START",
["npcID"] = 58685,
},
[191946] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["encounterID"] = 1810,
["event"] = "SPELL_CAST_START",
["npcID"] = 91784,
},
[93655] = {
["encounterName"] = "Mekgineer Thermaplugg",
["source"] = "Mekgineer Thermaplugg",
["encounterID"] = 382,
["event"] = "SPELL_CAST_START",
["npcID"] = 7800,
},
[265091] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[143973] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Wavebinder Kardris",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71858,
},
[87179] = {
["source"] = "Dalaran Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2358,
},
[257784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Brinescale",
["npcID"] = 129600,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2025,
},
[166350] = {
["isChanneled"] = true,
["source"] = "Iron Infantry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82590,
},
[375671] = {
["source"] = "Calving Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 189312,
},
[168398] = {
["encounterName"] = "Skulloc, Son of Gruul",
["source"] = "Blackhand's Might Turret",
["encounterID"] = 1754,
["event"] = "SPELL_CAST_START",
["npcID"] = 84215,
},
[164261] = {
["source"] = "Stonemaul Slaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 75835,
},
[211401] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[367481] = {
["source"] = "Cruel Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 186206,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["npcID"] = 18344,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[396041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cracked Concretion",
["npcID"] = 197074,
},
[387748] = {
["source"] = "Lurgan",
["event"] = "SPELL_CAST_START",
["npcID"] = 201540,
},
[175566] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fury",
["npcID"] = 87701,
},
[451732] = {
["source"] = "Swarming Cogwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 232871,
},
[56698] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ahn'kahar Spell Flinger",
["npcID"] = 30278,
},
[333612] = {
["source"] = "Encroaching Mite",
["event"] = "SPELL_CAST_START",
["npcID"] = 160811,
},
[396159] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[41084] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[428916] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[386700] = {
["source"] = "Rimebound Froststalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199795,
},
[383866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Incarnated Wick",
["npcID"] = 205407,
},
[426869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushing Waxthief",
["npcID"] = 229809,
},
[361630] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[85232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Field Worker",
["npcID"] = 47699,
},
[367485] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Claw Fighter",
["npcID"] = 185508,
},
[256445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Saurolisk",
["npcID"] = 123647,
},
[165329] = {
["source"] = "Thundering Goliath",
["event"] = "SPELL_CAST_START",
["npcID"] = 141616,
},
[324483] = {
["source"] = "Vorkai Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 170033,
},
[257478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Mastiff",
["npcID"] = 128551,
},
[385916] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[257383] = {
["source"] = "Warlord Malaja",
["event"] = "SPELL_CAST_START",
["npcID"] = 122664,
},
[422776] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[265089] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[250454] = {
["source"] = "Kel'vax Skeleton Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 126107,
},
[387965] = {
["source"] = "Time-Lost Bladewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 187232,
},
[377204] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[424825] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[363400] = {
["source"] = "Vespoid Drone",
["event"] = "SPELL_CAST_START",
["npcID"] = 178159,
},
[371584] = {
["source"] = "Embertooth Pooltender",
["event"] = "SPELL_CAST_START",
["npcID"] = 187445,
},
[260551] = {
["encounterName"] = "Soulbound Goliath",
["source"] = "Soulbound Goliath",
["encounterID"] = 2114,
["event"] = "SPELL_CAST_START",
["npcID"] = 131667,
},
[10346] = {
["source"] = "Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 6225,
},
[60227] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[457872] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[398206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Exhumed Spirit",
["npcID"] = 75979,
},
[383872] = {
["source"] = "Destructive Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 194179,
},
[418684] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Destroyer",
["npcID"] = 208208,
},
[40317] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[211406] = {
["source"] = "Blazing Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 104295,
},
[259531] = {
["encounterName"] = "Vol'kaal",
["source"] = "Reanimation Totem",
["npcID"] = 125977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2085,
},
[80003] = {
["source"] = "Worgen Commando",
["event"] = "SPELL_CAST_START",
["npcID"] = 45861,
},
[394391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rhuzast the Tempest",
["npcID"] = 197409,
},
[406399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Arcanist",
["npcID"] = 201736,
},
[150801] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[411916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Devourer",
["npcID"] = 205673,
},
[404364] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 202789,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[373636] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[59259] = {
["encounterName"] = "General Bjarngrim",
["source"] = "Hardened Steel Berserker",
["encounterID"] = 1987,
["event"] = "SPELL_CAST_START",
["npcID"] = 28579,
},
[377732] = {
["source"] = "Refti Custodian",
["event"] = "SPELL_CAST_START",
["npcID"] = 184319,
},
[428926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[182739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Shrieker",
["npcID"] = 101900,
},
[424836] = {
["source"] = "Sylvanesh the Ascended",
["event"] = "SPELL_CAST_START",
["npcID"] = 207107,
},
[394114] = {
["event"] = "SPELL_CAST_START",
["source"] = "S.A.V.I.O.R.",
["npcID"] = 195328,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Minion",
["npcID"] = 12922,
},
[256464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faithless Trapper",
["npcID"] = 129874,
},
[258338] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[36990] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Staff of Disintegration",
["npcID"] = 21274,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[420737] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[404209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Veltrax",
["npcID"] = 200904,
},
[375687] = {
["source"] = "Decay Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 190426,
},
[265088] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[387974] = {
["isChanneled"] = true,
["source"] = "Spectral Invoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 196202,
},
[406404] = {
["source"] = "Calibrating Scent Matrix",
["event"] = "SPELL_CAST_START",
["npcID"] = 203606,
},
[192985] = {
["encounterName"] = "Wrath of Azshara",
["source"] = "Wrath of Azshara",
["npcID"] = 96028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1814,
},
[201176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmtongue Scavenger",
["npcID"] = 98792,
},
[306953] = {
["encounterName"] = "Shad'har the Insatiable",
["source"] = "Shad'har the Insatiable",
["npcID"] = 157231,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2335,
},
[398483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[88886] = {
["source"] = "Spiritbound Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 68070,
},
[40062] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["npcID"] = 17882,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1948,
},
[11986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Apostle",
["npcID"] = 30179,
},
[98034] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["npcID"] = 52558,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1204,
},
[386993] = {
["source"] = "Cascade Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 194939,
},
[372296] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[381834] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[367500] = {
["source"] = "Bracken Warscourge",
["event"] = "SPELL_CAST_START",
["npcID"] = 185529,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["npcID"] = 18343,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1901,
},
[365458] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[20802] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 186363,
},
[390290] = {
["source"] = "Infuser Sariya",
["event"] = "SPELL_CAST_START",
["npcID"] = 190405,
},
[387849] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[378003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[173172] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 81685,
},
[167385] = {
["source"] = "Dungeoneer's Training Dummy",
["event"] = "SPELL_CAST_START",
["npcID"] = 194644,
},
[80117] = {
["source"] = "Crazed Gyreworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 151639,
},
[297879] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eye of the Corruptor",
["npcID"] = 153347,
},
[150997] = {
["source"] = "Razorfen Thornbolt",
["event"] = "SPELL_CAST_START",
["npcID"] = 74652,
},
[367503] = {
["source"] = "Decay Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 186191,
},
[265376] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[369811] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[407733] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Healer",
["npcID"] = 17730,
},
[365715] = {
["source"] = "Eternal Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 184530,
},
[420746] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[235310] = {
["source"] = "Mistress Matilda",
["event"] = "SPELL_CAST_START",
["npcID"] = 118511,
},
[367505] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pocopoc",
["npcID"] = 181059,
},
[312584] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Venomweaver",
["npcID"] = 161229,
},
[392098] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[16033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Injured Warsong Shaman",
["npcID"] = 27108,
},
[64156] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[224721] = {
["source"] = "Spiritwalker Ebonhorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 152385,
},
[408466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drogbar Crystal-collector",
["npcID"] = 204407,
},
[310184] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[392080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverwalker Tamopo",
["npcID"] = 193240,
},
[123121] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["encounterID"] = 1506,
["event"] = "SPELL_CAST_START",
["npcID"] = 62983,
},
[57725] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2004,
},
[166364] = {
["isChanneled"] = true,
["source"] = "Grom'kar Boomer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 82579,
},
[65648] = {
["encounterName"] = "Mimiron",
["source"] = "Aerial Command Unit",
["npcID"] = 33670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1138,
},
[426893] = {
["source"] = "Quartermaster Koratite",
["event"] = "SPELL_CAST_START",
["npcID"] = 209801,
},
[14443] = {
["source"] = "Gai-Cho Boltshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 62589,
},
[128304] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shado-Pan Disciple",
["npcID"] = 58198,
},
[311035] = {
["source"] = "Xari the Kind",
["event"] = "SPELL_CAST_START",
["npcID"] = 159119,
},
[371618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Farseer",
["npcID"] = 201117,
},
[265372] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[407296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erupting Shadowflame",
["npcID"] = 199838,
},
[79607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skitterweb Matriarch",
["npcID"] = 44906,
},
[392332] = {
["source"] = "Zumakh",
["event"] = "SPELL_CAST_START",
["npcID"] = 194624,
},
[375716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Primalist Mage",
["npcID"] = 191206,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[393607] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodclaw",
["npcID"] = 187553,
},
[114419] = {
["isChanneled"] = true,
["source"] = "Stonebound Colossus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56595,
},
[106740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watershaper Adept",
["npcID"] = 56670,
},
[396180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Worldcarver Wurmling",
["npcID"] = 187366,
},
[275363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Beastbot",
["npcID"] = 151933,
},
[200154] = {
["source"] = "Understone Demolisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 102253,
},
[426905] = {
["event"] = "SPELL_CAST_START",
["source"] = "Minion of Ghur'sha",
["npcID"] = 212778,
},
[311015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[299937] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 153824,
},
[157001] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[410516] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[373084] = {
["source"] = "Irontorch Commander",
["event"] = "SPELL_CAST_START",
["npcID"] = 189466,
},
[141794] = {
["source"] = "Champion Sithiss",
["event"] = "SPELL_CAST_START",
["npcID"] = 59632,
},
[392087] = {
["source"] = "Bossy Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 190998,
},
[40064] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Technician",
["npcID"] = 17414,
},
[231901] = {
["source"] = "Test Subject",
["event"] = "SPELL_CAST_START",
["npcID"] = 116285,
},
[150677] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[400279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Flamewalker",
["npcID"] = 199826,
},
[369563] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[147704] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[324513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Experimental Misstep",
["npcID"] = 199859,
},
[28993] = {
["source"] = "Nightlash",
["event"] = "SPELL_CAST_START",
["npcID"] = 46981,
},
[176606] = {
["source"] = "Sulfuric Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 85960,
},
[367502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pocopoc",
["npcID"] = 181059,
},
[195037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[365708] = {
["source"] = "Manifestor Krugan",
["event"] = "SPELL_CAST_START",
["npcID"] = 185363,
},
[34945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Scale-Healer",
["npcID"] = 21126,
},
[255446] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amaki Bloodsinger",
["npcID"] = 128773,
},
[265368] = {
["source"] = "Bewitched Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 131587,
},
[49309] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2024,
},
[398471] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[373662] = {
["isChanneled"] = true,
["source"] = "Sentinel Talondras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186420,
},
[400283] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[275364] = {
["event"] = "SPELL_CAST_START",
["source"] = "Abrasive Reconfigulator 8000",
["npcID"] = 140530,
},
[365477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Commander",
["npcID"] = 181797,
},
[404388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatching Egg",
["npcID"] = 202897,
},
[257495] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[263085] = {
["source"] = "Vilebone Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 134852,
},
[373897] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 189531,
},
[298691] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["encounterID"] = 2338,
["event"] = "SPELL_CAST_START",
["npcID"] = 152718,
},
[367521] = {
["source"] = "Bonebolt Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185534,
},
[63138] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[313691] = {
["source"] = "Aysa Cloudsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 159129,
},
[299946] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 153824,
},
[408476] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Erratic Remnant",
["npcID"] = 202824,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[155961] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[388000] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[201298] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Burster",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100532,
},
[375943] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[16561] = {
["source"] = "Infused Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 82857,
},
[388001] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[99576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lava Spawn",
["npcID"] = 53622,
},
[400288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Pain",
["npcID"] = 201290,
},
[176611] = {
["source"] = "Lesser Brimfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 85924,
},
[388002] = {
["source"] = "Bertinuat",
["event"] = "SPELL_CAST_START",
["npcID"] = 196288,
},
[316331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Exterminator",
["npcID"] = 154434,
},
[433053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[369573] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[306319] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[422815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Ordan",
["npcID"] = 208727,
},
[420782] = {
["isChanneled"] = true,
["source"] = "Zaqali Lavatongue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208661,
},
[377765] = {
["source"] = "Windborne Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 189485,
},
[169445] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[145552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Coin Counter",
["npcID"] = 202398,
},
[113967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glade Porcupine",
["npcID"] = 54896,
},
[295856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian of Azeroth",
["npcID"] = 152396,
},
[375719] = {
["source"] = "Steam Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 190700,
},
[129325] = {
["source"] = "Bloodthirsty Prowler",
["event"] = "SPELL_CAST_START",
["npcID"] = 62945,
},
[408483] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[385958] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[194019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Scrapper",
["npcID"] = 98003,
},
[384132] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[332239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Goxul the Devourer",
["npcID"] = 170418,
},
[385959] = {
["source"] = "Defense Orb",
["event"] = "SPELL_CAST_START",
["npcID"] = 195184,
},
[408502] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[387337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Earthrazer",
["npcID"] = 203739,
},
[209378] = {
["source"] = "Imacu'tya",
["event"] = "SPELL_CAST_START",
["npcID"] = 104275,
},
[361387] = {
["event"] = "SPELL_CAST_START",
["source"] = "Antros",
["npcID"] = 182466,
},
[388008] = {
["encounterName"] = "Telash Greywing",
["source"] = "Telash Greywing",
["encounterID"] = 2583,
["event"] = "SPELL_CAST_START",
["npcID"] = 186737,
},
[162280] = {
["source"] = "Blook",
["event"] = "SPELL_CAST_START",
["npcID"] = 78030,
},
[138739] = {
["source"] = "Farraki Sand Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 69899,
},
[271287] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Stormsurge",
["npcID"] = 141123,
},
[403671] = {
["encounterName"] = "Magmorax",
["source"] = "Magmorax",
["encounterID"] = 2683,
["event"] = "SPELL_CAST_START",
["npcID"] = 201579,
},
[57984] = {
["source"] = "Primal Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 61029,
},
[400296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Preserver",
["npcID"] = 199972,
},
[392105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[373680] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Melidrussa Chillworn",
["encounterID"] = 2609,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188252,
},
[404396] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[441252] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacular Slime",
["npcID"] = 220364,
},
[399086] = {
["source"] = "Zaqali Firecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 200454,
},
[354586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Troz'igal the Oppressor",
["npcID"] = 179526,
},
[373692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[167401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jabberback",
["npcID"] = 79726,
},
[410537] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[153067] = {
["encounterName"] = "Nhallish",
["source"] = "Nhallish",
["npcID"] = 75829,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1688,
},
[195046] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Oracle",
["npcID"] = 95861,
},
[98043] = {
["encounterName"] = "Lord Rhyolith",
["source"] = "Lord Rhyolith",
["npcID"] = 52558,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1204,
},
[271291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129097,
},
[300171] = {
["source"] = "Heavy Scrapbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 150276,
},
[400300] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[15586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[347073] = {
["source"] = "Bound Excavator",
["event"] = "SPELL_CAST_START",
["npcID"] = 176254,
},
[289722] = {
["source"] = "Nathanos Blightcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 147187,
},
[31554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Defender",
["npcID"] = 17958,
},
[375937] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[39581] = {
["source"] = "Storm Fury",
["event"] = "SPELL_CAST_START",
["npcID"] = 22848,
},
[15970] = {
["source"] = "Nightmare Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 5280,
},
[447400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Queen Rickiticka",
["npcID"] = 215772,
},
[392111] = {
["source"] = "Shiverweb Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 185814,
},
[369602] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184580,
},
[199143] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[112084] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Zao Sunseeker",
["encounterID"] = 1417,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[406652] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[41091] = {
["isChanneled"] = true,
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23018,
},
[157165] = {
["source"] = "Sargerei Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 77132,
},
[166380] = {
["source"] = "Grom'kar Captain",
["event"] = "SPELL_CAST_START",
["npcID"] = 82597,
},
[408495] = {
["source"] = "Elder Magma Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 203846,
},
[393411] = {
["source"] = "Rakkesh of the Flow",
["event"] = "SPELL_CAST_START",
["npcID"] = 193849,
},
[404400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrachniss",
["npcID"] = 200978,
},
[388886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Scepter",
["npcID"] = 196576,
},
[375732] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Conjured Lasher",
["npcID"] = 191164,
},
[209033] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[289727] = {
["source"] = "Gnomish Commando",
["event"] = "SPELL_CAST_START",
["npcID"] = 148442,
},
[128249] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 58756,
},
[51587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[453749] = {
["source"] = "Kelpmire",
["event"] = "SPELL_CAST_START",
["npcID"] = 220287,
},
[36228] = {
["source"] = "Rental Shredder",
["event"] = "SPELL_CAST_START",
["npcID"] = 38650,
},
[386173] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[311019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Behemoth",
["npcID"] = 159303,
},
[131570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skullcrusher Gundu",
["npcID"] = 70787,
},
[306111] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["npcID"] = 156818,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2329,
},
[199146] = {
["source"] = "Gildedfur Stag",
["event"] = "SPELL_CAST_START",
["npcID"] = 96609,
},
[404403] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[385974] = {
["encounterName"] = "Vexamus",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[461741] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Finley Mrrgglton",
["npcID"] = 228030,
},
[299973] = {
["source"] = "Killsaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 152007,
},
[449455] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghastly Voidsoul",
["npcID"] = 212453,
},
[114571] = {
["encounterName"] = "Lorewalker Stonestep",
["source"] = "Strife",
["npcID"] = 59051,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1417,
},
[198962] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[54916] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[293827] = {
["source"] = "Mechagon Tinkerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 144294,
},
[312257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[297923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zanj'ir Myrmidon",
["npcID"] = 152883,
},
[316353] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Warrior",
["npcID"] = 154462,
},
[171503] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Adherent Wind-Lasher",
["npcID"] = 81934,
},
[311544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sanguimar",
["npcID"] = 159767,
},
[289733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jek'kwa",
["npcID"] = 148621,
},
[422837] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[100094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Flame",
["npcID"] = 53793,
},
[394362] = {
["source"] = "Rasnar the War Ender",
["event"] = "SPELL_CAST_START",
["npcID"] = 193232,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["event"] = "SPELL_CAST_START",
["npcID"] = 26930,
},
[145907] = {
["source"] = "Kor'kron Skullsplitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72744,
},
[299979] = {
["source"] = "Sawblade Clearcutter",
["event"] = "SPELL_CAST_START",
["npcID"] = 151871,
},
[265168] = {
["encounterName"] = "Council o' Captains",
["source"] = "Rummy Mancomb",
["npcID"] = 133219,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[404409] = {
["source"] = "Reisa the Drowned",
["event"] = "SPELL_CAST_START",
["npcID"] = 200600,
},
[373693] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazebound Destroyer",
["npcID"] = 190034,
},
[410743] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Ignited Plume",
["npcID"] = 205167,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[336834] = {
["source"] = "Monstrous Riftcrasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184606,
},
[428983] = {
["isChanneled"] = true,
["source"] = "Pip",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210518,
},
[384385] = {
["source"] = "Frostsnout Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 199354,
},
[424888] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[312262] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Depthspeaker",
["npcID"] = 162887,
},
[256581] = {
["source"] = "Scheming Street Scamp",
["event"] = "SPELL_CAST_START",
["npcID"] = 129394,
},
[429172] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["npcID"] = 40788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[100095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harbinger of Flame",
["npcID"] = 53793,
},
[276991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Overseer",
["npcID"] = 156676,
},
[374544] = {
["source"] = "Fetid Rotsinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 186226,
},
[51586] = {
["source"] = "Dragonflayer Spiritualist",
["event"] = "SPELL_CAST_START",
["npcID"] = 28410,
},
[138742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farraki Sand Conjurer",
["npcID"] = 69899,
},
[131575] = {
["source"] = "Monk Trainee",
["event"] = "SPELL_CAST_START",
["npcID"] = 66947,
},
[255597] = {
["source"] = "Wailing Siren",
["event"] = "SPELL_CAST_START",
["npcID"] = 126440,
},
[199151] = {
["source"] = "Angerhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 96611,
},
[408509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portalkeeper Cimbra",
["npcID"] = 202613,
},
[271310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[328831] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Undying Blademaster",
["npcID"] = 182268,
},
[373698] = {
["source"] = "Brackenhide Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 186220,
},
[318409] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[304075] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[404415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Damned Warrior",
["npcID"] = 202922,
},
[256489] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[359547] = {
["source"] = "Dominated Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 185314,
},
[116990] = {
["isChanneled"] = true,
["source"] = "Stone Quilen",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 60576,
},
[265169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Archelion Great Turtle",
["npcID"] = 130918,
},
[308172] = {
["source"] = "Fallen Voidspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 152722,
},
[392130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Maxdormu",
["npcID"] = 189668,
},
[197105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Arcanist",
["npcID"] = 97171,
},
[283598] = {
["encounterName"] = "Champion of the Light",
["source"] = "Frida Ironbellows",
["npcID"] = 144680,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2265,
},
[121468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raigonn",
["npcID"] = 61177,
},
[173563] = {
["encounterName"] = "Yalnu",
["source"] = "Feral Lasher",
["encounterID"] = 1756,
["event"] = "SPELL_CAST_START",
["npcID"] = 86684,
},
[158498] = {
["source"] = "Windroc",
["event"] = "SPELL_CAST_START",
["npcID"] = 79398,
},
[38556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkspear Headhunter",
["npcID"] = 74228,
},
[396640] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Ancient Branch",
["npcID"] = 196548,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[406481] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[273547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornered Operative",
["npcID"] = 142072,
},
[194038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gleamhoof Stag",
["npcID"] = 93313,
},
[398276] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[36227] = {
["source"] = "Unamused Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 110721,
},
[154442] = {
["encounterName"] = "Ner'zhul",
["source"] = "Ner'zhul",
["npcID"] = 76407,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1682,
},
[461757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reno Jackson",
["npcID"] = 228044,
},
[162295] = {
["source"] = "Trained Bonestripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 72650,
},
[157173] = {
["source"] = "Felguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 79507,
},
[320463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steelskin Linebreaker",
["npcID"] = 160479,
},
[107120] = {
["encounterName"] = "Commander Ri'mok",
["source"] = "Commander Ri'mok",
["npcID"] = 56636,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1406,
},
[298111] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushtide Orb",
["npcID"] = 153500,
},
[121601] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[112896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Flesh-Eater",
["npcID"] = 70746,
},
[173180] = {
["source"] = "Stoneshamble Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 74962,
},
[8873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Snarlflare",
["npcID"] = 14272,
},
[7154] = {
["encounterName"] = "Antu'sul",
["source"] = "Sandfury Soul Eater",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 7247,
},
[320465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Torturer",
["npcID"] = 202555,
},
[314322] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[20805] = {
["source"] = "Mudsnout Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 2373,
},
[395827] = {
["source"] = "Parched Broadhoof Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 194352,
},
[369781] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[304093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[412614] = {
["source"] = "Viridian King",
["event"] = "SPELL_CAST_START",
["npcID"] = 201029,
},
[359374] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defective Reformatter",
["npcID"] = 181862,
},
[367484] = {
["source"] = "Claw Fighter",
["event"] = "SPELL_CAST_START",
["npcID"] = 185508,
},
[119552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[256494] = {
["encounterName"] = "Ring of Booty",
["source"] = "Trothak",
["npcID"] = 126969,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[424903] = {
["encounterName"] = "E.D.N.A.",
["source"] = "E.D.N.A",
["npcID"] = 210108,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2854,
},
[401810] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[314325] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[414665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Gillbeater",
["npcID"] = 205823,
},
[187895] = {
["source"] = "Risen Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 146341,
},
[287705] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Defender",
["npcID"] = 148393,
},
[123648] = {
["source"] = "Harthak Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 61946,
},
[420817] = {
["source"] = "Kaldorei Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 207117,
},
[15587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Medic",
["npcID"] = 8894,
},
[383953] = {
["source"] = "Bakar Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194255,
},
[388046] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[396400] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[118529] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[271487] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tentacle of Shul-Nagruth",
["npcID"] = 128609,
},
[119553] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[390115] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[260313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qy'telek",
["npcID"] = 130726,
},
[96516] = {
["source"] = "Lesser Priest of Bethekk",
["event"] = "SPELL_CAST_START",
["npcID"] = 52339,
},
[314329] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[41093] = {
["source"] = "Shadowmoon Houndmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23018,
},
[400335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[160332] = {
["source"] = "Shiverblood Slasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 78758,
},
[123649] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[418121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Klaxxi Monstrosity",
["npcID"] = 207923,
},
[134656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Roaming Fog",
["npcID"] = 68313,
},
[435148] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Footman",
["npcID"] = 212835,
},
[314331] = {
["source"] = "Kzit'kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 160867,
},
[154110] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[310236] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kilxl the Gaping Maw",
["npcID"] = 157266,
},
[271329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pathfinder Tacha",
["npcID"] = 200263,
},
[119554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subetai the Swift",
["npcID"] = 61427,
},
[166397] = {
["source"] = "Grimrail Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 82590,
},
[200185] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[193018] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[365682] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 184792,
},
[137729] = {
["encounterName"] = "Megaera",
["source"] = "Flaming Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70212,
},
[56898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Darkcaster",
["npcID"] = 30319,
},
[336859] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[412626] = {
["source"] = "General Zskorro",
["event"] = "SPELL_CAST_START",
["npcID"] = 203592,
},
[167420] = {
["source"] = "Lady Liadrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 79823,
},
[359538] = {
["source"] = "Cradle Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 181943,
},
[256039] = {
["encounterName"] = "Overseer Korgus",
["source"] = "Overseer Korgus",
["npcID"] = 127503,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2104,
},
[371824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[316383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 162534,
},
[400333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cliffkeeper Bouldani",
["npcID"] = 202612,
},
[221688] = {
["event"] = "SPELL_CAST_START",
["source"] = "Braxas the Fleshcarver",
["npcID"] = 111290,
},
[400492] = {
["source"] = "Zaqali Cindershaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 199824,
},
[141427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteleaf Squirt",
["npcID"] = 84655,
},
[209027] = {
["source"] = "Duskwatch Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 111563,
},
[386757] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["encounterID"] = 2617,
["event"] = "SPELL_CAST_START",
["npcID"] = 189727,
},
[259572] = {
["encounterName"] = "Vol'kaal",
["source"] = "Vol'kaal",
["npcID"] = 122965,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2085,
},
[386024] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[375770] = {
["source"] = "Frozion",
["event"] = "SPELL_CAST_START",
["npcID"] = 193655,
},
[426964] = {
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_START",
["npcID"] = 206705,
},
[283628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anointed Disciple",
["npcID"] = 145898,
},
[398296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[293861] = {
["source"] = "Ernst",
["event"] = "SPELL_CAST_START",
["npcID"] = 151629,
},
[412777] = {
["isChanneled"] = true,
["source"] = "Kith'ix",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198952,
},
[185854] = {
["source"] = "Nightmare Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 92792,
},
[260703] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Malady",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131823,
},
[34697] = {
["encounterName"] = "Laj",
["source"] = "Laj",
["encounterID"] = 1927,
["event"] = "SPELL_CAST_START",
["npcID"] = 17980,
},
[197117] = {
["encounterName"] = "Helya",
["source"] = "Piercing Tentacle",
["npcID"] = 100188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1824,
},
[214692] = {
["source"] = "Gerenth the Vile",
["event"] = "SPELL_CAST_START",
["npcID"] = 107435,
},
[365678] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[277481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armed Prisoner",
["npcID"] = 154011,
},
[193022] = {
["source"] = "Eredar Deathspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 96196,
},
[453588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coalesced Monstrosity",
["npcID"] = 220266,
},
[32325] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["npcID"] = 18341,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1900,
},
[310246] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[188927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkfiend Dreadbringer",
["npcID"] = 92789,
},
[123652] = {
["source"] = "Kargesh Ribcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 61947,
},
[283626] = {
["encounterName"] = "Champion of the Light",
["source"] = "Anointed Disciple",
["encounterID"] = 2265,
["event"] = "SPELL_CAST_START",
["npcID"] = 145898,
},
[304245] = {
["source"] = "Abyssal Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 155271,
},
[336868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Riftcrasher",
["npcID"] = 184606,
},
[388060] = {
["source"] = "Stinkbreath",
["event"] = "SPELL_CAST_START",
["npcID"] = 187033,
},
[426974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Addled Arcanomancer",
["npcID"] = 84990,
},
[102151] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[386015] = {
["source"] = "Primalist Stormspeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 194894,
},
[453591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Congealed Slime",
["npcID"] = 225494,
},
[406493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spinmarrow",
["npcID"] = 203480,
},
[392159] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[443353] = {
["source"] = "Bloated Cindermite",
["event"] = "SPELL_CAST_START",
["npcID"] = 222295,
},
[185857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Marine",
["npcID"] = 130027,
},
[404695] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[398300] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shambling Infester",
["npcID"] = 200387,
},
[381517] = {
["encounterName"] = "Kyrakka and Erkhart Stormvein",
["source"] = "Erkhart Stormvein",
["encounterID"] = 2623,
["event"] = "SPELL_CAST_START",
["npcID"] = 190485,
},
[20815] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4289,
},
[406495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[351206] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Soulwarden",
["npcID"] = 176575,
},
[396392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dueling Student",
["npcID"] = 199377,
},
[429021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[275440] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[41114] = {
["source"] = "Ashtongue Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 22845,
},
[435165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sir Braunpyke",
["npcID"] = 217658,
},
[297966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maw of the Maw",
["npcID"] = 185013,
},
[150023] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[397014] = {
["source"] = "Qalashi Emissary",
["event"] = "SPELL_CAST_START",
["npcID"] = 197146,
},
[418784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[315697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Soldier",
["npcID"] = 162885,
},
[361452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[163334] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80808,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["npcID"] = 40792,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[322541] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Horrific Bonemauler",
["npcID"] = 162109,
},
[400486] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[192003] = {
["encounterName"] = "Serpentrix",
["source"] = "Blazing Hydra Spawn",
["npcID"] = 97259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[162407] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[306289] = {
["encounterName"] = "Wrathion",
["source"] = "Wrathion",
["encounterID"] = 2329,
["event"] = "SPELL_CAST_START",
["npcID"] = 156818,
},
[377844] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[383975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Windlord",
["npcID"] = 200390,
},
[13860] = {
["source"] = "Baron Ashbury",
["event"] = "SPELL_CAST_START",
["npcID"] = 45880,
},
[404465] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[240126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Commander Urgoz",
["npcID"] = 118006,
},
[423010] = {
["source"] = "Dionaessa",
["event"] = "SPELL_CAST_START",
["npcID"] = 210813,
},
[209410] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[76588] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[20295] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[318449] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[41098] = {
["isChanneled"] = true,
["source"] = "Shadowmoon Weapon Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23049,
},
[270976] = {
["event"] = "SPELL_CAST_START",
["source"] = "Briarwood Invader",
["npcID"] = 131373,
},
[340975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlbranch Wrecker",
["npcID"] = 163967,
},
[192005] = {
["encounterName"] = "Serpentrix",
["source"] = "Arcane Hydra Spawn",
["npcID"] = 97260,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[443363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[404456] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["encounterID"] = 2685,
["event"] = "SPELL_CAST_START",
["npcID"] = 201754,
},
[265352] = {
["source"] = "Blight Toad",
["event"] = "SPELL_CAST_START",
["npcID"] = 135052,
},
[416743] = {
["source"] = "Hungering Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206016,
},
[418791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[390245] = {
["source"] = "Embertooth Spearhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 188725,
},
[150214] = {
["source"] = "Razorfen Geomagus",
["event"] = "SPELL_CAST_START",
["npcID"] = 74545,
},
[378029] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186124,
},
[386028] = {
["source"] = "Primalist Thunderbeast",
["event"] = "SPELL_CAST_START",
["npcID"] = 195696,
},
[126354] = {
["source"] = "Ramkahen Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 157795,
},
[373742] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[383981] = {
["source"] = "Rising Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 194575,
},
[275570] = {
["source"] = "Vilebone Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 134852,
},
[173479] = {
["source"] = "Cannon Turret",
["event"] = "SPELL_CAST_START",
["npcID"] = 86690,
},
[188907] = {
["source"] = "Darkfiend Dreadbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 92789,
},
[262577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Diremaw",
["npcID"] = 128620,
},
[209413] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[386026] = {
["source"] = "Unstable Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 194895,
},
[275452] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[200205] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[425149] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[362806] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[106823] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[269310] = {
["encounterName"] = "Unbound Abomination",
["source"] = "Titan Keeper Hezrel",
["encounterID"] = 2123,
["event"] = "SPELL_CAST_START",
["npcID"] = 134419,
},
[418796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Supreme General Pa'valak",
["npcID"] = 208211,
},
[371812] = {
["source"] = "Menial Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 192702,
},
[56969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[209471] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Nightmare Ichor",
["npcID"] = 105721,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[152893] = {
["source"] = "Herald of Sunrise",
["event"] = "SPELL_CAST_START",
["npcID"] = 78933,
},
[11981] = {
["source"] = "Hakkari Sapper",
["event"] = "SPELL_CAST_START",
["npcID"] = 8336,
},
[199176] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[396069] = {
["source"] = "Primal Earthshard",
["event"] = "SPELL_CAST_START",
["npcID"] = 185647,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[420846] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[139797] = {
["encounterName"] = "Iron Qon",
["source"] = "Manchu",
["encounterID"] = 1559,
["event"] = "SPELL_CAST_START",
["npcID"] = 70202,
},
[416751] = {
["source"] = "Vargul Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 207805,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[453611] = {
["source"] = "Automaxor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220265,
},
[295939] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[32197] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[68799] = {
["source"] = "Apothecary Frye",
["event"] = "SPELL_CAST_START",
["npcID"] = 36272,
},
[410629] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[211464] = {
["source"] = "Felbound Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 104278,
},
[365572] = {
["source"] = "Dominated Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 184733,
},
[256506] = {
["source"] = "Horker",
["event"] = "SPELL_CAST_START",
["npcID"] = 169460,
},
[338939] = {
["source"] = "Decrepit Bilespawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 166928,
},
[150032] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[310271] = {
["event"] = "SPELL_CAST_START",
["source"] = "Will of N'Zoth",
["npcID"] = 154495,
},
[201226] = {
["encounterName"] = "Dresaron",
["source"] = "Bloodtainted Fury",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 100531,
},
[396432] = {
["source"] = "Ancient Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 189798,
},
[406516] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[298528] = {
["encounterName"] = "Oblivion Elemental",
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmer",
["npcID"] = 153526,
},
[336893] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[222728] = {
["source"] = "Wisp",
["event"] = "SPELL_CAST_START",
["npcID"] = 112252,
},
[196111] = {
["encounterName"] = "Serpentrix",
["source"] = "Seaspray Crab",
["npcID"] = 91793,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[150038] = {
["encounterName"] = "Magmolatus",
["source"] = "Magmolatus",
["encounterID"] = 1655,
["event"] = "SPELL_CAST_START",
["npcID"] = 74475,
},
[40076] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[453616] = {
["source"] = "Doomguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 225493,
},
[20296] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4289,
},
[40844] = {
["source"] = "Bonechewer Worker",
["event"] = "SPELL_CAST_START",
["npcID"] = 22963,
},
[10277] = {
["source"] = "Torn Fin Coastrunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2375,
},
[453617] = {
["source"] = "Automaxor",
["event"] = "SPELL_CAST_START",
["npcID"] = 220265,
},
[308227] = {
["encounterName"] = "The Hivemind",
["source"] = "Tek'ris",
["npcID"] = 157254,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2333,
},
[449522] = {
["source"] = "Drone Abductor",
["event"] = "SPELL_CAST_START",
["npcID"] = 219655,
},
[369921] = {
["source"] = "Eldoren the Reborn",
["event"] = "SPELL_CAST_START",
["npcID"] = 193234,
},
[404472] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Neldris",
["npcID"] = 200912,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[162321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bladespire Ogron",
["npcID"] = 78173,
},
[160323] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[309669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[404473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galakhad",
["npcID"] = 200717,
},
[408574] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 202692,
},
[310277] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[178702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bittertide Brinetail",
["npcID"] = 131674,
},
[330755] = {
["source"] = "Octolus",
["event"] = "SPELL_CAST_START",
["npcID"] = 182690,
},
[377950] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[425048] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[271371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ogre Taskmaster",
["npcID"] = 156986,
},
[410625] = {
["encounterName"] = "Scalecommander Sarkareth",
["source"] = "Sarkareth",
["npcID"] = 201754,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2685,
},
[59019] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[369675] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[384092] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timetender Athekk",
["npcID"] = 193042,
},
[161299] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[210150] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[302089] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sean Wilkers",
["npcID"] = 155261,
},
[265241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lazy Drudge",
["npcID"] = 135190,
},
[461814] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[260258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Fragment",
["npcID"] = 126538,
},
[41374] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[365661] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[412669] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[211470] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[392192] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Blazing Fiend",
["npcID"] = 190688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[11922] = {
["source"] = "Constrictor Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 130272,
},
[374112] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Frostbreath Arachnid",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189234,
},
[166420] = {
["source"] = "Blackrock Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 81422,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[406527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Banana Bomber",
["npcID"] = 203641,
},
[461817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daughter of Alizabal",
["npcID"] = 214142,
},
[260617] = {
["source"] = "Zuvembi Brewer Zekal",
["event"] = "SPELL_CAST_START",
["npcID"] = 130260,
},
[392194] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["encounterID"] = 2614,
["event"] = "SPELL_CAST_START",
["npcID"] = 190245,
},
[197137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[390150] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wyrmeater",
["npcID"] = 186612,
},
[340414] = {
["source"] = "Forgotten Research",
["event"] = "SPELL_CAST_START",
["npcID"] = 202446,
},
[192018] = {
["encounterName"] = "Hyrja",
["source"] = "Hyrja",
["encounterID"] = 1806,
["event"] = "SPELL_CAST_START",
["npcID"] = 95833,
},
[112911] = {
["source"] = "Fragment of Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58810,
},
[316439] = {
["source"] = "Swarmguard Kzaz",
["event"] = "SPELL_CAST_START",
["npcID"] = 155723,
},
[145944] = {
["source"] = "Zeal",
["event"] = "SPELL_CAST_START",
["npcID"] = 72661,
},
[40078] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[54431] = {
["source"] = "Bilgefin Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 98502,
},
[169494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnarlroot",
["npcID"] = 81984,
},
[40088] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[408576] = {
["encounterName"] = "The Forgotten Experiments",
["source"] = "Rionthus",
["npcID"] = 200918,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2693,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[117519] = {
["source"] = "Protector Kaolan",
["event"] = "SPELL_CAST_START",
["npcID"] = 60583,
},
[211473] = {
["source"] = "Shadow Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 104300,
},
[386059] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[312336] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Dark Inquisitor Xanesh",
["npcID"] = 156575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[153794] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[197144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[369677] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Olaf",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184580,
},
[336910] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[144922] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71380,
},
[41378] = {
["source"] = "Priestess of Delight",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[381592] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[172567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwall Grunt",
["npcID"] = 81368,
},
[412678] = {
["source"] = "Klakatak",
["event"] = "SPELL_CAST_START",
["npcID"] = 203618,
},
[267288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Ring Shaman",
["npcID"] = 135671,
},
[259597] = {
["event"] = "SPELL_CAST_START",
["source"] = "Child of Gonk",
["npcID"] = 127254,
},
[75068] = {
["source"] = "Grimfrost Lavaslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 72987,
},
[144923] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Animated Stone Mogu",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71380,
},
[59020] = {
["source"] = "Spitting Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 29774,
},
[343056] = {
["source"] = "Heraclor",
["event"] = "SPELL_CAST_START",
["npcID"] = 172025,
},
[197141] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wrangler",
["npcID"] = 100216,
},
[420881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Ashwarden",
["npcID"] = 208659,
},
[139841] = {
["encounterName"] = "Megaera",
["source"] = "Frozen Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70235,
},
[294362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspeaker",
["npcID"] = 155908,
},
[420856] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[363607] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Domination Core",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181244,
},
[310298] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Soulcarver",
["npcID"] = 162717,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["npcID"] = 45379,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1054,
},
[394264] = {
["source"] = "Hyenamaster Durgun",
["event"] = "SPELL_CAST_START",
["npcID"] = 186515,
},
[396370] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[206459] = {
["encounterName"] = "Cordana Felsong",
["source"] = "Avatar of Shadow",
["npcID"] = 104293,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1818,
},
[384014] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[15653] = {
["source"] = "Nightmare Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 5280,
},
[369674] = {
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 184022,
},
[211477] = {
["source"] = "Legion Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 104277,
},
[246286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vilescale Harpooner",
["npcID"] = 123771,
},
[386063] = {
["encounterName"] = "Teera and Maruuk",
["source"] = "Maruuk",
["encounterID"] = 2581,
["event"] = "SPELL_CAST_START",
["npcID"] = 186338,
},
[396302] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[404807] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[392207] = {
["source"] = "Gareed",
["event"] = "SPELL_CAST_START",
["npcID"] = 200722,
},
[40079] = {
["source"] = "Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 22884,
},
[317792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magus of the Dead",
["npcID"] = 163366,
},
[425037] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[285725] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Kul Tiran Marine",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 148120,
},
[147998] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[355349] = {
["source"] = "Reality Breacher",
["event"] = "SPELL_CAST_START",
["npcID"] = 184185,
},
[431180] = {
["source"] = "Dripear the Waxy",
["event"] = "SPELL_CAST_START",
["npcID"] = 213883,
},
[200216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reaves",
["npcID"] = 101462,
},
[160285] = {
["source"] = "Goren Gouger",
["event"] = "SPELL_CAST_START",
["npcID"] = 80690,
},
[404496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201383,
},
[172578] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Melded Berserker",
["npcID"] = 86372,
},
[377277] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volethi",
["npcID"] = 200727,
},
[392272] = {
["source"] = "Grove Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 186457,
},
[308352] = {
["source"] = "Anima Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 155970,
},
[199193] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Dantalionax",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[202295] = {
["source"] = "Feltongue Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 116784,
},
[41360] = {
["source"] = "Promenade Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 23394,
},
[316463] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mindgate",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158374,
},
[260307] = {
["source"] = "Venomous Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 144496,
},
[396366] = {
["source"] = "Tikarr Frostclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201542,
},
[139838] = {
["encounterName"] = "Megaera",
["source"] = "Venomous Head",
["encounterID"] = 1578,
["event"] = "SPELL_CAST_START",
["npcID"] = 70247,
},
[461836] = {
["source"] = "Flickerflame Candleflyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 219341,
},
[396315] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[200218] = {
["source"] = "Reaves",
["event"] = "SPELL_CAST_START",
["npcID"] = 101462,
},
[143905] = {
["source"] = "Deepfrost Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 78888,
},
[118049] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[148004] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[289914] = {
["source"] = "Vessel of Bwonsamdi",
["event"] = "SPELL_CAST_START",
["npcID"] = 148673,
},
[263206] = {
["source"] = "Loa-Gutter Darter",
["event"] = "SPELL_CAST_START",
["npcID"] = 128048,
},
[314400] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[396317] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[148001] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[386072] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[412693] = {
["source"] = "Magtembo",
["event"] = "SPELL_CAST_START",
["npcID"] = 200111,
},
[384032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[375834] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[148002] = {
["source"] = "Blazebound Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 72897,
},
[330784] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlefield Ritualist",
["npcID"] = 174197,
},
[390169] = {
["source"] = "Magmaclaw Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 187218,
},
[142883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[169571] = {
["source"] = "Dionor Seedpriest",
["event"] = "SPELL_CAST_START",
["npcID"] = 81721,
},
[396313] = {
["source"] = "Nokhud Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 185147,
},
[291878] = {
["encounterName"] = "King Mechagon",
["source"] = "Aerial Unit R-21/X",
["encounterID"] = 2260,
["event"] = "SPELL_CAST_START",
["npcID"] = 150396,
},
[343072] = {
["source"] = "Heraclor",
["event"] = "SPELL_CAST_START",
["npcID"] = 172025,
},
[148003] = {
["source"] = "Eternal Kilnmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 72896,
},
[131627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha Haunt",
["npcID"] = 66423,
},
[402775] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Shrineguard",
["npcID"] = 202803,
},
[142884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maragor",
["npcID"] = 71492,
},
[396327] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[161314] = {
["source"] = "Mandrakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 84406,
},
[394261] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[196126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feltotem Demonkindre",
["npcID"] = 96615,
},
[451605] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[396316] = {
["source"] = "Nokhud Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 185353,
},
[332836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Butcher",
["npcID"] = 169927,
},
[159290] = {
["source"] = "Solar Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 76097,
},
[38033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Spitespeaker",
["npcID"] = 89025,
},
[298025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Wraith",
["npcID"] = 158707,
},
[195103] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Wandering Shellback",
["npcID"] = 91785,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1810,
},
[400413] = {
["source"] = "Bonesifter Marwak",
["event"] = "SPELL_CAST_START",
["npcID"] = 200681,
},
[304169] = {
["source"] = "Aqir Mindhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 153532,
},
[412700] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magtembo",
["npcID"] = 200111,
},
[137427] = {
["source"] = "Sylvari Tenderhoof",
["event"] = "SPELL_CAST_START",
["npcID"] = 170031,
},
[408605] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[271406] = {
["source"] = "Maw of Shul-Nagruth",
["event"] = "SPELL_CAST_START",
["npcID"] = 128610,
},
[82742] = {
["source"] = "Southsea Strongarm",
["event"] = "SPELL_CAST_START",
["npcID"] = 40635,
},
[159382] = {
["encounterName"] = "Rukhran",
["source"] = "Rukhran",
["encounterID"] = 1700,
["event"] = "SPELL_CAST_START",
["npcID"] = 76143,
},
[398370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Calcifying Crawler",
["npcID"] = 203342,
},
[392660] = {
["source"] = "Ancient Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 187111,
},
[16587] = {
["source"] = "Vile Tutor",
["event"] = "SPELL_CAST_START",
["npcID"] = 8548,
},
[150054] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[125716] = {
["source"] = "Set'thik Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 64358,
},
[410655] = {
["source"] = "Scalecommander Sarkareth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199984,
},
[392239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mosshair Mammoth",
["npcID"] = 193395,
},
[310329] = {
["encounterName"] = "Drest'agath",
["source"] = "Drest'agath",
["npcID"] = 157602,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2343,
},
[260635] = {
["source"] = "Queen Tzxi'kik",
["event"] = "SPELL_CAST_START",
["npcID"] = 128974,
},
[420933] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[420895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[43665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[195108] = {
["source"] = "Hatecoil Stormweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 111638,
},
[31975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[40598] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[384292] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Thunder Caller",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 194647,
},
[40086] = {
["source"] = "Dragon Turtle",
["event"] = "SPELL_CAST_START",
["npcID"] = 22885,
},
[369703] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[259298] = {
["source"] = "Vilescale Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 123461,
},
[369754] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[125204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten King",
["npcID"] = 67081,
},
[361513] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[298033] = {
["event"] = "SPELL_CAST_START",
["source"] = "SI:7 Informant",
["npcID"] = 156795,
},
[406564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ookbeard",
["npcID"] = 200956,
},
[386012] = {
["source"] = "Stormcaller Boroo",
["event"] = "SPELL_CAST_START",
["npcID"] = 194317,
},
[39058] = {
["source"] = "Grannok",
["event"] = "SPELL_CAST_START",
["npcID"] = 93057,
},
[95002] = {
["source"] = "The Ray-Getz-Kalaba Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 47793,
},
[300082] = {
["source"] = "Volatile Tide Surger",
["event"] = "SPELL_CAST_START",
["npcID"] = 150371,
},
[449568] = {
["encounterName"] = "Web General Ab'enar",
["source"] = "Web General Ab'enar",
["npcID"] = 221896,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2877,
},
[40082] = {
["source"] = "Coilskar Harpooner",
["event"] = "SPELL_CAST_START",
["npcID"] = 22874,
},
[429091] = {
["source"] = "High Priest Aemya",
["event"] = "SPELL_CAST_START",
["npcID"] = 212827,
},
[406566] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[408614] = {
["source"] = "Sundered Devastator",
["event"] = "SPELL_CAST_START",
["npcID"] = 198869,
},
[404517] = {
["source"] = "Vakan",
["event"] = "SPELL_CAST_START",
["npcID"] = 199855,
},
[398501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Rock Viper",
["npcID"] = 203783,
},
[20811] = {
["source"] = "Magistrate Burnside",
["event"] = "SPELL_CAST_START",
["npcID"] = 47790,
},
[424997] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[209443] = {
["encounterName"] = "Xavius",
["source"] = "Xavius",
["npcID"] = 103769,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1864,
},
[306228] = {
["encounterName"] = "Dark Inquisitor Xanesh",
["source"] = "Flayed Soul",
["npcID"] = 157005,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2328,
},
[195109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[310324] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[377900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Skullhauler",
["npcID"] = 199298,
},
[396330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Sentry",
["npcID"] = 185357,
},
[406581] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Primal Lava Elemental",
["npcID"] = 202264,
},
[377927] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 192690,
},
[200238] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 99192,
},
[412346] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Corsair",
["npcID"] = 126928,
},
[308278] = {
["encounterName"] = "Alleria Windrunner",
["source"] = "Alleria Windrunner",
["encounterID"] = 2338,
["event"] = "SPELL_CAST_START",
["npcID"] = 152718,
},
[55704] = {
["source"] = "Earthen Warder",
["event"] = "SPELL_CAST_START",
["npcID"] = 29981,
},
[336947] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[273467] = {
["source"] = "Nerubis Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 145660,
},
[435263] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 218346,
},
[11431] = {
["encounterName"] = "Lord Pythas",
["source"] = "Lord Pythas",
["npcID"] = 3670,
["event"] = "SPELL_CAST_START",
["encounterID"] = 588,
},
[119922] = {
["encounterName"] = "Trial of the King",
["source"] = "Kuai the Brute",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61442,
},
[36246] = {
["source"] = "Station Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 51879,
},
[68895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Apparition",
["npcID"] = 36551,
},
[408620] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Obsidian Guard",
["npcID"] = 200836,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[123654] = {
["encounterName"] = "Trial of the King",
["source"] = "Ming the Cunning",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61444,
},
[420907] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[192050] = {
["encounterName"] = "Serpentrix",
["source"] = "Serpentrix",
["npcID"] = 91808,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1813,
},
[400430] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[32330] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lykul Wasp",
["npcID"] = 17732,
},
[136751] = {
["source"] = "Greater Cave Bat",
["event"] = "SPELL_CAST_START",
["npcID"] = 69351,
},
[422961] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200926,
},
[351285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prince Renathal",
["npcID"] = 178006,
},
[394288] = {
["source"] = "Gurblbrblr the Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 197211,
},
[355381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reality Breacher",
["npcID"] = 184185,
},
[382002] = {
["source"] = "Apex Blazewing",
["event"] = "SPELL_CAST_START",
["npcID"] = 193291,
},
[310331] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Mind's Eye",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158122,
},
[279615] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[398385] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blaze Hound Matron",
["npcID"] = 204379,
},
[114965] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pearly Tortoise",
["npcID"] = 59084,
},
[172588] = {
["source"] = "Melded Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 86372,
},
[32329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[422964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[121114] = {
["source"] = "Sik'thik Amber-Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 61929,
},
[259618] = {
["source"] = "Vicious Diemetradon",
["event"] = "SPELL_CAST_START",
["npcID"] = 130756,
},
[316477] = {
["source"] = "Ysedra the Darkener",
["event"] = "SPELL_CAST_START",
["npcID"] = 157483,
},
[318525] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shath'Yar Scribe",
["npcID"] = 163690,
},
[336964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember Worm",
["npcID"] = 168515,
},
[144932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Invader",
["npcID"] = 74329,
},
[199210] = {
["source"] = "Valarjar Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 96640,
},
[167470] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[396346] = {
["source"] = "Sirena the Fangbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 185907,
},
[260480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Tendril",
["npcID"] = 125136,
},
[420925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[102173] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[377912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[289859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gnomish Commando",
["npcID"] = 148442,
},
[64145] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Crusher Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33966,
},
[359483] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[336958] = {
["source"] = "Unbreakable Urtz",
["event"] = "SPELL_CAST_START",
["npcID"] = 162853,
},
[314433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Living Blood",
["npcID"] = 159312,
},
[365627] = {
["source"] = "Ancient Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184954,
},
[400439] = {
["source"] = "Wyrmslayer Angvardi",
["event"] = "SPELL_CAST_START",
["npcID"] = 201013,
},
[392273] = {
["source"] = "Ergburk",
["event"] = "SPELL_CAST_START",
["npcID"] = 194409,
},
[429108] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Cycle Warden",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 209800,
},
[398392] = {
["source"] = "Sulfira Wanderling",
["event"] = "SPELL_CAST_START",
["npcID"] = 205808,
},
[384065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[193069] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felsworn Infester",
["npcID"] = 96587,
},
[429109] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[422966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nolaki",
["npcID"] = 208706,
},
[422972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valunei",
["npcID"] = 208709,
},
[386107] = {
["source"] = "Screechflight Hexclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 183995,
},
[429110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgebound Mender",
["npcID"] = 213338,
},
[398394] = {
["source"] = "Deep Krolusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 203898,
},
[396351] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[400443] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crumbling Scoria",
["npcID"] = 201339,
},
[256551] = {
["encounterName"] = "Ring of Booty",
["source"] = "Sawtooth Shark",
["npcID"] = 129359,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2095,
},
[255577] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[375870] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[328772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[396348] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gutchewer Bear",
["npcID"] = 197134,
},
[422969] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[318534] = {
["event"] = "SPELL_CAST_START",
["source"] = "Umbral Gatekeeper",
["npcID"] = 163708,
},
[125212] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'nas Nightsavage",
["npcID"] = 50338,
},
[396349] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[398397] = {
["source"] = "Magmaclaw Supplicant",
["event"] = "SPELL_CAST_START",
["npcID"] = 203933,
},
[163379] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Bombsquad",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80875,
},
[76590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Watcher",
["npcID"] = 40936,
},
[396350] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[68899] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2007,
},
[328773] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Weaver",
["npcID"] = 200375,
},
[375871] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[461879] = {
["source"] = "Waxy Globule",
["event"] = "SPELL_CAST_START",
["npcID"] = 213873,
},
[398399] = {
["source"] = "Chittering Acidclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 201093,
},
[196144] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
},
[271439] = {
["source"] = "Bombarding Zeppelin",
["event"] = "SPELL_CAST_START",
["npcID"] = 136957,
},
[429116] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[359587] = {
["source"] = "Basal Raptora",
["event"] = "SPELL_CAST_START",
["npcID"] = 179004,
},
[392257] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thousandmile",
["npcID"] = 193676,
},
[377923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Spark",
["npcID"] = 186624,
},
[386096] = {
["source"] = "Screechflight Cursewife",
["event"] = "SPELL_CAST_START",
["npcID"] = 184816,
},
[390210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mudgatu",
["npcID"] = 197346,
},
[169519] = {
["source"] = "Thornling Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81730,
},
[390194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[275110] = {
["source"] = "Bloodbeak the Ravenous",
["event"] = "SPELL_CAST_START",
["npcID"] = 201535,
},
[191026] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[457787] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wickbreaker",
["npcID"] = 215077,
},
[404442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vraken the Hunter",
["npcID"] = 200584,
},
[396355] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[122142] = {
["isChanneled"] = true,
["source"] = "Borokhula the Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58739,
},
[118552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Secret-Keeper",
["npcID"] = 61131,
},
[271443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cornered Operative",
["npcID"] = 142072,
},
[461884] = {
["source"] = "Spring Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 215810,
},
[279614] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Grenadier",
["npcID"] = 131814,
},
[296060] = {
["source"] = "Snapling",
["event"] = "SPELL_CAST_START",
["npcID"] = 145339,
},
[328781] = {
["source"] = "Vault Lurker",
["event"] = "SPELL_CAST_START",
["npcID"] = 199126,
},
[16102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Summoner",
["npcID"] = 17395,
},
[260651] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[351307] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Accursed",
["npcID"] = 176572,
},
[59716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 76242,
},
[63891] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[316496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Heartpiercer",
["npcID"] = 162305,
},
[425027] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Infused Golem",
["npcID"] = 210109,
},
[160312] = {
["source"] = "Sargerei Cleric",
["event"] = "SPELL_CAST_START",
["npcID"] = 77134,
},
[373803] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["npcID"] = 189893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2609,
},
[7124] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lost Son of Arugal",
["npcID"] = 47015,
},
[269399] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[377930] = {
["source"] = "Smoldering Feather",
["event"] = "SPELL_CAST_START",
["npcID"] = 192692,
},
[396360] = {
["source"] = "Ritual Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 186787,
},
[99618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Cauterizer",
["npcID"] = 53639,
},
[211501] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enchanted Broodling",
["npcID"] = 105876,
},
[374624] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Frozen Destroyer",
["npcID"] = 190686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[365632] = {
["source"] = "Dominated Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184742,
},
[308308] = {
["source"] = "Fallen Heartpiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 158092,
},
[425030] = {
["source"] = "Zaqali Juggernaut",
["event"] = "SPELL_CAST_START",
["npcID"] = 210172,
},
[14887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Darkweaver",
["npcID"] = 9261,
},
[61326] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[365646] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[302166] = {
["source"] = "HK-8 Aerial Oppression Unit",
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[304214] = {
["source"] = "Yox'ith",
["event"] = "SPELL_CAST_START",
["npcID"] = 155706,
},
[414993] = {
["source"] = "Elder Cassaphine",
["event"] = "SPELL_CAST_START",
["npcID"] = 206818,
},
[260654] = {
["source"] = "Karkinus the Capsizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 200907,
},
[255567] = {
["source"] = "T'lonja",
["event"] = "SPELL_CAST_START",
["npcID"] = 128455,
},
[400407] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[420937] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["npcID"] = 208365,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2728,
},
[196127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Siltwalker",
["npcID"] = 91790,
},
[425033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ignit the Firebranded",
["npcID"] = 209620,
},
[445457] = {
["encounterName"] = "Skardyn Monstrosity",
["source"] = "Voidstone Monstrosity",
["encounterID"] = 2836,
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[298073] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kosarus the Fallen",
["npcID"] = 185016,
},
[365649] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[384079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amethyzar the Glittering",
["npcID"] = 193132,
},
[148029] = {
["source"] = "Pterrordax",
["event"] = "SPELL_CAST_START",
["npcID"] = 73223,
},
[31948] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["npcID"] = 17991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1941,
},
[390223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flashfrost Tarasek",
["npcID"] = 187089,
},
[425035] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 210288,
},
[320600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Huwerath",
["npcID"] = 162965,
},
[396367] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[136741] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[130848] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[361556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarachnid",
["npcID"] = 181685,
},
[172574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 86373,
},
[267360] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Vol'zith the Whisperer",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 134069,
},
[200248] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Arcanist",
["npcID"] = 98280,
},
[459849] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[375439] = {
["encounterName"] = "Magmatusk",
["source"] = "Magmatusk",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 181861,
},
[195129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[204344] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktalon Assassin",
["npcID"] = 191955,
},
[273570] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ringtail Bandicoon",
["npcID"] = 139166,
},
[119586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[363525] = {
["source"] = "Mawsworn Purger",
["event"] = "SPELL_CAST_START",
["npcID"] = 183652,
},
[414844] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[369750] = {
["event"] = "SPELL_CAST_START",
["source"] = "Qalashi Scaleripper",
["npcID"] = 187602,
},
[136769] = {
["encounterName"] = "Horridon",
["source"] = "Horridon",
["npcID"] = 68476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1575,
},
[154175] = {
["encounterName"] = "Bonemaw",
["source"] = "Bonemaw",
["npcID"] = 75452,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1679,
},
[163390] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Neesa Nox",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80808,
},
[369751] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Soldier",
["npcID"] = 186604,
},
[388911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spellbound Battleaxe",
["npcID"] = 196577,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[359459] = {
["source"] = "Empowered Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 183947,
},
[201959] = {
["source"] = "Emberhusk Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 113536,
},
[76584] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Twilight Zealot",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[314405] = {
["source"] = "Ramkahen Citizen",
["event"] = "SPELL_CAST_START",
["npcID"] = 157795,
},
[309666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Onyx Warserpent",
["npcID"] = 153208,
},
[172606] = {
["source"] = "Goc",
["event"] = "SPELL_CAST_START",
["npcID"] = 85580,
},
[420947] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[42382] = {
["source"] = "Crashin' Thrashin' Robot",
["event"] = "SPELL_CAST_START",
["npcID"] = 17299,
},
[392279] = {
["source"] = "Wild Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 194089,
},
[328799] = {
["source"] = "Veteran Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 160959,
},
[207816] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necrodark Defiler",
["npcID"] = 104888,
},
[203323] = {
["source"] = "Gornoth the Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 103656,
},
[392280] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[173573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fluttering Teromoth",
["npcID"] = 79595,
},
[424958] = {
["encounterName"] = "Stormguard Gorren",
["source"] = "Stormguard Gorren",
["event"] = "SPELL_CAST_START",
["npcID"] = 207205,
},
[166464] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[425045] = {
["source"] = "Splinterlimb",
["event"] = "SPELL_CAST_START",
["npcID"] = 209365,
},
[375068] = {
["encounterName"] = "Magmatusk",
["source"] = "Lava Tentacles",
["encounterID"] = 2610,
["event"] = "SPELL_CAST_START",
["npcID"] = 190023,
},
[388623] = {
["encounterName"] = "Overgrown Ancient",
["source"] = "Overgrown Ancient",
["npcID"] = 196482,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2563,
},
[275560] = {
["source"] = "Blight Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 146564,
},
[196157] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Technician",
["npcID"] = 99645,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[154135] = {
["encounterName"] = "Araknath",
["source"] = "Araknath",
["encounterID"] = 1699,
["event"] = "SPELL_CAST_START",
["npcID"] = 76141,
},
[363533] = {
["encounterName"] = "Rygelon",
["source"] = "Rygelon",
["encounterID"] = 2549,
["event"] = "SPELL_CAST_START",
["npcID"] = 182777,
},
[166465] = {
["encounterName"] = "Archmage Sol",
["source"] = "Archmage Sol",
["encounterID"] = 1751,
["event"] = "SPELL_CAST_START",
["npcID"] = 82682,
},
[392283] = {
["source"] = "Wild Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 191413,
},
[375812] = {
["isChanneled"] = true,
["source"] = "Infused Whelp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187083,
},
[412761] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[404480] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ebon Lieutenant",
["npcID"] = 201647,
},
[392284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ravenous Proto-Drake",
["npcID"] = 193145,
},
[361568] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Renewal",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181546,
},
[410776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Protector",
["npcID"] = 204658,
},
[463956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[429051] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[336996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nekthara the Mangler",
["npcID"] = 162744,
},
[360845] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[145989] = {
["source"] = "Amalgamated Hubris",
["event"] = "SPELL_CAST_START",
["npcID"] = 72658,
},
[384095] = {
["source"] = "Ohuna Companion",
["event"] = "SPELL_CAST_START",
["npcID"] = 194254,
},
[170517] = {
["source"] = "Iron Explosive",
["event"] = "SPELL_CAST_START",
["npcID"] = 78479,
},
[111398] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Evangelist",
["npcID"] = 58685,
},
[404639] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[295929] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oddly Large Mawrat",
["npcID"] = 154030,
},
[48280] = {
["source"] = "Blingtron 5000",
["event"] = "SPELL_CAST_START",
["npcID"] = 77789,
},
[194112] = {
["encounterName"] = "God-King Skovald",
["source"] = "God-King Skovald",
["encounterID"] = 1808,
["event"] = "SPELL_CAST_START",
["npcID"] = 95675,
},
[122149] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Zar'thik Battle-Mender",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62408,
},
[429037] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["npcID"] = 40825,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1046,
},
[12471] = {
["source"] = "Atal'ai High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 5273,
},
[377270] = {
["source"] = "Cliffdrip Wavemender",
["event"] = "SPELL_CAST_START",
["npcID"] = 189814,
},
[412661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invoq",
["npcID"] = 203627,
},
[200256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Minion",
["npcID"] = 101549,
},
[386146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[177731] = {
["encounterName"] = "Witherbark",
["source"] = "Enchanted Waters",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 88862,
},
[275568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Glimmerhoof Cloudstrider",
["npcID"] = 160606,
},
[425054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zaqali Portalkeeper",
["npcID"] = 211756,
},
[373733] = {
["encounterName"] = "Chargath, Bane of Scales",
["source"] = "Chargath, Bane of Scales",
["encounterID"] = 2613,
["event"] = "SPELL_CAST_START",
["npcID"] = 189340,
},
[267977] = {
["source"] = "Shrine Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 134139,
},
[275569] = {
["source"] = "Glimmerhoof Cloudstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 160606,
},
[175684] = {
["source"] = "Sunclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 86137,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 1985,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[408551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Walker",
["npcID"] = 201063,
},
[260666] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilded Priestess",
["npcID"] = 132126,
},
[389430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unleashed Storm",
["npcID"] = 195846,
},
[150755] = {
["encounterName"] = "Gug'rokk",
["source"] = "Gug'rokk",
["encounterID"] = 1654,
["event"] = "SPELL_CAST_START",
["npcID"] = 74790,
},
[396388] = {
["source"] = "Glacias",
["event"] = "SPELL_CAST_START",
["npcID"] = 199028,
},
[99625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewaker Cauterizer",
["npcID"] = 53121,
},
[173307] = {
["source"] = "Thunderlord Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 83390,
},
[209404] = {
["source"] = "Duskwatch Arcanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 104247,
},
[144969] = {
["encounterName"] = "Garrosh Hellscream",
["source"] = "Garrosh Hellscream",
["encounterID"] = 1623,
["event"] = "SPELL_CAST_START",
["npcID"] = 71865,
},
[275572] = {
["source"] = "Binder Sa'thress",
["event"] = "SPELL_CAST_START",
["npcID"] = 134341,
},
[391913] = {
["source"] = "Gnawbone Splintershield",
["event"] = "SPELL_CAST_START",
["npcID"] = 197847,
},
[277308] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hex Priest Haraka",
["npcID"] = 141959,
},
[214593] = {
["source"] = "Amberfall Greatstag",
["event"] = "SPELL_CAST_START",
["npcID"] = 107758,
},
[461785] = {
["source"] = "Sargassum Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 212582,
},
[408677] = {
["source"] = "Sundered Scaleguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198871,
},
[193092] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[153161] = {
["source"] = "Jungle Wastetalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 86423,
},
[275574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Tidesage",
["npcID"] = 137220,
},
[393458] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malifron",
["npcID"] = 190278,
},
[377962] = {
["source"] = "Violent Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 197178,
},
[41370] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[365676] = {
["source"] = "Sacred Matrix Automa",
["event"] = "SPELL_CAST_START",
["npcID"] = 184734,
},
[400488] = {
["isChanneled"] = true,
["source"] = "Zaqali Shrineguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 202803,
},
[193093] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[265337] = {
["source"] = "Gorestained Piglet",
["event"] = "SPELL_CAST_START",
["npcID"] = 135048,
},
[267385] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Tentacle",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 135987,
},
[425062] = {
["source"] = "Zaqali Steelshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 210173,
},
[410728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sabellian",
["npcID"] = 201411,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 1984,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[316532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Willing Sacrifice",
["npcID"] = 162647,
},
[200261] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soul-Torn Champion",
["npcID"] = 98243,
},
[294491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Timeling",
["npcID"] = 186479,
},
[445541] = {
["encounterName"] = "Master Machinists",
["source"] = "Speaker Brokk",
["npcID"] = 213217,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2888,
},
[145996] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Commander Tik",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73951,
},
[222716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taintheart Befouler",
["npcID"] = 111354,
},
[164426] = {
["encounterName"] = "Fleshrender Nok'gar",
["source"] = "Fleshrender Nok'gar",
["encounterID"] = 1749,
["event"] = "SPELL_CAST_START",
["npcID"] = 81305,
},
[299437] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[395859] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Sha",
["npcID"] = 59555,
},
[375919] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Scythid",
["npcID"] = 191104,
},
[209477] = {
["source"] = "Mana Wyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 105703,
},
[125736] = {
["source"] = "Apparition of Fear",
["event"] = "SPELL_CAST_START",
["npcID"] = 64368,
},
[373872] = {
["source"] = "Monstrous Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 186227,
},
[310392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Synod",
["npcID"] = 159190,
},
[447439] = {
["encounterName"] = "Captain Dailcry",
["source"] = "Captain Dailcry",
["encounterID"] = 2847,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 207946,
},
[412889] = {
["source"] = "Zakajz",
["event"] = "SPELL_CAST_START",
["npcID"] = 198953,
},
[64152] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[192072] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[40091] = {
["source"] = "Coilskar Sea-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22875,
},
[396991] = {
["source"] = "Drakonid Breaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 187240,
},
[390256] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nokhud Apprentice",
["npcID"] = 192340,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[304251] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Void Boar",
["npcID"] = 157349,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2332,
},
[57753] = {
["source"] = "Onyx Blaze Mistress",
["event"] = "SPELL_CAST_START",
["npcID"] = 30681,
},
[406639] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[192073] = {
["encounterName"] = "Warlord Parjesh",
["source"] = "Warlord Parjesh",
["npcID"] = 91784,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1810,
},
[377971] = {
["source"] = "Massive Thresher",
["event"] = "SPELL_CAST_START",
["npcID"] = 191951,
},
[308190] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harrier Nir'verash",
["npcID"] = 160868,
},
[164357] = {
["encounterName"] = "Witherbark",
["source"] = "Witherbark",
["encounterID"] = 1746,
["event"] = "SPELL_CAST_START",
["npcID"] = 81522,
},
[375924] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Baelog",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184581,
},
[304253] = {
["source"] = "Blackwater Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 155272,
},
[388211] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[365686] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 184533,
},
[390111] = {
["encounterName"] = "Khajin the Unyielding",
["source"] = "Khajin the Unyielding",
["npcID"] = 189727,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2617,
},
[394355] = {
["source"] = "Frigidpelt Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 193063,
},
[330875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nefarious Darkspeaker",
["npcID"] = 169893,
},
[139771] = {
["source"] = "Shan'ze Celestial Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 70240,
},
[198934] = {
["source"] = "Valarjar Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 95834,
},
[199034] = {
["source"] = "Valarjar Aspirant",
["event"] = "SPELL_CAST_START",
["npcID"] = 101637,
},
[314326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crushing Tendril",
["npcID"] = 161312,
},
[166478] = {
["source"] = "Tormented Soul",
["event"] = "SPELL_CAST_START",
["npcID"] = 82647,
},
[185425] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[260349] = {
["source"] = "Ten'gor",
["event"] = "SPELL_CAST_START",
["npcID"] = 130713,
},
[355450] = {
["source"] = "Fierce Gromit",
["event"] = "SPELL_CAST_START",
["npcID"] = 178528,
},
[406644] = {
["source"] = "Response Team Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202318,
},
[258202] = {
["source"] = "Awakened Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 128302,
},
[52611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Necromancer",
["npcID"] = 27732,
},
[326602] = {
["source"] = "Engorged Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 170767,
},
[64153] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[375929] = {
["encounterName"] = "Balakar Khan",
["source"] = "Balakar Khan",
["encounterID"] = 2580,
["event"] = "SPELL_CAST_START",
["npcID"] = 186151,
},
[176718] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Tracker",
["npcID"] = 154461,
},
[414652] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["encounterID"] = 2669,
["event"] = "SPELL_CAST_START",
["npcID"] = 198933,
},
[390834] = {
["source"] = "Sarana",
["event"] = "SPELL_CAST_START",
["npcID"] = 190161,
},
[369061] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[106797] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[41372] = {
["source"] = "Illidari Archon",
["event"] = "SPELL_CAST_START",
["npcID"] = 23400,
},
[308355] = {
["source"] = "Dokani Bloodshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153106,
},
[385980] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[369788] = {
["source"] = "Qalashi Drakehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 197788,
},
[273544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brother Meller",
["npcID"] = 154447,
},
[227913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felspite Dominator",
["npcID"] = 102788,
},
[365272] = {
["encounterName"] = "Prototype Pantheon",
["source"] = "Prototype of Duty",
["encounterID"] = 2544,
["event"] = "SPELL_CAST_START",
["npcID"] = 181551,
},
[304261] = {
["source"] = "Blackwater Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 155272,
},
[150448] = {
["source"] = "Pale Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 76465,
},
[363772] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[422813] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Ordan",
["npcID"] = 208727,
},
[170480] = {
["source"] = "Shadowmoon Voidaxe",
["event"] = "SPELL_CAST_START",
["npcID"] = 79589,
},
[277451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tech Scavenger",
["npcID"] = 155195,
},
[196078] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[114864] = {
["source"] = "Bored Student",
["event"] = "SPELL_CAST_START",
["npcID"] = 59614,
},
[369791] = {
["encounterName"] = "The Lost Dwarves",
["source"] = "Eric \"The Swift\"",
["encounterID"] = 2555,
["event"] = "SPELL_CAST_START",
["npcID"] = 184582,
},
[429176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Aquamage",
["npcID"] = 40943,
},
[150100] = {
["source"] = "Razorfen Huntmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 74552,
},
[157170] = {
["source"] = "Sargerei Soulbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 77812,
},
[209485] = {
["source"] = "Arcane Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 105704,
},
[445559] = {
["source"] = "Queensguard Zirix",
["event"] = "SPELL_CAST_START",
["npcID"] = 211858,
},
[38557] = {
["source"] = "Thaelin Darkanvil",
["event"] = "SPELL_CAST_START",
["npcID"] = 80886,
},
[196175] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mak'rana Hardshell",
["npcID"] = 95947,
},
[97022] = {
["encounterName"] = "Jin'do the Godbreaker",
["source"] = "Shredtooth Frenzy",
["encounterID"] = 1182,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 52430,
},
[79616] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Felhunter Minion",
["npcID"] = 175166,
},
[308361] = {
["source"] = "Dokani Bloodshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 153106,
},
[257608] = {
["encounterName"] = "The Sand Queen",
["source"] = "The Sand Queen",
["npcID"] = 127479,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2101,
},
[143958] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Gloom",
["event"] = "SPELL_CAST_START",
["npcID"] = 71477,
},
[396415] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190061,
},
[398463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Burster",
["npcID"] = 200801,
},
[79860] = {
["source"] = "Forsaken Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 46048,
},
[213582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sinister Shrieker",
["npcID"] = 101900,
},
[429180] = {
["source"] = "Cycle Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 210518,
},
[398464] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystal Wormling",
["npcID"] = 205613,
},
[396208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotbow Stalker",
["npcID"] = 197126,
},
[375727] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[366187] = {
["source"] = "Hired Muscle",
["event"] = "SPELL_CAST_START",
["npcID"] = 183499,
},
[428963] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Burning Colossus",
["npcID"] = 207796,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[418024] = {
["source"] = "Hand of the Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 207386,
},
[398254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterpelt Defender",
["npcID"] = 200362,
},
[417497] = {
["source"] = "Rude Crude",
["event"] = "SPELL_CAST_START",
["npcID"] = 206617,
},
[191058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirana Starlight",
["npcID"] = 99451,
},
[159318] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Axethrower",
["npcID"] = 74799,
},
[258634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Flamecaster",
["npcID"] = 127488,
},
[240095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Commander Urgoz",
["npcID"] = 118006,
},
[308366] = {
["source"] = "Inquisitor Darkspeak",
["event"] = "SPELL_CAST_START",
["npcID"] = 158136,
},
[373678] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[404394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reisa the Drowned",
["npcID"] = 200600,
},
[289937] = {
["source"] = "Rastari Punisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 148667,
},
[359334] = {
["source"] = "Ancient Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 184954,
},
[384134] = {
["source"] = "Nokhud Warspear",
["event"] = "SPELL_CAST_START",
["npcID"] = 192791,
},
[377991] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Sentry",
["npcID"] = 192680,
},
[40066] = {
["source"] = "Coilskar Wrangler",
["event"] = "SPELL_CAST_START",
["npcID"] = 22877,
},
[38558] = {
["source"] = "Hillsbrad Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 2269,
},
[102193] = {
["encounterName"] = "Echo of Tyrande",
["source"] = "Echo of Tyrande",
["encounterID"] = 1884,
["event"] = "SPELL_CAST_START",
["npcID"] = 54544,
},
[164592] = {
["source"] = "Bloodmaul Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75198,
},
[336809] = {
["source"] = "Azmogal",
["event"] = "SPELL_CAST_START",
["npcID"] = 162873,
},
[215633] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thistleleaf Menace",
["npcID"] = 108259,
},
[375945] = {
["source"] = "Fleecepelt Argali",
["event"] = "SPELL_CAST_START",
["npcID"] = 187975,
},
[112944] = {
["encounterName"] = "Hoptallus",
["source"] = "Hoptallus",
["encounterID"] = 1413,
["event"] = "SPELL_CAST_START",
["npcID"] = 56717,
},
[396423] = {
["source"] = "Galestrike Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190061,
},
[260684] = {
["source"] = "Zuvembi Brewer Zekal",
["event"] = "SPELL_CAST_START",
["npcID"] = 130260,
},
[253517] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[139867] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["npcID"] = 69427,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1576,
},
[412806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Dragon",
["npcID"] = 205804,
},
[256589] = {
["encounterName"] = "Council o' Captains",
["source"] = "Captain Raoul",
["npcID"] = 126847,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2094,
},
[151014] = {
["source"] = "Razorfen Hidecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 74555,
},
[160345] = {
["source"] = "Pale Spider Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 80530,
},
[31407] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murkblood Spearman",
["npcID"] = 17729,
},
[203348] = {
["source"] = "Gornoth the Lost",
["event"] = "SPELL_CAST_START",
["npcID"] = 103656,
},
[457858] = {
["source"] = "Deepfiend Azellix",
["event"] = "SPELL_CAST_START",
["npcID"] = 218458,
},
[410760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[385955] = {
["event"] = "SPELL_CAST_START",
["source"] = "Professor Intinosa",
["npcID"] = 195354,
},
[275370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Beastbot",
["npcID"] = 151933,
},
[159322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwolf Shaman",
["npcID"] = 74622,
},
[369806] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[265371] = {
["source"] = "Enthralled Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131585,
},
[130803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Ravager",
["npcID"] = 57119,
},
[375950] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[139869] = {
["encounterName"] = "Dark Animus",
["source"] = "Dark Animus",
["encounterID"] = 1576,
["event"] = "SPELL_CAST_START",
["npcID"] = 69427,
},
[314518] = {
["event"] = "SPELL_CAST_START",
["source"] = "R'khuzj the Unfathomable",
["npcID"] = 156299,
},
[278961] = {
["source"] = "Diseased Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 133870,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[394381] = {
["source"] = "Root of Decay",
["event"] = "SPELL_CAST_START",
["npcID"] = 185326,
},
[2601] = {
["source"] = "Shadowforge Senator",
["event"] = "SPELL_CAST_START",
["npcID"] = 8904,
},
[15785] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Mana Leech",
["npcID"] = 19306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[40832] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[127280] = {
["source"] = "Viletongue Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 58738,
},
[396430] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioning Protector",
["npcID"] = 198343,
},
[423051] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[162244] = {
["source"] = "Sharpfang Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 76685,
},
[304282] = {
["encounterName"] = "Rexxar",
["source"] = "Rexxar",
["npcID"] = 155098,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2370,
},
[79886] = {
["source"] = "Instructor Rufus",
["event"] = "SPELL_CAST_START",
["npcID"] = 48922,
},
[398479] = {
["source"] = "Hibernating Worm",
["event"] = "SPELL_CAST_START",
["npcID"] = 204742,
},
[392336] = {
["source"] = "Uncontrolled Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 181775,
},
[172635] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shattered Hand Reaper",
["npcID"] = 84086,
},
[115506] = {
["encounterName"] = "Brother Korloff",
["source"] = "Scarlet Flamethrower",
["npcID"] = 59705,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1424,
},
[8362] = {
["encounterName"] = "Nekrum Gutchewer",
["source"] = "Shadowpriest Sezz'ziz",
["encounterID"] = 598,
["event"] = "SPELL_CAST_START",
["npcID"] = 7275,
},
[167516] = {
["source"] = "Grom'kar Incinerator",
["event"] = "SPELL_CAST_START",
["npcID"] = 86809,
},
[209495] = {
["source"] = "Guardian Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 104270,
},
[265377] = {
["source"] = "Fanatical Headhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 133663,
},
[365717] = {
["source"] = "Manifestor Krugan",
["event"] = "SPELL_CAST_START",
["npcID"] = 185363,
},
[115010] = {
["encounterName"] = "Taran Zhu",
["source"] = "Gripping Hatred",
["encounterID"] = 1306,
["event"] = "SPELL_CAST_START",
["npcID"] = 59804,
},
[369813] = {
["source"] = "Raging Inferno",
["event"] = "SPELL_CAST_START",
["npcID"] = 194095,
},
[412816] = {
["isChanneled"] = true,
["source"] = "Malygos",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198974,
},
[195253] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[34259] = {
["source"] = "Atal'ai Deathwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 5271,
},
[359313] = {
["source"] = "Vine-Choked Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 182350,
},
[404626] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[382101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rebel Conjurer",
["npcID"] = 195063,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["npcID"] = 43873,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1041,
},
[153679] = {
["encounterName"] = "Slave Watcher Crushto",
["source"] = "Slave Watcher Crushto",
["encounterID"] = 1653,
["event"] = "SPELL_CAST_START",
["npcID"] = 74787,
},
[334538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arch-Suppressor Laguas",
["npcID"] = 185019,
},
[382102] = {
["source"] = "Grand Artificer Zeerak",
["event"] = "SPELL_CAST_START",
["npcID"] = 201553,
},
[392341] = {
["source"] = "Tevgai",
["event"] = "SPELL_CAST_START",
["npcID"] = 195132,
},
[111854] = {
["source"] = "Instructor Chillheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 58633,
},
[167092] = {
["source"] = "Cackling Pyromaniac",
["event"] = "SPELL_CAST_START",
["npcID"] = 79510,
},
[373912] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[260550] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uul'gyneth",
["npcID"] = 126001,
},
[204243] = {
["isChanneled"] = true,
["source"] = "Nightmare Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 101991,
},
[12058] = {
["source"] = "Iron Dwarf Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 29979,
},
[64157] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Corruptor Tentacle",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33985,
},
[425107] = {
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 211241,
},
[369818] = {
["source"] = "Hulking Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 184020,
},
[169567] = {
["source"] = "Primal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 81769,
},
[406678] = {
["encounterName"] = "The Vigilant Steward, Zskarn",
["source"] = "Zskarn",
["npcID"] = 202375,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2689,
},
[367771] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Lost Soul",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 185607,
},
[367496] = {
["source"] = "Foul Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 183497,
},
[421013] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[373915] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[142947] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Modified Anima Golem",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 71395,
},
[50335] = {
["source"] = "Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 46058,
},
[412823] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 198968,
},
[423062] = {
["encounterName"] = "Baron Braunpyke",
["source"] = "Baron Braunpyke",
["npcID"] = 207939,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2835,
},
[198959] = {
["source"] = "Valarjar Runecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 96664,
},
[378012] = {
["source"] = "Magmasworn Flameweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 193414,
},
[165473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apexis Destroyer",
["npcID"] = 82229,
},
[373917] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["npcID"] = 186121,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2569,
},
[167379] = {
["source"] = "Boneseer Cold-Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 88361,
},
[427159] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[157053] = {
["source"] = "Durag the Dominator",
["event"] = "SPELL_CAST_START",
["npcID"] = 77890,
},
[252503] = {
["source"] = "Assault Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 127189,
},
[387960] = {
["source"] = "Caldera Stomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 187919,
},
[369823] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[115509] = {
["source"] = "Shado-Pan Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 59751,
},
[307639] = {
["encounterName"] = "Vexiona",
["source"] = "Vexiona",
["npcID"] = 157354,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2336,
},
[443247] = {
["source"] = "Corrupted Memory of Turalyon",
["event"] = "SPELL_CAST_START",
["npcID"] = 214616,
},
[451734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amber Honeyslime",
["npcID"] = 222846,
},
[404636] = {
["source"] = "Lieutenant Narlena",
["event"] = "SPELL_CAST_START",
["npcID"] = 202244,
},
[63134] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[79850] = {
["source"] = "Aquarius the Unbound",
["event"] = "SPELL_CAST_START",
["npcID"] = 47009,
},
[353443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Empowered Mawsworn Cremator",
["npcID"] = 179080,
},
[285572] = {
["encounterName"] = "King Rastakhan",
["source"] = "Phantom of Slaughter",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 146493,
},
[398494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ember Shalewing",
["npcID"] = 204381,
},
[425115] = {
["source"] = "Fruitface",
["event"] = "SPELL_CAST_START",
["npcID"] = 209913,
},
[34163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Underbog Shambler",
["npcID"] = 17871,
},
[421020] = {
["encounterName"] = "Council of Dreams",
["source"] = "Urctos",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208363,
},
[406686] = {
["encounterName"] = "Echo of Neltharion",
["source"] = "Djaradin Magmashaper",
["npcID"] = 202257,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2684,
},
[384161] = {
["source"] = "Qalashi Irontorch",
["event"] = "SPELL_CAST_START",
["npcID"] = 189464,
},
[106807] = {
["encounterName"] = "Ook-Ook",
["source"] = "Ook-Ook",
["encounterID"] = 1412,
["event"] = "SPELL_CAST_START",
["npcID"] = 56637,
},
[115510] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Spiritclaw",
["npcID"] = 55291,
},
[91335] = {
["source"] = "Woodfist",
["event"] = "SPELL_CAST_START",
["npcID"] = 83871,
},
[389532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Morlash",
["npcID"] = 201549,
},
[369828] = {
["source"] = "Vicious Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 184023,
},
[63032] = {
["source"] = "Keeper Heartwise",
["event"] = "SPELL_CAST_START",
["npcID"] = 33443,
},
[260697] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[161533] = {
["source"] = "Mandragora Lifedrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 80699,
},
[381470] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[231532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyrestar Demolisher",
["npcID"] = 114845,
},
[316588] = {
["source"] = "Dreliana",
["event"] = "SPELL_CAST_START",
["npcID"] = 157709,
},
[200289] = {
["encounterName"] = "Shade of Xavius",
["source"] = "Shade of Xavius",
["encounterID"] = 1839,
["event"] = "SPELL_CAST_START",
["npcID"] = 99192,
},
[265084] = {
["source"] = "Devout Blood Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 131492,
},
[421024] = {
["encounterName"] = "Council of Dreams",
["source"] = "Pip",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208367,
},
[260698] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[196194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Steeljaw Grizzly",
["npcID"] = 96677,
},
[378022] = {
["encounterName"] = "Treemouth",
["source"] = "Treemouth",
["npcID"] = 186120,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2568,
},
[255579] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2084,
},
[398500] = {
["source"] = "Conflagrated Rock Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 203328,
},
[134762] = {
["source"] = "Muerta",
["event"] = "SPELL_CAST_START",
["npcID"] = 68322,
},
[427169] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[412835] = {
["source"] = "Nozdormu",
["event"] = "SPELL_CAST_START",
["npcID"] = 198971,
},
[260699] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[326830] = {
["source"] = "Darkwarren Bulwark",
["event"] = "SPELL_CAST_START",
["npcID"] = 164037,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[396454] = {
["source"] = "Insatiable Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 185715,
},
[166341] = {
["source"] = "Grom'kar Far Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82579,
},
[200291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Scout",
["npcID"] = 98691,
},
[413806] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cenrrrn Cirrgl Tideshifter",
["npcID"] = 204516,
},
[34170] = {
["source"] = "Sunseeker Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 18420,
},
[195172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Crusher",
["npcID"] = 91782,
},
[151475] = {
["encounterName"] = "Groyat, the Blind Hunter",
["source"] = "Groyat, the Blind Hunter",
["encounterID"] = 1660,
["event"] = "SPELL_CAST_START",
["npcID"] = 75247,
},
[361644] = {
["encounterName"] = "Dausegne, the Fallen Oracle",
["source"] = "Dausegne",
["encounterID"] = 2540,
["event"] = "SPELL_CAST_START",
["npcID"] = 181224,
},
[3611] = {
["source"] = "Grand Magus Doane",
["event"] = "SPELL_CAST_START",
["npcID"] = 397,
},
[398504] = {
["source"] = "Sulfurous Viper",
["event"] = "SPELL_CAST_START",
["npcID"] = 205814,
},
[285878] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["encounterID"] = 2268,
["event"] = "SPELL_CAST_START",
["npcID"] = 144941,
},
[297837] = {
["source"] = "Deeptide Frenzy",
["event"] = "SPELL_CAST_START",
["npcID"] = 144647,
},
[400877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flowfy",
["npcID"] = 203660,
},
[260701] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Briar",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131825,
},
[84713] = {
["source"] = "Master Apothecary Lydon",
["event"] = "SPELL_CAST_START",
["npcID"] = 48020,
},
[459938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dripear the Waxy",
["npcID"] = 213883,
},
[198245] = {
["encounterName"] = "Smashspite the Hateful",
["source"] = "Smashspite the Hateful",
["encounterID"] = 1834,
["event"] = "SPELL_CAST_START",
["npcID"] = 98949,
},
[106646] = {
["source"] = "Flying Snow",
["event"] = "SPELL_CAST_START",
["npcID"] = 56473,
},
[171773] = {
["source"] = "Lorry Warmheart",
["event"] = "SPELL_CAST_START",
["npcID"] = 159211,
},
[427175] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[119524] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu Archer",
["npcID"] = 61345,
},
[308406] = {
["source"] = "Forge-Guard Hurrul",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[362601] = {
["encounterName"] = "Lihuvim, Principal Architect",
["source"] = "Lihuvim",
["encounterID"] = 2539,
["event"] = "SPELL_CAST_START",
["npcID"] = 182169,
},
[172649] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[371887] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[365744] = {
["source"] = "Subjugator Zeltoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 184651,
},
[324447] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elite Queensguard",
["npcID"] = 158555,
},
[153485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[394948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbinder Tornecha",
["npcID"] = 192344,
},
[365745] = {
["encounterName"] = "Artificer Xy'mox",
["source"] = "Cartel Overseer",
["encounterID"] = 2553,
["event"] = "SPELL_CAST_START",
["npcID"] = 184792,
},
[392366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Awakened Juggernaut",
["npcID"] = 197793,
},
[386223] = {
["source"] = "Primal Stormshield",
["event"] = "SPELL_CAST_START",
["npcID"] = 194896,
},
[322743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lumbering Creation",
["npcID"] = 155824,
},
[171385] = {
["source"] = "Unstable Earth Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80382,
},
[408749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grrrmrrsh Hrrnglscrrrm",
["npcID"] = 204412,
},
[173169] = {
["source"] = "Turbulent Steamfury",
["event"] = "SPELL_CAST_START",
["npcID"] = 81685,
},
[404654] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[154221] = {
["source"] = "Zipteq",
["event"] = "SPELL_CAST_START",
["npcID"] = 78734,
},
[388716] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Broodkeeper Diurna",
["npcID"] = 190245,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[394416] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Flamewrought Eradicator",
["npcID"] = 198311,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[322745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runestag",
["npcID"] = 159030,
},
[373939] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Rotburst Totem",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 190381,
},
[417573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[125241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kor'nas Nightsavage",
["npcID"] = 50338,
},
[397383] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Magma Mystic",
["npcID"] = 199703,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[203368] = {
["source"] = "Felblaze Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 120535,
},
[375988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimblewing Slyvern",
["npcID"] = 191051,
},
[11131] = {
["encounterName"] = "Ghaz'rilla",
["source"] = "Gahz'rilla",
["encounterID"] = 594,
["event"] = "SPELL_CAST_START",
["npcID"] = 7273,
},
[50648] = {
["source"] = "Relios the Relic Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 45734,
},
[79971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drill Sergeant Magnus",
["npcID"] = 48923,
},
[367798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tethos",
["npcID"] = 181249,
},
[36004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disembodied Exarch",
["npcID"] = 21058,
},
[60833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten One",
["npcID"] = 30414,
},
[267459] = {
["encounterName"] = "Vol'zith the Whisperer",
["source"] = "Forgotten Denizen",
["encounterID"] = 2133,
["event"] = "SPELL_CAST_START",
["npcID"] = 136083,
},
[285889] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["npcID"] = 144767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2268,
},
[115003] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[247396] = {
["source"] = "Zulian Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 124549,
},
[373943] = {
["source"] = "Wilted Oak",
["event"] = "SPELL_CAST_START",
["npcID"] = 186229,
},
[302272] = {
["encounterName"] = "HK-8 Aerial Oppression Unit",
["source"] = "HK-8 Aerial Oppression Unit",
["encounterID"] = 2291,
["event"] = "SPELL_CAST_START",
["npcID"] = 150190,
},
[62625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ulduar Colossus",
["npcID"] = 33237,
},
[273604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutus Thornton",
["npcID"] = 139136,
},
[406708] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sindragosa",
["npcID"] = 201094,
},
[387910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Algeth'ar Echoknight",
["npcID"] = 196200,
},
[205231] = {
["encounterName"] = "Terros",
["source"] = "Darkglare",
["npcID"] = 103673,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[314889] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Exposed Synapse",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 159578,
},
[147896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garnia",
["npcID"] = 73282,
},
[351047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Overseer",
["npcID"] = 177808,
},
[157794] = {
["source"] = "Sargerei Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 76263,
},
[422717] = {
["source"] = "Phebis of the Burning Sea",
["event"] = "SPELL_CAST_START",
["npcID"] = 210306,
},
[203371] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hill Ettin",
["npcID"] = 102886,
},
[285893] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Gonk's Aspect",
["npcID"] = 144767,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2268,
},
[406333] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[123707] = {
["encounterName"] = "Grand Empress Shek'zeer",
["source"] = "Grand Empress Shek'zeer",
["encounterID"] = 1501,
["event"] = "SPELL_CAST_START",
["npcID"] = 62837,
},
[373947] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skaara",
["npcID"] = 192949,
},
[449714] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[427189] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[413136] = {
["encounterName"] = "Lord Harlan Sweete",
["source"] = "Harlan Sweete",
["npcID"] = 126983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2096,
},
[308432] = {
["source"] = "Forge-Guard Hurrul",
["event"] = "SPELL_CAST_START",
["npcID"] = 158158,
},
[400569] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haleh",
["npcID"] = 199370,
},
[369853] = {
["source"] = "Burly Rock-Thrower",
["event"] = "SPELL_CAST_START",
["npcID"] = 184019,
},
[388283] = {
["encounterName"] = "Granyth",
["source"] = "Granyth",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 186616,
},
[405016] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Essence of Shadow",
["npcID"] = 201774,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[378420] = {
["source"] = "Provoked Geode",
["event"] = "SPELL_CAST_START",
["npcID"] = 189040,
},
[394427] = {
["isChanneled"] = true,
["source"] = "Earth Breaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 198503,
},
[396475] = {
["event"] = "SPELL_CAST_START",
["source"] = "Apex Proto-Dragon",
["npcID"] = 191705,
},
[203373] = {
["source"] = "Observant Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 107449,
},
[367807] = {
["source"] = "Worldbreaker Escapee",
["event"] = "SPELL_CAST_START",
["npcID"] = 185626,
},
[451765] = {
["event"] = "SPELL_CAST_START",
["source"] = "[DNT]Teleport Bunny Prime",
["npcID"] = 224528,
},
[255591] = {
["encounterName"] = "Priestess Alun'za",
["source"] = "Priestess Alun'za",
["npcID"] = 122967,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2084,
},
[89105] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[392381] = {
["source"] = "Fledgling Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 198815,
},
[394429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarolekk, the Stomper",
["npcID"] = 197650,
},
[382791] = {
["source"] = "Qalashi Lavamancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 193944,
},
[382143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[253544] = {
["source"] = "Dazar'ai Confessor",
["event"] = "SPELL_CAST_START",
["npcID"] = 122973,
},
[396071] = {
["source"] = "Decayed Elder",
["event"] = "SPELL_CAST_START",
["npcID"] = 197142,
},
[55715] = {
["source"] = "Earthen Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 29980,
},
[60236] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[257640] = {
["source"] = "Unfinished Stone Golem",
["event"] = "SPELL_CAST_START",
["npcID"] = 201586,
},
[160372] = {
["source"] = "Shiverblood Frostbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 78869,
},
[316216] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupt Egg Tender",
["npcID"] = 163112,
},
[146038] = {
["isChanneled"] = true,
["source"] = "Kor'kron Gunner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 72784,
},
[196208] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Shadowmoon Warlock",
["npcID"] = 99704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[115006] = {
["source"] = "Hozen Gutripper",
["event"] = "SPELL_CAST_START",
["npcID"] = 58943,
},
[41381] = {
["source"] = "Priestess of Delight",
["event"] = "SPELL_CAST_START",
["npcID"] = 22964,
},
[316618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[384194] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Cinderweaver",
["npcID"] = 190207,
},
[173480] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 83389,
},
[388290] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 189813,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pahamand",
["npcID"] = 184600,
},
[396073] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Nodding Tiger",
["npcID"] = 59544,
},
[389951] = {
["source"] = "Strunraan",
["event"] = "SPELL_CAST_START",
["npcID"] = 193534,
},
[278755] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[316620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anubisath Sentinel",
["npcID"] = 162508,
},
[257642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zara'thik Hive-Guard",
["npcID"] = 162886,
},
[152183] = {
["source"] = "Slagna",
["event"] = "SPELL_CAST_START",
["npcID"] = 75406,
},
[426783] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Seer",
["npcID"] = 212775,
},
[314151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shoth the Darkened",
["npcID"] = 160532,
},
[335720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Ritualist",
["npcID"] = 155812,
},
[427200] = {
["source"] = "Amalgamation of Dreams",
["event"] = "SPELL_CAST_START",
["npcID"] = 209915,
},
[371489] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Infused Whelp",
["encounterID"] = 2609,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 188067,
},
[258199] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crusher",
["npcID"] = 130400,
},
[90329] = {
["source"] = "Ramkahen Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 48514,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[76612] = {
["isChanneled"] = true,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[439488] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[163447] = {
["encounterName"] = "Skylord Tovra",
["source"] = "Skylord Tovra",
["encounterID"] = 1736,
["event"] = "SPELL_CAST_START",
["npcID"] = 80005,
},
[369865] = {
["source"] = "Nokhud Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 191227,
},
[412868] = {
["source"] = "Karokta",
["event"] = "SPELL_CAST_START",
["npcID"] = 203625,
},
[423107] = {
["source"] = "Hymdall",
["event"] = "SPELL_CAST_START",
["npcID"] = 206644,
},
[165282] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Apexis Turret",
["npcID"] = 82153,
},
[40102] = {
["source"] = "Aqueous Spawn",
["event"] = "SPELL_CAST_START",
["npcID"] = 22883,
},
[381444] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Rira Hackclaw",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186122,
},
[314149] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ritualist",
["npcID"] = 161286,
},
[270987] = {
["source"] = "Disciple of Nalorakk",
["event"] = "SPELL_CAST_START",
["npcID"] = 120949,
},
[394440] = {
["source"] = "Huntmaster Yrgena",
["event"] = "SPELL_CAST_START",
["npcID"] = 201538,
},
[404679] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mad-Eye Carrey",
["npcID"] = 201181,
},
[375580] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[359629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawtouched Bull",
["npcID"] = 181359,
},
[451778] = {
["source"] = "Dogmatic Machine Speaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 212878,
},
[265433] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[211571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eredar Chaosbringer",
["npcID"] = 105617,
},
[392394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamegullet",
["npcID"] = 197697,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[306389] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkmaul Centurion",
["npcID"] = 156825,
},
[371471] = {
["encounterName"] = "Melidrussa Chillworn",
["source"] = "Violetwing Stagbeetle",
["encounterID"] = 2609,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 187969,
},
[392395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[417899] = {
["source"] = "Risen Adventurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205992,
},
[385812] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Volatile Infuser",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 192934,
},
[41071] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[302295] = {
["source"] = "Scuttleclaw Sandshell",
["event"] = "SPELL_CAST_START",
["npcID"] = 169436,
},
[115009] = {
["isChanneled"] = true,
["source"] = "Shado-Pan Stormbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 59808,
},
[132734] = {
["source"] = "Refining Specialist",
["event"] = "SPELL_CAST_START",
["npcID"] = 67283,
},
[378112] = {
["source"] = "Encroaching Hornswog",
["event"] = "SPELL_CAST_START",
["npcID"] = 189314,
},
[374865] = {
["source"] = "Konkhular",
["event"] = "SPELL_CAST_START",
["npcID"] = 194544,
},
[131486] = {
["event"] = "SPELL_CAST_START",
["source"] = "Succubus",
["npcID"] = 66901,
},
[388302] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[23381] = {
["encounterName"] = "Lady Anacondra",
["source"] = "Lady Anacondra",
["npcID"] = 3671,
["event"] = "SPELL_CAST_START",
["encounterID"] = 585,
},
[392398] = {
["source"] = "Primal Thundercloud",
["event"] = "SPELL_CAST_START",
["npcID"] = 197509,
},
[39079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Falconer",
["npcID"] = 20037,
},
[198263] = {
["encounterName"] = "Odyn",
["source"] = "Odyn",
["encounterID"] = 1809,
["event"] = "SPELL_CAST_START",
["npcID"] = 95676,
},
[406733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Traitorous Sister",
["npcID"] = 200826,
},
[159356] = {
["source"] = "Malevolent Breath",
["event"] = "SPELL_CAST_START",
["npcID"] = 78791,
},
[258672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 126918,
},
[417782] = {
["source"] = "Mechanized Mekgineer Hologram",
["event"] = "SPELL_CAST_START",
["npcID"] = 207539,
},
[382233] = {
["source"] = "Batak",
["event"] = "SPELL_CAST_START",
["npcID"] = 193462,
},
[317284] = {
["source"] = "Mistress Dyrax",
["event"] = "SPELL_CAST_START",
["npcID"] = 162880,
},
[197240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prolifica",
["npcID"] = 98986,
},
[314586] = {
["event"] = "SPELL_CAST_START",
["source"] = "R'khuzj the Unfathomable",
["npcID"] = 156299,
},
[423117] = {
["encounterName"] = "Volcoross",
["source"] = "Volcoross",
["encounterID"] = 2737,
["event"] = "SPELL_CAST_START",
["npcID"] = 208478,
},
[88010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[387317] = {
["source"] = "Ruby Culler",
["event"] = "SPELL_CAST_START",
["npcID"] = 190093,
},
[22121] = {
["source"] = "Timberstep Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 194041,
},
[373972] = {
["isChanneled"] = true,
["source"] = "Primalist Flamedancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 190206,
},
[41069] = {
["source"] = "Shadowmoon Deathshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 22882,
},
[386259] = {
["source"] = "Basrikron",
["event"] = "SPELL_CAST_START",
["npcID"] = 193535,
},
[303158] = {
["source"] = "Zanj'ir Myrmidon",
["event"] = "SPELL_CAST_START",
["npcID"] = 153960,
},
[79175] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amberglass Crab",
["npcID"] = 54557,
},
[302302] = {
["source"] = "Scuttleclaw Skimmer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169434,
},
[173148] = {
["source"] = "Grom'kar Flameslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 81279,
},
[314655] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[329383] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nascent Shade",
["npcID"] = 178013,
},
[149463] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[321000] = {
["source"] = "Prime Shieldguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 174672,
},
[268028] = {
["source"] = "Living Current",
["event"] = "SPELL_CAST_START",
["npcID"] = 134144,
},
[315927] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[240006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sav'thul",
["npcID"] = 182863,
},
[160383] = {
["source"] = "Shiverblood Frostbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 78869,
},
[388310] = {
["event"] = "SPELL_CAST_START",
["source"] = "Custodial Protector",
["npcID"] = 192694,
},
[360432] = {
["source"] = "Toadious",
["event"] = "SPELL_CAST_START",
["npcID"] = 184395,
},
[392406] = {
["source"] = "Storm Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 197982,
},
[325205] = {
["source"] = "Keeneye Bowman",
["event"] = "SPELL_CAST_START",
["npcID"] = 166936,
},
[412884] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[79176] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amberglass Crab",
["npcID"] = 54557,
},
[366685] = {
["source"] = "Stellar Mote",
["event"] = "SPELL_CAST_START",
["npcID"] = 185271,
},
[410837] = {
["source"] = "Ritualmaster Skarna",
["event"] = "SPELL_CAST_START",
["npcID"] = 202274,
},
[396503] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[146050] = {
["source"] = "Kor'kron Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 72784,
},
[40872] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[389875] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[10348] = {
["source"] = "Leprous Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 6222,
},
[391871] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duskpaw Tendontearer",
["npcID"] = 197820,
},
[198024] = {
["encounterName"] = "Rokmora",
["source"] = "Rokmora",
["encounterID"] = 1790,
["event"] = "SPELL_CAST_START",
["npcID"] = 91003,
},
[292910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Shackler",
["npcID"] = 167322,
},
[361209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Antros",
["npcID"] = 182466,
},
[299771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neri Sharpfin",
["npcID"] = 152108,
},
[377512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Basalt Shell",
["npcID"] = 186622,
},
[401421] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[412888] = {
["source"] = "Ysera",
["event"] = "SPELL_CAST_START",
["npcID"] = 198970,
},
[133765] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Durumu the Forgotten",
["encounterID"] = 1572,
["event"] = "SPELL_CAST_START",
["npcID"] = 68036,
},
[396001] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Songbird Queen",
["npcID"] = 59553,
},
[427223] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putrid Pyromancer",
["npcID"] = 84957,
},
[202365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Runecarver Slave",
["npcID"] = 102375,
},
[455892] = {
["source"] = "Sloshmuck",
["event"] = "SPELL_CAST_START",
["npcID"] = 215805,
},
[158414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Grunt",
["npcID"] = 91599,
},
[172673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sun Prophet Tenhamen",
["npcID"] = 154727,
},
[153395] = {
["event"] = "SPELL_CAST_START",
["source"] = "Carrion Worm",
["npcID"] = 76057,
},
[308455] = {
["encounterName"] = "Tunk",
["source"] = "Tunk",
["npcID"] = 157300,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2325,
},
[99530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Molten Lord",
["npcID"] = 53115,
},
[410843] = {
["isChanneled"] = true,
["source"] = "Volcanic Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 205218,
},
[173265] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amorph Annihilator",
["npcID"] = 86620,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[384223] = {
["encounterName"] = "Azureblade",
["source"] = "Azureblade",
["encounterID"] = 2585,
["event"] = "SPELL_CAST_START",
["npcID"] = 186739,
},
[11820] = {
["source"] = "Mechanized Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 6234,
},
[167966] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83893,
},
[423131] = {
["source"] = "Wrathion",
["event"] = "SPELL_CAST_START",
["npcID"] = 210077,
},
[257656] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unfinished Stone Golem",
["npcID"] = 201586,
},
[193152] = {
["encounterName"] = "King Deepbeard",
["source"] = "King Deepbeard",
["npcID"] = 91797,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1812,
},
[169851] = {
["source"] = "Addled Arcanomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 84990,
},
[338011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Violent Muckmare",
["npcID"] = 166318,
},
[40873] = {
["source"] = "Dragonmaw Sky Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 23030,
},
[172675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shuja Grimaxe",
["npcID"] = 167301,
},
[387740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tyrhold Watcher",
["npcID"] = 192696,
},
[308459] = {
["source"] = "Zardeth of the Black Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 158371,
},
[199772] = {
["source"] = "Valarjar Champion",
["event"] = "SPELL_CAST_START",
["npcID"] = 97087,
},
[391903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruby Egg Guardian",
["npcID"] = 190171,
},
[412895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[382179] = {
["event"] = "SPELL_CAST_START",
["source"] = "Senior Researcher Alydrus",
["npcID"] = 208734,
},
[253562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410848] = {
["source"] = "Neltharion",
["event"] = "SPELL_CAST_START",
["npcID"] = 201668,
},
[119622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sha of Anger",
["npcID"] = 60491,
},
[366629] = {
["source"] = "Overthrown Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 185155,
},
[182217] = {
["source"] = "Jailer Zerus",
["event"] = "SPELL_CAST_START",
["npcID"] = 91672,
},
[143746] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Embodied Despair",
["event"] = "SPELL_CAST_START",
["npcID"] = 71474,
},
[113479] = {
["source"] = "Master Archer",
["event"] = "SPELL_CAST_START",
["npcID"] = 59175,
},
[299746] = {
["source"] = "Waveblade Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 154304,
},
[15305] = {
["source"] = "Thrall",
["event"] = "SPELL_CAST_START",
["npcID"] = 78553,
},
[337131] = {
["source"] = "Xantuth the Blighted",
["event"] = "SPELL_CAST_START",
["npcID"] = 162872,
},
[362028] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[384827] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[264931] = {
["encounterName"] = "Raal the Gluttonous",
["source"] = "Raal the Gluttonous",
["encounterID"] = 2115,
["event"] = "SPELL_CAST_START",
["npcID"] = 131863,
},
[135818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Footman",
["npcID"] = 68485,
},
[170828] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warlock Soulstealer",
["npcID"] = 79482,
},
[86726] = {
["encounterName"] = "Randolph Moloch",
["source"] = "Randolph Moloch",
["npcID"] = 46383,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1146,
},
[279264] = {
["source"] = "Kaldorei Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 205892,
},
[394470] = {
["source"] = "Ko'jo",
["event"] = "SPELL_CAST_START",
["npcID"] = 186367,
},
[165511] = {
["source"] = "Miserain Starsorrow",
["event"] = "SPELL_CAST_START",
["npcID"] = 82017,
},
[307937] = {
["encounterName"] = "Prophet Skitra",
["source"] = "Prophet Skitra",
["npcID"] = 157238,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2334,
},
[416996] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[160392] = {
["source"] = "Maggle",
["event"] = "SPELL_CAST_START",
["npcID"] = 78896,
},
[161150] = {
["source"] = "Grom'kar Grenadier",
["event"] = "SPELL_CAST_START",
["npcID"] = 80936,
},
[455904] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oozemodius",
["npcID"] = 220410,
},
[367851] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[172679] = {
["source"] = "Skothwa",
["event"] = "SPELL_CAST_START",
["npcID"] = 79500,
},
[396520] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quilmo the Ancient",
["npcID"] = 196386,
},
[20823] = {
["source"] = "Scarlet Conjuror",
["event"] = "SPELL_CAST_START",
["npcID"] = 4297,
},
[392425] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[35943] = {
["source"] = "Shadowmoon Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 16594,
},
[314611] = {
["source"] = "Insurgent Machinist",
["event"] = "SPELL_CAST_START",
["npcID"] = 159758,
},
[406760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[416999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[369901] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smoldering Feather",
["npcID"] = 186965,
},
[255614] = {
["source"] = "Violetsail Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 179936,
},
[280462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Watcher Aum-ka",
["npcID"] = 154619,
},
[215178] = {
["source"] = "Trained Nightsaber",
["event"] = "SPELL_CAST_START",
["npcID"] = 148933,
},
[419048] = {
["encounterName"] = "Igira the Cruel",
["source"] = "Igira the Cruel",
["encounterID"] = 2709,
["event"] = "SPELL_CAST_START",
["npcID"] = 200926,
},
[412905] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Forgemaster Algrin",
["npcID"] = 203709,
},
[138607] = {
["source"] = "Amani'shi Flame Chanter",
["event"] = "SPELL_CAST_START",
["npcID"] = 69909,
},
[449765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magma Serpent",
["npcID"] = 215770,
},
[106826] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[82765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[438973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pit Lord",
["npcID"] = 228574,
},
[408811] = {
["source"] = "Sundered Siegemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 198874,
},
[457398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Beebiter",
["npcID"] = 222284,
},
[259711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Block Warden",
["npcID"] = 131445,
},
[417499] = {
["source"] = "Malfunctioning Robotic Cauldron",
["event"] = "SPELL_CAST_START",
["npcID"] = 207111,
},
[245377] = {
["source"] = "Felsiege Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 119395,
},
[199652] = {
["source"] = "King Haldor",
["event"] = "SPELL_CAST_START",
["npcID"] = 95843,
},
[388335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Runebinder",
["npcID"] = 186354,
},
[174730] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wandering Eye",
["npcID"] = 85498,
},
[457959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geothermus",
["npcID"] = 217416,
},
[394479] = {
["source"] = "Primordial Hail",
["event"] = "SPELL_CAST_START",
["npcID"] = 189039,
},
[428703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rock Smasher",
["npcID"] = 213954,
},
[417725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fury of N'zoth",
["npcID"] = 205307,
},
[359668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawtouched Animate",
["npcID"] = 181484,
},
[106827] = {
["encounterName"] = "Sha of Violence",
["source"] = "Sha of Violence",
["npcID"] = 56719,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1305,
},
[290045] = {
["source"] = "Rastari Enforcer",
["event"] = "SPELL_CAST_START",
["npcID"] = 147495,
},
[276441] = {
["source"] = "Irontide Skyrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 141485,
},
[396825] = {
["source"] = "Rimebound Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 195836,
},
[427245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hapless Assistant",
["npcID"] = 212981,
},
[371956] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Terrasentry",
["npcID"] = 188011,
},
[414959] = {
["source"] = "Blazing Overseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205140,
},
[391866] = {
["source"] = "Brackenhide Putrifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 192057,
},
[374022] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[16564] = {
["source"] = "D-1000",
["event"] = "SPELL_CAST_START",
["npcID"] = 49268,
},
[395952] = {
["source"] = "Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 197125,
},
[392435] = {
["source"] = "Molkeej",
["event"] = "SPELL_CAST_START",
["npcID"] = 195430,
},
[451820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargantuan Honeyslime",
["npcID"] = 222960,
},
[388340] = {
["source"] = "Kalecgos",
["event"] = "SPELL_CAST_START",
["npcID"] = 196439,
},
[352223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vault Sentinel",
["npcID"] = 185027,
},
[18392] = {
["encounterName"] = "Onyxia",
["source"] = "Onyxia",
["npcID"] = 10184,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1084,
},
[37036] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Master Engineer Telonicus",
["npcID"] = 20063,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[412914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fragment of Shadow",
["npcID"] = 205968,
},
[406771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Memory of a Master",
["npcID"] = 200827,
},
[30686] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["npcID"] = 17308,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1891,
},
[394485] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hypoxicron",
["npcID"] = 186334,
},
[268239] = {
["source"] = "Guardian Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 136249,
},
[159085] = {
["source"] = "Blackrock Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 81422,
},
[417011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Paladin of the Silver Hand",
["npcID"] = 208193,
},
[59147] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[147818] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonscale Firestorm",
["npcID"] = 72876,
},
[308481] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Riftwalker",
["npcID"] = 158146,
},
[389804] = {
["source"] = "Unstable Curator",
["event"] = "SPELL_CAST_START",
["npcID"] = 187154,
},
[158014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gruffy",
["npcID"] = 193251,
},
[57781] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1968,
},
[369328] = {
["isChanneled"] = true,
["source"] = "Runic Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184107,
},
[400631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[410870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wild Vortex",
["npcID"] = 45912,
},
[165520] = {
["source"] = "Rainiara the Kingslayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 82260,
},
[20824] = {
["source"] = "Deadwind Ogre Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 7379,
},
[170824] = {
["source"] = "Khargax the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 81537,
},
[304388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siltridge Marauder",
["npcID"] = 152541,
},
[153234] = {
["encounterName"] = "Azzakel, Vanguard of the Legion",
["source"] = "Azzakel",
["encounterID"] = 1678,
["event"] = "SPELL_CAST_START",
["npcID"] = 75927,
},
[126283] = {
["source"] = "Shadowmaster Sydow",
["event"] = "SPELL_CAST_START",
["npcID"] = 63240,
},
[392442] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kholdeg",
["npcID"] = 194608,
},
[131733] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hozen Diver",
["npcID"] = 66148,
},
[106428] = {
["source"] = "Shado-Pan Novice",
["event"] = "SPELL_CAST_START",
["npcID"] = 56395,
},
[385024] = {
["source"] = "Salty Salamander",
["event"] = "SPELL_CAST_START",
["npcID"] = 188027,
},
[384252] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcane Elemental",
["npcID"] = 190780,
},
[410873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gust Soldier",
["npcID"] = 45477,
},
[306866] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Ra-den",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 156866,
},
[316677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Swarmkeeper",
["npcID"] = 162303,
},
[317639] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[401318] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[157331] = {
["source"] = "Primal Storm Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 77942,
},
[300296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[417018] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
},
[271628] = {
["event"] = "SPELL_CAST_START",
["source"] = "Teldrassil Sentinel",
["npcID"] = 134938,
},
[404732] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Eternal Blaze",
["npcID"] = 201773,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[377490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderspine Crasher",
["npcID"] = 191057,
},
[394536] = {
["source"] = "Chief Dead Eye",
["event"] = "SPELL_CAST_START",
["npcID"] = 195337,
},
[394494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmaton",
["npcID"] = 186827,
},
[33787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Collaborator",
["npcID"] = 17962,
},
[64170] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Freya",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33410,
},
[299110] = {
["source"] = "Annihilator Lak'hal",
["event"] = "SPELL_CAST_START",
["npcID"] = 153942,
},
[121165] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265487] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[393855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Web-Queen Ashkaz",
["npcID"] = 192983,
},
[40877] = {
["source"] = "Dragonmaw Wind Reaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 23330,
},
[394496] = {
["source"] = "Ruinous",
["event"] = "SPELL_CAST_START",
["npcID"] = 193522,
},
[174912] = {
["source"] = "Skothwa",
["event"] = "SPELL_CAST_START",
["npcID"] = 79500,
},
[406783] = {
["encounterName"] = "The Amalgamation Chamber",
["source"] = "Shadowflame Amalgamation",
["npcID"] = 201934,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2687,
},
[151566] = {
["source"] = "Bloodmaul Magma Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 74349,
},
[426645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Naz'jar Ravager",
["npcID"] = 212673,
},
[41056] = {
["source"] = "Yorus the Flesh Harvester",
["event"] = "SPELL_CAST_START",
["npcID"] = 24214,
},
[118094] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[400641] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[369925] = {
["source"] = "Transformed Dreadsquall",
["event"] = "SPELL_CAST_START",
["npcID"] = 197225,
},
[404737] = {
["source"] = "Han'thul",
["event"] = "SPELL_CAST_START",
["npcID"] = 198914,
},
[164907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Ritual Bones",
["npcID"] = 75715,
},
[392451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Channeler",
["npcID"] = 197985,
},
[131424] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dalgan",
["npcID"] = 66274,
},
[165213] = {
["source"] = "Everbloom Tender",
["event"] = "SPELL_CAST_START",
["npcID"] = 81985,
},
[455932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Old Grim",
["npcID"] = 213403,
},
[196242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dreadlord Mendacius",
["npcID"] = 99649,
},
[381585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brutal Motivator",
["npcID"] = 184453,
},
[404739] = {
["source"] = "First Mate Ovdah",
["event"] = "SPELL_CAST_START",
["npcID"] = 201182,
},
[357641] = {
["source"] = "Frostsoul Automaton",
["event"] = "SPELL_CAST_START",
["npcID"] = 177982,
},
[85685] = {
["source"] = "Lord Godfrey",
["event"] = "SPELL_CAST_START",
["npcID"] = 45878,
},
[217744] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blinky Gizmospark",
["npcID"] = 148322,
},
[371976] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[63147] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Sara",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33134,
},
[196808] = {
["source"] = "Mo'arg Brutalizer",
["event"] = "SPELL_CAST_START",
["npcID"] = 95984,
},
[378120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unstable Rock",
["npcID"] = 192799,
},
[347404] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Endbringer",
["npcID"] = 157810,
},
[64171] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Thorim",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33413,
},
[433410] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chittering Fearmonger",
["npcID"] = 216583,
},
[32863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[417227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[316689] = {
["source"] = "Ben Howell",
["event"] = "SPELL_CAST_START",
["npcID"] = 162682,
},
[433411] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Darkcaster",
["npcID"] = 208242,
},
[243568] = {
["source"] = "Savage Cursespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 122078,
},
[396552] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[20825] = {
["source"] = "Guzzling Patron",
["event"] = "SPELL_CAST_START",
["npcID"] = 9547,
},
[417030] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Alliance Conjuror",
["npcID"] = 206351,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[151274] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75149,
},
[404744] = {
["encounterName"] = "Kazzara, the Hellforged",
["source"] = "Kazzara, the Hellforged",
["npcID"] = 201261,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2688,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[400649] = {
["encounterName"] = "Tyr, the Infinite Keeper",
["source"] = "Tyr, the Infinite Keeper",
["npcID"] = 198998,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2670,
},
[460034] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[289421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Pa'ku",
["npcID"] = 148624,
},
[196944] = {
["source"] = "Balnazzar",
["event"] = "SPELL_CAST_START",
["npcID"] = 90981,
},
[313945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Crusher",
["npcID"] = 161218,
},
[312597] = {
["source"] = "King Phaoris",
["event"] = "SPELL_CAST_START",
["npcID"] = 161112,
},
[412284] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[414330] = {
["encounterName"] = "Iridikron",
["source"] = "Chromie",
["npcID"] = 204449,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2669,
},
[253583] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dazar'ai Augur",
["npcID"] = 122972,
},
[410890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Warder",
["npcID"] = 205259,
},
[371983] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[37551] = {
["source"] = "Shattered Hand Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 16704,
},
[17274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Injured Warsong Mage",
["npcID"] = 27107,
},
[394509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruinous",
["npcID"] = 193522,
},
[404748] = {
["source"] = "Navigator Bi-Yun",
["event"] = "SPELL_CAST_START",
["npcID"] = 201184,
},
[300514] = {
["source"] = "Scrapbone Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 150146,
},
[102227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enemy Tonk",
["npcID"] = 54642,
},
[435465] = {
["source"] = "Machinist Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 217799,
},
[306457] = {
["isChanneled"] = true,
["source"] = "Tunk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 157328,
},
[387711] = {
["isChanneled"] = true,
["source"] = "Enraged Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 200407,
},
[140626] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[412275] = {
["source"] = "Captain Reykal",
["event"] = "SPELL_CAST_START",
["npcID"] = 203355,
},
[396559] = {
["source"] = "Raszageth",
["event"] = "SPELL_CAST_START",
["npcID"] = 199031,
},
[406798] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cavern Flayer",
["npcID"] = 202307,
},
[223933] = {
["source"] = "Violetsail Bruisebringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 179737,
},
[394512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Spawn",
["npcID"] = 75652,
},
[146768] = {
["encounterName"] = "Galakras",
["source"] = "Lady Sylvanas Windrunner",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72561,
},
[214004] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 97587,
},
[79881] = {
["source"] = "Worgen Rebel",
["event"] = "SPELL_CAST_START",
["npcID"] = 45292,
},
[144031] = {
["source"] = "Grievous Depthworm",
["event"] = "SPELL_CAST_START",
["npcID"] = 85942,
},
[214988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Vengeance",
["npcID"] = 100364,
},
[410223] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[147103] = {
["source"] = "Grimfrost Lavaslinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 72987,
},
[449130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forge Loader",
["npcID"] = 213343,
},
[331845] = {
["source"] = "Lightbound Scorcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 165687,
},
[414992] = {
["source"] = "Burning Flamespeaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 205138,
},
[200345] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Risen Archer",
["npcID"] = 98275,
},
[369942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flamewing Ascendant",
["npcID"] = 209837,
},
[153247] = {
["encounterName"] = "Roltall",
["source"] = "Roltall",
["encounterID"] = 1652,
["event"] = "SPELL_CAST_START",
["npcID"] = 75786,
},
[374038] = {
["encounterName"] = "The Primal Council",
["source"] = "Embar Firepath",
["npcID"] = 187767,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2590,
},
[417041] = {
["source"] = "High Keeper Orendi",
["event"] = "SPELL_CAST_START",
["npcID"] = 205874,
},
[371313] = {
["source"] = "Blazing Manifestation",
["event"] = "SPELL_CAST_START",
["npcID"] = 186336,
},
[365168] = {
["source"] = "Eternal Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 184530,
},
[306874] = {
["encounterName"] = "Ra-den the Despoiled",
["source"] = "Crackling Stalker",
["encounterID"] = 2331,
["event"] = "SPELL_CAST_START",
["npcID"] = 157365,
},
[140620] = {
["source"] = "Fungal Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 70153,
},
[271652] = {
["source"] = "Kaldorei Scout",
["event"] = "SPELL_CAST_START",
["npcID"] = 205892,
},
[404756] = {
["source"] = "Sundered Flame Flamespinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 203686,
},
[268233] = {
["source"] = "Guardian Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 136249,
},
[142667] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Hungry Kunchong",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71420,
},
[412262] = {
["source"] = "Time-Lost Rocketeer",
["event"] = "SPELL_CAST_START",
["npcID"] = 205727,
},
[404757] = {
["source"] = "Sundered Flame Manaweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 203681,
},
[162500] = {
["encounterName"] = "Rocketspark and Borka",
["source"] = "Railmaster Rocketspark",
["encounterID"] = 1715,
["event"] = "SPELL_CAST_START",
["npcID"] = 77803,
},
[407121] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Warlock",
["npcID"] = 203857,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[369946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boneshaper Jardak",
["npcID"] = 188693,
},
[265511] = {
["source"] = "Spirit Drain Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 135169,
},
[114004] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[114516] = {
["source"] = "Trail Yakker",
["event"] = "SPELL_CAST_START",
["npcID"] = 59526,
},
[172703] = {
["source"] = "Grom'kar Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 83763,
},
[314658] = {
["source"] = "Henry Garrick",
["event"] = "SPELL_CAST_START",
["npcID"] = 161504,
},
[374361] = {
["encounterName"] = "Echo of Doragosa",
["source"] = "Echo of Doragosa",
["npcID"] = 190609,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2565,
},
[311116] = {
["source"] = "Spiked Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 159416,
},
[393812] = {
["source"] = "Whirglgurgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188860,
},
[126117] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slitherscale Eggdrinker",
["npcID"] = 63532,
},
[384868] = {
["source"] = "Nokhud Longbow",
["event"] = "SPELL_CAST_START",
["npcID"] = 192789,
},
[392474] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Infuser",
["npcID"] = 197799,
},
[172704] = {
["source"] = "Infested Vinewarden",
["event"] = "SPELL_CAST_START",
["npcID"] = 80698,
},
[406058] = {
["source"] = "Tentacle",
["event"] = "SPELL_CAST_START",
["npcID"] = 203406,
},
[374045] = {
["source"] = "Containment Apparatus",
["event"] = "SPELL_CAST_START",
["npcID"] = 190342,
},
[192158] = {
["source"] = "Olmyr the Enlightened",
["event"] = "SPELL_CAST_START",
["npcID"] = 97202,
},
[361052] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engorged Annelid",
["npcID"] = 180722,
},
[187706] = {
["source"] = "Dark Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 91697,
},
[440912] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathspore Lashroom",
["npcID"] = 221424,
},
[298898] = {
["encounterName"] = "Trixie & Naeno",
["source"] = "Naeno Megacrash",
["encounterID"] = 2312,
["event"] = "SPELL_CAST_START",
["npcID"] = 153755,
},
[320805] = {
["event"] = "SPELL_CAST_START",
["source"] = "Epilon",
["npcID"] = 158869,
},
[30937] = {
["source"] = "Shadowmoon Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17653,
},
[362405] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[378143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primalist Infiltrator",
["npcID"] = 191841,
},
[76634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tainted Sentry",
["npcID"] = 40925,
},
[316711] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "Psychus",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158376,
},
[449815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sandres the Relicbearer",
["npcID"] = 217534,
},
[427290] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galok Wingslicer",
["npcID"] = 209047,
},
[388383] = {
["source"] = "Iskaara Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 186478,
},
[64174] = {
["source"] = "Hodir",
["event"] = "SPELL_CAST_START",
["npcID"] = 33411,
},
[395833] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[201375] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Seacursed Slaver",
["npcID"] = 97043,
},
[196591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coldscale Gazecrawler",
["npcID"] = 108185,
},
[195232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[130900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[353573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vil'thras",
["npcID"] = 185110,
},
[57775] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1968,
},
[320081] = {
["source"] = "Masked Faerie",
["event"] = "SPELL_CAST_START",
["npcID"] = 160293,
},
[342462] = {
["source"] = "Champion of Humility",
["event"] = "SPELL_CAST_START",
["npcID"] = 170836,
},
[460057] = {
["source"] = "Queensguard An'Jak Shabtir",
["event"] = "SPELL_CAST_START",
["npcID"] = 219665,
},
[378886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Turi Flickerflame",
["npcID"] = 199740,
},
[397094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[384291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[251703] = {
["source"] = "Imp Mother Laglath",
["event"] = "SPELL_CAST_START",
["npcID"] = 125820,
},
[12039] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["npcID"] = 17309,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1893,
},
[166565] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Assault Cannon",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79548,
},
[17883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilfang Observer",
["npcID"] = 17938,
},
[121174] = {
["encounterName"] = "Gekkan",
["source"] = "Harthak Flameseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 61392,
},
[265523] = {
["source"] = "Bloodsworn Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 133912,
},
[195234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Wavebinder",
["npcID"] = 97170,
},
[392484] = {
["source"] = "Moskhoi",
["event"] = "SPELL_CAST_START",
["npcID"] = 195093,
},
[378150] = {
["source"] = "Primalist Infiltrator",
["event"] = "SPELL_CAST_START",
["npcID"] = 189869,
},
[18651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Garrison Marksman",
["npcID"] = 88391,
},
[308527] = {
["encounterName"] = "Ravnyr",
["source"] = "Gor'groth",
["npcID"] = 156814,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2326,
},
[397888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fallen Waterspeaker",
["npcID"] = 200126,
},
[300972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boggac Skullbash",
["npcID"] = 151308,
},
[404772] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grugoth the Hullcrusher",
["npcID"] = 200721,
},
[22695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Growing Squashling",
["npcID"] = 96545,
},
[392486] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[177460] = {
["source"] = "Corrupted Wind Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 80381,
},
[255644] = {
["source"] = "Farstrider Elite",
["event"] = "SPELL_CAST_START",
["npcID"] = 145005,
},
[174758] = {
["source"] = "Grulkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 86157,
},
[384296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mara'nar the Thunderous",
["npcID"] = 196913,
},
[271670] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Talanji",
["npcID"] = 134092,
},
[388392] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unruly Textbook",
["npcID"] = 196044,
},
[398631] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Crackshot",
["npcID"] = 200852,
},
[138923] = {
["encounterName"] = "Ji-Kun",
["source"] = "Ji-Kun",
["npcID"] = 69712,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1573,
},
[106841] = {
["encounterName"] = "Liu Flameheart",
["source"] = "Liu Flameheart",
["npcID"] = 56732,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1416,
},
[147652] = {
["source"] = "Primal Stalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72805,
},
[398632] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[302388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vexiona",
["npcID"] = 151798,
},
[378155] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Tricktotem",
["encounterID"] = 2570,
["event"] = "SPELL_CAST_START",
["npcID"] = 186125,
},
[202661] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Fel Scorcher",
["npcID"] = 102583,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[221357] = {
["source"] = "Cannoneer Dargal",
["event"] = "SPELL_CAST_START",
["npcID"] = 110635,
},
[285250] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kul Tiran Strongarm",
["npcID"] = 146553,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 1973,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[428526] = {
["encounterName"] = "Ozumat",
["source"] = "Splotch",
["npcID"] = 213806,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1047,
},
[398634] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Deadshot",
["npcID"] = 203914,
},
[196870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hatecoil Stormweaver",
["npcID"] = 91783,
},
[114848] = {
["encounterName"] = "High Inquisitor Whitemane",
["source"] = "High Inquisitor Whitemane",
["encounterID"] = 1425,
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[419975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Splinterlimb",
["npcID"] = 209365,
},
[308875] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heixi the Stonelord",
["npcID"] = 157171,
},
[298894] = {
["source"] = "Malfunctioning Scraphound",
["event"] = "SPELL_CAST_START",
["npcID"] = 151301,
},
[417868] = {
["source"] = "Druid of the Claw",
["event"] = "SPELL_CAST_START",
["npcID"] = 210684,
},
[404779] = {
["source"] = "Contamination Investigator",
["event"] = "SPELL_CAST_START",
["npcID"] = 202320,
},
[365872] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[323048] = {
["source"] = "Blistering Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 160345,
},
[202913] = {
["encounterName"] = "Tirathon Saltheril",
["source"] = "Tirathon Saltheril",
["npcID"] = 95885,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1815,
},
[369026] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184422,
},
[118105] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[419274] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashbound Captain",
["npcID"] = 207952,
},
[172714] = {
["source"] = "Botani Greensworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 80696,
},
[15982] = {
["encounterName"] = "Antu'sul",
["source"] = "Antu'sul",
["encounterID"] = 595,
["event"] = "SPELL_CAST_START",
["npcID"] = 8127,
},
[455975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[417752] = {
["source"] = "Overlord Mechagon",
["event"] = "SPELL_CAST_START",
["npcID"] = 205309,
},
[32346] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[201902] = {
["source"] = "Taintheart Deadeye",
["event"] = "SPELL_CAST_START",
["npcID"] = 100539,
},
[374066] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[146728] = {
["source"] = "Dragonmaw Tidal Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72367,
},
[196403] = {
["source"] = "Doom Commander Beliash",
["event"] = "SPELL_CAST_START",
["npcID"] = 93221,
},
[169929] = {
["encounterName"] = "Yalnu",
["source"] = "Flourishing Ancient",
["npcID"] = 84400,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[314855] = {
["source"] = "Gryth'ax the Executioner",
["event"] = "SPELL_CAST_START",
["npcID"] = 159224,
},
[359733] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cipherclad",
["npcID"] = 181349,
},
[397096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malsegan",
["npcID"] = 193212,
},
[388402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Predatory Thresher",
["npcID"] = 198779,
},
[118106] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Subetai the Swift",
["npcID"] = 60710,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[359734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioned Constructor",
["npcID"] = 181870,
},
[204666] = {
["encounterName"] = "Oakheart",
["source"] = "Oakheart",
["encounterID"] = 1837,
["event"] = "SPELL_CAST_START",
["npcID"] = 103344,
},
[249919] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[415262] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[387613] = {
["source"] = "Ukhel Corruptor",
["event"] = "SPELL_CAST_START",
["npcID"] = 195842,
},
[375351] = {
["source"] = "Glacial Proto-Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 190403,
},
[393385] = {
["source"] = "Chalsec of the Earth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193847,
},
[300351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Decimator Shiq'voth",
["npcID"] = 153943,
},
[155909] = {
["source"] = "Slavemaster Ok'mok",
["event"] = "SPELL_CAST_START",
["npcID"] = 75864,
},
[422078] = {
["source"] = "Emerald Wingguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210278,
},
[107356] = {
["encounterName"] = "Taran Zhu",
["source"] = "Taran Zhu",
["npcID"] = 56884,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1306,
},
[394843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oshigol",
["npcID"] = 193235,
},
[43291] = {
["source"] = "Dragonflayer Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 24216,
},
[201872] = {
["source"] = "Lurking Observer",
["event"] = "SPELL_CAST_START",
["npcID"] = 154529,
},
[204896] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spellfiend Devourer",
["npcID"] = 114406,
},
[54962] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2026,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["encounterID"] = 1981,
["event"] = "SPELL_CAST_START",
["npcID"] = 29306,
},
[419123] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[299460] = {
["source"] = "Pistonhead Blaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 150250,
},
[374073] = {
["source"] = "Primalist Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 190345,
},
[284362] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Brother Joseph",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146253,
},
[175997] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Dulhu",
["encounterID"] = 1757,
["event"] = "SPELL_CAST_START",
["npcID"] = 83894,
},
[396599] = {
["source"] = "Fulgurb",
["event"] = "SPELL_CAST_START",
["npcID"] = 193170,
},
[455984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[130906] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[304451] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siltridge Marauder",
["npcID"] = 152541,
},
[445746] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkwater Tidecrusher",
["npcID"] = 220621,
},
[225313] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Ranger",
["npcID"] = 101106,
},
[421398] = {
["encounterName"] = "Tindral Sageswift, Seer of the Flame",
["source"] = "Tindral Sageswift",
["encounterID"] = 2786,
["event"] = "SPELL_CAST_START",
["npcID"] = 209090,
},
[451890] = {
["source"] = "Stonehead Koboldcrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 220792,
},
[388410] = {
["encounterName"] = "Dathea, Ascended",
["source"] = "Dathea, Ascended",
["encounterID"] = 2635,
["event"] = "SPELL_CAST_START",
["npcID"] = 189813,
},
[256222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gentle Goat",
["npcID"] = 129110,
},
[260907] = {
["encounterName"] = "Heartsbane Triad",
["source"] = "Sister Solena",
["encounterID"] = 2113,
["event"] = "SPELL_CAST_START",
["npcID"] = 131824,
},
[372863] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[417953] = {
["source"] = "Galok Wingslicer",
["event"] = "SPELL_CAST_START",
["npcID"] = 206460,
},
[199341] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[359743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Malfunctioned Constructor",
["npcID"] = 181870,
},
[37967] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[294726] = {
["source"] = "Abyssal Commander Sivara",
["event"] = "SPELL_CAST_START",
["npcID"] = 151881,
},
[365887] = {
["source"] = "Eternal Forger",
["event"] = "SPELL_CAST_START",
["npcID"] = 184878,
},
[424352] = {
["encounterName"] = "Gnarlroot",
["source"] = "Gnarlroot",
["encounterID"] = 2820,
["event"] = "SPELL_CAST_START",
["npcID"] = 209333,
},
[427498] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Life Warden Gola",
["npcID"] = 83892,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[271841] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imperial Enforcer",
["npcID"] = 157002,
},
[365888] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 184879,
},
[401447] = {
["source"] = "Horrific Aberration",
["event"] = "SPELL_CAST_START",
["npcID"] = 198965,
},
[402748] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[153268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Exhumer",
["npcID"] = 77700,
},
[374080] = {
["source"] = "Primalist Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 190348,
},
[31707] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Elemental",
["npcID"] = 78116,
},
[394558] = {
["source"] = "Unstable Flame",
["event"] = "SPELL_CAST_START",
["npcID"] = 198577,
},
[150658] = {
["source"] = "Kraulshaper Tukaar",
["event"] = "SPELL_CAST_START",
["npcID"] = 74900,
},
[390463] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[199567] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Image of Latosius",
["npcID"] = 101028,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[427323] = {
["source"] = "Voidrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 212786,
},
[259752] = {
["source"] = "Hand of Fate",
["event"] = "SPELL_CAST_START",
["npcID"] = 131613,
},
[130396] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gyrocopter Turret",
["npcID"] = 66299,
},
[393323] = {
["source"] = "Iskaaran Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 198298,
},
[274631] = {
["source"] = "Ironhull Apprentice",
["event"] = "SPELL_CAST_START",
["npcID"] = 139799,
},
[395642] = {
["isChanneled"] = true,
["source"] = "Spellforged Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 194401,
},
[284831] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145616,
},
[394680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Failed Scalecommander Elarthresh",
["npcID"] = 201820,
},
[412156] = {
["source"] = "Time-Lost Aerobot",
["event"] = "SPELL_CAST_START",
["npcID"] = 205723,
},
[423734] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomfiend",
["npcID"] = 210910,
},
[267824] = {
["source"] = "Soul Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 135240,
},
[282676] = {
["source"] = "Blightgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 145811,
},
[199758] = {
["event"] = "SPELL_CAST_START",
["source"] = "Immolanth",
["npcID"] = 96682,
},
[38391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Destroyer",
["npcID"] = 46260,
},
[199345] = {
["encounterName"] = "Dresaron",
["source"] = "Dresaron",
["encounterID"] = 1838,
["event"] = "SPELL_CAST_START",
["npcID"] = 99200,
},
[120670] = {
["source"] = "Zandalari Fire-Dancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 60402,
},
[451900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonehead Koboldcrusher",
["npcID"] = 220792,
},
[52660] = {
["event"] = "SPELL_CAST_START",
["source"] = "Infinite Agent",
["npcID"] = 28341,
},
[382277] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[414184] = {
["encounterName"] = "Iridikron",
["source"] = "Iridikron",
["npcID"] = 198933,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2669,
},
[394564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[427672] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[406851] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[360949] = {
["source"] = "Fettered Gunner",
["event"] = "SPELL_CAST_START",
["npcID"] = 182430,
},
[428472] = {
["isChanneled"] = true,
["source"] = "Ancient Core Hound",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210295,
},
[396613] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sunscale Behemoth",
["npcID"] = 193133,
},
[377338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqualing",
["npcID"] = 190406,
},
[294226] = {
["source"] = "Ma'haat the Indomitable",
["event"] = "SPELL_CAST_START",
["npcID"] = 151739,
},
[291332] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 175313,
},
[339768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Athanos",
["npcID"] = 158891,
},
[365898] = {
["source"] = "Dominated Eradicator",
["event"] = "SPELL_CAST_START",
["npcID"] = 183413,
},
[408901] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[394567] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gillidan",
["npcID"] = 205036,
},
[388424] = {
["encounterName"] = "Primal Tsunami",
["source"] = "Primal Tsunami",
["encounterID"] = 2618,
["event"] = "SPELL_CAST_START",
["npcID"] = 189729,
},
[415045] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nixke Voltscroll",
["npcID"] = 200965,
},
[130910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[402759] = {
["source"] = "Molten Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 202284,
},
[173751] = {
["source"] = "Malkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 83452,
},
[174775] = {
["source"] = "Infested Ogron",
["event"] = "SPELL_CAST_START",
["npcID"] = 82062,
},
[402769] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 202260,
},
[427333] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[412999] = {
["source"] = "Winglord Dezran",
["event"] = "SPELL_CAST_START",
["npcID"] = 201677,
},
[415047] = {
["encounterName"] = "The Headless Horseman",
["source"] = "Headless Horseman",
["npcID"] = 207438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2725,
},
[221442] = {
["source"] = "Spectral Mortar",
["event"] = "SPELL_CAST_START",
["npcID"] = 111212,
},
[172728] = {
["source"] = "Creeping Vine",
["event"] = "SPELL_CAST_START",
["npcID"] = 85538,
},
[372045] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Caustic Spiderling",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 189233,
},
[120160] = {
["encounterName"] = "Trial of the King",
["source"] = "Haiyan the Unstoppable",
["encounterID"] = 1442,
["event"] = "SPELL_CAST_START",
["npcID"] = 61445,
},
[400714] = {
["source"] = "Nidharr",
["event"] = "SPELL_CAST_START",
["npcID"] = 201310,
},
[419144] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[169657] = {
["source"] = "Twisted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 84767,
},
[195254] = {
["encounterName"] = "Amalgam of Souls",
["source"] = "Amalgam of Souls",
["npcID"] = 98542,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1832,
},
[130911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[426147] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Nymue",
["encounterID"] = 2708,
["event"] = "SPELL_CAST_START",
["npcID"] = 206172,
},
[372047] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[223923] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corrupted Totem",
["npcID"] = 112474,
},
[424420] = {
["source"] = "Taener Duelmal",
["event"] = "SPELL_CAST_START",
["npcID"] = 211289,
},
[80012] = {
["source"] = "Forsaken Sharpshooter",
["event"] = "SPELL_CAST_START",
["npcID"] = 45376,
},
[259759] = {
["source"] = "Hand of Fate",
["event"] = "SPELL_CAST_START",
["npcID"] = 131613,
},
[54965] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[391268] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Earthwrought Smasher",
["npcID"] = 197595,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[451064] = {
["source"] = "Amber Honeyslime",
["event"] = "SPELL_CAST_START",
["npcID"] = 222846,
},
[149181] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[147720] = {
["source"] = "Ordon Fire-Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 72894,
},
[384336] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[402766] = {
["source"] = "Sundered Flame Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 203616,
},
[413005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Additive",
["npcID"] = 205672,
},
[39121] = {
["source"] = "Bloodwarder Greenkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 18419,
},
[179898] = {
["source"] = "Darkmoon Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 90304,
},
[106851] = {
["source"] = "Stout Brew Alemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 59519,
},
[265568] = {
["source"] = "Befouled Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 133685,
},
[390481] = {
["source"] = "Uranto the Swift",
["event"] = "SPELL_CAST_START",
["npcID"] = 191103,
},
[424178] = {
["source"] = "Sickened Growth",
["event"] = "SPELL_CAST_START",
["npcID"] = 207926,
},
[427341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rydra Scalegorger",
["npcID"] = 209048,
},
[34232] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Elf Mage-Priest",
["npcID"] = 27747,
},
[424315] = {
["event"] = "SPELL_CAST_START",
["source"] = "Druid of the Moon",
["npcID"] = 211086,
},
[392530] = {
["source"] = "Quarry Infuser",
["event"] = "SPELL_CAST_START",
["npcID"] = 197799,
},
[271713] = {
["source"] = "Azerite Leviathan",
["event"] = "SPELL_CAST_START",
["npcID"] = 152572,
},
[413008] = {
["event"] = "SPELL_CAST_START",
["source"] = "Highmountain Seer",
["npcID"] = 201578,
},
[390483] = {
["event"] = "SPELL_CAST_START",
["source"] = "Riverbend Gnasher",
["npcID"] = 189337,
},
[165122] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80816,
},
[361815] = {
["encounterName"] = "Anduin Wrynn",
["source"] = "Anduin Wrynn",
["encounterID"] = 2546,
["event"] = "SPELL_CAST_START",
["npcID"] = 181954,
},
[79964] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jorgensen",
["npcID"] = 43305,
},
[41032] = {
["encounterName"] = "Illidan Stormrage",
["source"] = "Illidan Stormrage",
["encounterID"] = 609,
["event"] = "SPELL_CAST_START",
["npcID"] = 22917,
},
[155327] = {
["encounterName"] = "Soulbinder Nyami",
["source"] = "Soulbinder Nyami",
["encounterID"] = 1685,
["event"] = "SPELL_CAST_START",
["npcID"] = 76177,
},
[213688] = {
["source"] = "Fel Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 107024,
},
[149184] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[308575] = {
["source"] = "Fallen Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 158146,
},
[13321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Felhound Manastalker",
["npcID"] = 17401,
},
[271716] = {
["source"] = "Infused Bedrock",
["event"] = "SPELL_CAST_START",
["npcID"] = 137906,
},
[396629] = {
["event"] = "SPELL_CAST_START",
["source"] = "Territorial Coastling",
["npcID"] = 193163,
},
[398677] = {
["source"] = "Irontide Cutthroat",
["event"] = "SPELL_CAST_START",
["npcID"] = 200849,
},
[264150] = {
["source"] = "Thornguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 131858,
},
[427346] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[413012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Additive",
["npcID"] = 205671,
},
[285040] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Ire of the Deep",
["encounterID"] = 2280,
["event"] = "SPELL_CAST_START",
["npcID"] = 146736,
},
[79939] = {
["source"] = "Blackrock Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 43535,
},
[202634] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimhorn the Enslaver",
["npcID"] = 102566,
},
[413013] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[369110] = {
["encounterName"] = "Emberon",
["source"] = "Emberon",
["encounterID"] = 2558,
["event"] = "SPELL_CAST_START",
["npcID"] = 184422,
},
[425300] = {
["isChanneled"] = true,
["source"] = "Zaqali Flamemancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 210170,
},
[312674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Necromantic Scourer",
["npcID"] = 161388,
},
[149186] = {
["source"] = "Grom'kar Grunt",
["event"] = "SPELL_CAST_START",
["npcID"] = 82047,
},
[96346] = {
["encounterName"] = "Zanzil",
["source"] = "Zanzil",
["encounterID"] = 1181,
["event"] = "SPELL_CAST_START",
["npcID"] = 52053,
},
[27634] = {
["encounterName"] = "Priestess Delrissa",
["source"] = "Garaxxas",
["encounterID"] = 1895,
["event"] = "SPELL_CAST_START",
["npcID"] = 24555,
},
[419158] = {
["source"] = "Invading Infernal",
["event"] = "SPELL_CAST_START",
["npcID"] = 206765,
},
[273768] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Mender",
["npcID"] = 154499,
},
[398681] = {
["source"] = "Frigid Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 200623,
},
[419229] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[197745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Coilskar Sea-Caller",
["npcID"] = 96884,
},
[149187] = {
["source"] = "Dragonmaw Tidal Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 72367,
},
[390940] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[392539] = {
["source"] = "Awakened Terrasentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 197801,
},
[59160] = {
["source"] = "Stormforged Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 28582,
},
[273770] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wastewander Mender",
["npcID"] = 154499,
},
[114021] = {
["encounterName"] = "Houndmaster Braun",
["source"] = "Houndmaster Braun",
["npcID"] = 59303,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1422,
},
[427638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nuoberon",
["npcID"] = 209113,
},
[17287] = {
["source"] = "Bloodwarder Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 19633,
},
[331108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbleblood",
["npcID"] = 162727,
},
[423257] = {
["source"] = "Druid of the Moon",
["event"] = "SPELL_CAST_START",
["npcID"] = 210686,
},
[147702] = {
["source"] = "Burning Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 72895,
},
[312679] = {
["isChanneled"] = true,
["source"] = "Tidal Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 153910,
},
[101223] = {
["encounterName"] = "Alysrazor",
["source"] = "Blazing Talon Initiate",
["npcID"] = 53369,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1206,
},
[382303] = {
["encounterName"] = "Bromach",
["source"] = "Bromach",
["encounterID"] = 2556,
["event"] = "SPELL_CAST_START",
["npcID"] = 184018,
},
[384351] = {
["encounterName"] = "Watcher Irideus",
["source"] = "Watcher Irideus",
["encounterID"] = 2615,
["event"] = "SPELL_CAST_START",
["npcID"] = 189719,
},
[312680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Dominator",
["npcID"] = 160550,
},
[173762] = {
["source"] = "Malkor",
["event"] = "SPELL_CAST_START",
["npcID"] = 83452,
},
[423259] = {
["source"] = "Wildfire Blazekin",
["event"] = "SPELL_CAST_START",
["npcID"] = 210685,
},
[268306] = {
["encounterName"] = "Lord and Lady Waycrest",
["source"] = "Lady Waycrest",
["encounterID"] = 2116,
["event"] = "SPELL_CAST_START",
["npcID"] = 131545,
},
[112998] = {
["source"] = "Residual Hatred",
["event"] = "SPELL_CAST_START",
["npcID"] = 58803,
},
[284446] = {
["encounterName"] = "King Rastakhan",
["source"] = "Bwonsamdi",
["encounterID"] = 2272,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 145644,
},
[114022] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Treasurer",
["npcID"] = 59241,
},
[384353] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[427356] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[82794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[116070] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gormali Raider",
["npcID"] = 54702,
},
[408927] = {
["source"] = "Animated Contaminant",
["event"] = "SPELL_CAST_START",
["npcID"] = 202270,
},
[427357] = {
["source"] = "Devout Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 206697,
},
[136904] = {
["encounterName"] = "Council of Elders",
["source"] = "Frost King Malakk",
["npcID"] = 69131,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1570,
},
[260793] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[336037] = {
["source"] = "Mawsworn Oppressor",
["event"] = "SPELL_CAST_START",
["npcID"] = 181186,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 2024,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[413024] = {
["event"] = "SPELL_CAST_START",
["source"] = "Valow, Timesworn Keeper",
["npcID"] = 201222,
},
[199361] = {
["encounterName"] = "Fenryr",
["source"] = "Valarjar Trapper",
["encounterID"] = 1807,
["event"] = "SPELL_CAST_START",
["npcID"] = 96934,
},
[282411] = {
["encounterName"] = "Conclave of the Chosen",
["source"] = "Akunda's Aspect",
["encounterID"] = 2268,
["event"] = "SPELL_CAST_START",
["npcID"] = 144941,
},
[427359] = {
["isChanneled"] = true,
["source"] = "Arathi Footman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 206705,
},
[194242] = {
["source"] = "Witchwood Hag",
["event"] = "SPELL_CAST_START",
["npcID"] = 95310,
},
[226269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Spirit",
["npcID"] = 113699,
},
[18399] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[410978] = {
["encounterName"] = "Echo of Neltharion",
["event"] = "SPELL_CAST_START",
["source"] = "Djaradin Dragonhunter",
["npcID"] = 202108,
},
[430218] = {
["event"] = "SPELL_CAST_START",
["source"] = "Inquisitor Fairbell",
["npcID"] = 211930,
},
[398692] = {
["source"] = "Glakis, Winter's Wrath",
["event"] = "SPELL_CAST_START",
["npcID"] = 199502,
},
[428471] = {
["encounterName"] = "Nymue, Weaver of the Cycle",
["source"] = "Manifested Dream",
["npcID"] = 213143,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2708,
},
[83901] = {
["source"] = "King Mukla",
["event"] = "SPELL_CAST_START",
["npcID"] = 1559,
},
[396645] = {
["source"] = "Elusive Elder Rockfang",
["event"] = "SPELL_CAST_START",
["npcID"] = 194085,
},
[39647] = {
["source"] = "Illidari Nightlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[126822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Sentinel",
["npcID"] = 70334,
},
[394598] = {
["source"] = "Shade of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 187559,
},
[396646] = {
["source"] = "Loamas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199030,
},
[368379] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Engulfer",
["npcID"] = 183516,
},
[376169] = {
["source"] = "High Thaumaturge Fural",
["event"] = "SPELL_CAST_START",
["npcID"] = 189905,
},
[209602] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[300525] = {
["source"] = "Scrapbone Trashtosser",
["event"] = "SPELL_CAST_START",
["npcID"] = 150142,
},
[406886] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2668,
},
[376170] = {
["encounterName"] = "Decatriarch Wratheye",
["source"] = "Decatriarch Wratheye",
["encounterID"] = 2569,
["event"] = "SPELL_CAST_START",
["npcID"] = 186121,
},
[312690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anq'uri the Titanic",
["npcID"] = 155703,
},
[284276] = {
["encounterName"] = "King Rastakhan",
["source"] = "King Rastakhan",
["encounterID"] = 2272,
["event"] = "SPELL_CAST_START",
["npcID"] = 145616,
},
[174791] = {
["source"] = "Ironwing Flamespitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 86373,
},
[376171] = {
["source"] = "Primalist Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 190377,
},
[386410] = {
["encounterName"] = "Raszageth the Storm-Eater",
["source"] = "Raszageth",
["encounterID"] = 2607,
["event"] = "SPELL_CAST_START",
["npcID"] = 189492,
},
[360863] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dominated Worldbreaker",
["npcID"] = 183249,
},
[434288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[395017] = {
["source"] = "Massive Magmashell",
["event"] = "SPELL_CAST_START",
["npcID"] = 193152,
},
[402793] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[322931] = {
["source"] = "Predatory Bloodtusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 158752,
},
[174792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ironwing Flamespitter",
["npcID"] = 86373,
},
[46036] = {
["source"] = "Sunblade Magister",
["event"] = "SPELL_CAST_START",
["npcID"] = 24685,
},
[148232] = {
["encounterName"] = "Galakras",
["source"] = "Lor'themar Theron",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72560,
},
[260292] = {
["encounterName"] = "Cragmaw the Infested",
["source"] = "Cragmaw the Infested",
["encounterID"] = 2118,
["event"] = "SPELL_CAST_START",
["npcID"] = 131817,
},
[374126] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plains Bull",
["npcID"] = 195261,
},
[384365] = {
["source"] = "Nokhud Plainstomper",
["event"] = "SPELL_CAST_START",
["npcID"] = 191847,
},
[378222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cascade Swog",
["npcID"] = 191561,
},
[15472] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowmoon Warlock",
["npcID"] = 17371,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flamecaller",
["npcID"] = 38926,
},
[384366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hunting Redbeak",
["npcID"] = 198824,
},
[198833] = {
["encounterName"] = "Lord Kur'talos Ravencrest",
["source"] = "Latosius",
["npcID"] = 98970,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1835,
},
[200757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Volatile Minion",
["npcID"] = 96280,
},
[86574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Behemoth",
["npcID"] = 42475,
},
[304822] = {
["source"] = "Deepwater Maw",
["event"] = "SPELL_CAST_START",
["npcID"] = 151569,
},
[360213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defective Colossus",
["npcID"] = 181839,
},
[157388] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderlord Looter",
["npcID"] = 78365,
},
[138467] = {
["encounterName"] = "Durumu the Forgotten",
["source"] = "Appraising Eye",
["npcID"] = 67858,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1572,
},
[166778] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terokk",
["npcID"] = 82820,
},
[39126] = {
["source"] = "Sunseeker Botanist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18422,
},
[372082] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[55811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iron Sentinel",
["npcID"] = 29984,
},
[196296] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwake Hydra",
["npcID"] = 91792,
},
[292903] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Guard",
["npcID"] = 150958,
},
[171873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodmane Earthbinder",
["npcID"] = 85897,
},
[444820] = {
["source"] = "Void Elf Riftwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 215475,
},
[392561] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[319910] = {
["source"] = "Ravenous Etherwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 158771,
},
[278444] = {
["source"] = "Devouring Maggot",
["event"] = "SPELL_CAST_START",
["npcID"] = 134024,
},
[158549] = {
["source"] = "Rustwing Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 153293,
},
[394838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Henlare",
["npcID"] = 193229,
},
[394922] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Braekkas",
["npcID"] = 196855,
},
[429422] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[166605] = {
["source"] = "Frenzied Forager",
["event"] = "SPELL_CAST_START",
["npcID"] = 83449,
},
[360737] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dematerializing Worldeater",
["npcID"] = 181116,
},
[378229] = {
["encounterName"] = "Hackclaw's War-Band",
["source"] = "Gashtooth",
["npcID"] = 186124,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2570,
},
[136913] = {
["encounterName"] = "Lei Shen",
["source"] = "Lei Shen",
["npcID"] = 68397,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1579,
},
[106933] = {
["encounterName"] = "Striker Ga'dok",
["source"] = "Striker Ga'dok",
["encounterID"] = 1405,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56589,
},
[408946] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Preserver",
["npcID"] = 198870,
},
[427376] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilgoblin Hunter",
["npcID"] = 40935,
},
[372087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defier Draghar",
["npcID"] = 187897,
},
[374135] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pinehoof Bull",
["npcID"] = 193595,
},
[392565] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Quarry Stonebreaker",
["npcID"] = 197831,
},
[204677] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard Firecaller",
["npcID"] = 114399,
},
[101907] = {
["event"] = "SPELL_CAST_START",
["source"] = "Strange Snowman",
["npcID"] = 54523,
},
[80382] = {
["source"] = "Bilgewater Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 67871,
},
[208929] = {
["encounterName"] = "Il'gynoth, The Heart of Corruption",
["source"] = "Corruptor Tentacle",
["npcID"] = 105383,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1873,
},
[299167] = {
["source"] = "Mechagonian Nullifier",
["event"] = "SPELL_CAST_START",
["npcID"] = 151124,
},
[413044] = {
["source"] = "Grotesque Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 138187,
},
[374137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Parched Broadhoof Bull",
["npcID"] = 194352,
},
[257732] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Enforcer",
["npcID"] = 129602,
},
[270595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Savage Fathomjaw",
["npcID"] = 130916,
},
[429427] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursedforge Stoneshaper",
["npcID"] = 214066,
},
[41426] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[376186] = {
["source"] = "Overseer Lahar",
["event"] = "SPELL_CAST_START",
["npcID"] = 189235,
},
[402807] = {
["source"] = "Glittering Shard Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 202326,
},
[429428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Burst Totem",
["npcID"] = 214287,
},
[398712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nimbulatus, Storm's Wrath",
["npcID"] = 199667,
},
[83824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Geologist",
["npcID"] = 1096,
},
[410999] = {
["event"] = "SPELL_CAST_START",
["source"] = "Armored Mistral",
["npcID"] = 45915,
},
[396665] = {
["source"] = "Magmas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199027,
},
[395653] = {
["source"] = "Matriarch Remalla",
["event"] = "SPELL_CAST_START",
["npcID"] = 193246,
},
[204492] = {
["source"] = "Jandvik Bonepiercer",
["event"] = "SPELL_CAST_START",
["npcID"] = 100948,
},
[427382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Engine Speaker",
["npcID"] = 212764,
},
[372093] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Blister",
["npcID"] = 197413,
},
[128049] = {
["source"] = "Spectral Pirate",
["event"] = "SPELL_CAST_START",
["npcID"] = 71987,
},
[359960] = {
["encounterName"] = "Lords of Dread",
["source"] = "Mal'Ganis",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 181398,
},
[411001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lurking Tempest",
["npcID"] = 45704,
},
[233421] = {
["source"] = "Algerson Bodyguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 149036,
},
[299394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tisiphon",
["npcID"] = 157468,
},
[376190] = {
["isChanneled"] = true,
["source"] = "Brackenhide Rotflinger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 186362,
},
[123244] = {
["encounterName"] = "Lei Shi",
["source"] = "Lei Shi",
["npcID"] = 62983,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1506,
},
[166766] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Plunderer",
["npcID"] = 181061,
},
[300424] = {
["source"] = "Scrapbone Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 150160,
},
[83825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venture Co. Shredder",
["npcID"] = 4260,
},
[395648] = {
["source"] = "Sogglmoggl",
["event"] = "SPELL_CAST_START",
["npcID"] = 188859,
},
[41173] = {
["isChanneled"] = true,
["source"] = "Illidari Heartseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 23339,
},
[170887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethek Supplicant",
["npcID"] = 85570,
},
[392574] = {
["source"] = "High Channeler Ryvati",
["event"] = "SPELL_CAST_START",
["npcID"] = 197535,
},
[394622] = {
["source"] = "Gnarls",
["event"] = "SPELL_CAST_START",
["npcID"] = 197354,
},
[298945] = {
["source"] = "Great Mua'kin",
["event"] = "SPELL_CAST_START",
["npcID"] = 169520,
},
[314843] = {
["encounterName"] = "N'Zoth the Corruptor",
["source"] = "N'Zoth the Corruptor",
["encounterID"] = 2344,
["event"] = "SPELL_CAST_START",
["npcID"] = 158041,
},
[257736] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Stormcaller",
["npcID"] = 126919,
},
[221059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gelatinized Decay",
["npcID"] = 111004,
},
[129617] = {
["source"] = "Duyi Edgewater",
["event"] = "SPELL_CAST_START",
["npcID"] = 65745,
},
[65210] = {
["encounterName"] = "Yogg-Saron",
["source"] = "Mimiron",
["encounterID"] = 1143,
["event"] = "SPELL_CAST_START",
["npcID"] = 33412,
},
[392576] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempest Channeler",
["npcID"] = 198047,
},
[139991] = {
["encounterName"] = "Megaera",
["source"] = "Arcane Head",
["npcID"] = 70248,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1578,
},
[7967] = {
["encounterName"] = "Mutanus the Devourer",
["source"] = "Mutanus the Devourer",
["npcID"] = 3654,
["event"] = "SPELL_CAST_START",
["encounterID"] = 592,
},
[406911] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sundered Champion",
["npcID"] = 201288,
},
[408959] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2682,
},
[132955] = {
["source"] = "Shieldwall Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 67317,
},
[389496] = {
["source"] = "Liskanoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 193533,
},
[417241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gill'dan",
["npcID"] = 204808,
},
[302477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Void Haunt",
["npcID"] = 151754,
},
[290568] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dazari Worshipper",
["npcID"] = 149569,
},
[59835] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["encounterID"] = 1986,
["event"] = "SPELL_CAST_START",
["npcID"] = 28923,
},
[390531] = {
["event"] = "SPELL_CAST_START",
["source"] = "Uranto the Swift",
["npcID"] = 191103,
},
[392579] = {
["source"] = "Quarry Stonebreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 197831,
},
[370054] = {
["source"] = "Battleseared Magmatusk",
["event"] = "SPELL_CAST_START",
["npcID"] = 196772,
},
[396675] = {
["source"] = "Sundered Flame Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 203682,
},
[434269] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daetan Swiftplume",
["npcID"] = 218738,
},
[130925] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ga'trul",
["npcID"] = 66276,
},
[37054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pearlfin Watershaper",
["npcID"] = 59361,
},
[427760] = {
["source"] = "Envoy of Winter",
["event"] = "SPELL_CAST_START",
["npcID"] = 209929,
},
[415106] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 198997,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[257739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blacktooth Scrapper",
["npcID"] = 129529,
},
[193235] = {
["encounterName"] = "Hymdall",
["source"] = "Hymdall",
["encounterID"] = 1805,
["event"] = "SPELL_CAST_START",
["npcID"] = 94960,
},
[413059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Canister",
["npcID"] = 206019,
},
[365961] = {
["source"] = "Bound Realmbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 183416,
},
[376200] = {
["source"] = "Forgewrought Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 194816,
},
[411012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Young Storm Dragon",
["npcID"] = 45919,
},
[413060] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fire Canister",
["npcID"] = 206022,
},
[300434] = {
["source"] = "Scrapbone Bully",
["event"] = "SPELL_CAST_START",
["npcID"] = 150160,
},
[134058] = {
["source"] = "Bilgewater Blastgineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 67884,
},
[144090] = {
["encounterName"] = "Kor'kron Dark Shaman",
["source"] = "Earthbreaker Haromm",
["encounterID"] = 1606,
["event"] = "SPELL_CAST_START",
["npcID"] = 71859,
},
[107044] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Aqua Dancer",
["npcID"] = 56865,
},
[195284] = {
["event"] = "SPELL_CAST_START",
["source"] = "Restless Tides",
["npcID"] = 97173,
},
[122735] = {
["encounterName"] = "Garalon",
["source"] = "Garalon",
["npcID"] = 62164,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1463,
},
[41150] = {
["source"] = "Illidari Nightlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 22855,
},
[372107] = {
["encounterName"] = "Kokia Blazehoof",
["source"] = "Kokia Blazehoof",
["npcID"] = 189232,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2606,
},
[300436] = {
["source"] = "Scrapbone Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 150146,
},
[200404] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["encounterID"] = 1793,
["event"] = "SPELL_CAST_START",
["npcID"] = 91007,
},
[152282] = {
["source"] = "Kraulshaped Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 75384,
},
[114149] = {
["source"] = "Chief Gukgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 61546,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 2007,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[400777] = {
["encounterName"] = "Rashok, the Elder",
["source"] = "Rashok",
["npcID"] = 201320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2680,
},
[263578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnean Battlemage",
["npcID"] = 134192,
},
[132829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Cannoneer",
["npcID"] = 67360,
},
[163689] = {
["encounterName"] = "Grimrail Enforcers",
["source"] = "Ahri'ok Dugru",
["encounterID"] = 1748,
["event"] = "SPELL_CAST_START",
["npcID"] = 80816,
},
[408969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Monstrous Mud",
["npcID"] = 192519,
},
[389477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rimebound Sorcerer",
["npcID"] = 200758,
},
[169689] = {
["source"] = "Diving Chakram Spinner",
["event"] = "SPELL_CAST_START",
["npcID"] = 76116,
},
[374158] = {
["source"] = "Mature Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 191696,
},
[408970] = {
["source"] = "Sundered Preserver",
["event"] = "SPELL_CAST_START",
["npcID"] = 205735,
},
[41472] = {
["encounterName"] = "The Illidari Council",
["source"] = "Lady Malande",
["encounterID"] = 608,
["event"] = "SPELL_CAST_START",
["npcID"] = 22951,
},
[121876] = {
["encounterName"] = "Wind Lord Mel'jarak",
["source"] = "Sra'thik Amber-Trapper",
["encounterID"] = 1498,
["event"] = "SPELL_CAST_START",
["npcID"] = 62405,
},
[15537] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Necromancer",
["npcID"] = 28200,
},
[389473] = {
["encounterName"] = "The Primal Council",
["source"] = "Lurking Lunker",
["encounterID"] = 2590,
["event"] = "SPELL_CAST_START",
["npcID"] = 196946,
},
[168666] = {
["encounterName"] = "Yalnu",
["source"] = "Lady Baihu",
["npcID"] = 84358,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1756,
},
[210645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withered Fiend",
["npcID"] = 98733,
},
[393259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Inferno",
["npcID"] = 189043,
},
[376208] = {
["encounterName"] = "Chrono-Lord Deios",
["source"] = "Chrono-Lord Deios",
["encounterID"] = 2559,
["event"] = "SPELL_CAST_START",
["npcID"] = 184125,
},
[419211] = {
["source"] = "Felbark the Defiler",
["event"] = "SPELL_CAST_START",
["npcID"] = 207094,
},
[222932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Gorroc",
["npcID"] = 111856,
},
[144473] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chi-Ji",
["npcID"] = 71952,
},
[394881] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jumping Spiderling",
["npcID"] = 198502,
},
[111010] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Zealot",
["npcID"] = 58590,
},
[421260] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aurostor",
["npcID"] = 209574,
},
[147647] = {
["source"] = "Harbinger of Y'Shaarj",
["event"] = "SPELL_CAST_START",
["npcID"] = 73452,
},
[34616] = {
["source"] = "Nethervine Inciter",
["event"] = "SPELL_CAST_START",
["npcID"] = 19511,
},
[304539] = {
["source"] = "Expedition Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 152147,
},
[399701] = {
["event"] = "SPELL_CAST_START",
["source"] = "Swooping Flayer",
["npcID"] = 199809,
},
[110117] = {
["source"] = "Ethereal Sha",
["event"] = "SPELL_CAST_START",
["npcID"] = 65414,
},
[408975] = {
["source"] = "Sundered Edgelord",
["event"] = "SPELL_CAST_START",
["npcID"] = 198873,
},
[345495] = {
["source"] = "Frothing Pustule",
["event"] = "SPELL_CAST_START",
["npcID"] = 175519,
},
[396689] = {
["source"] = "Worldcarver A'tir",
["event"] = "SPELL_CAST_START",
["npcID"] = 186859,
},
[372568] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Primal Terrasentry",
["npcID"] = 188067,
},
[392594] = {
["event"] = "SPELL_CAST_START",
["source"] = "Meatgrinder Sotok",
["npcID"] = 186777,
},
[35008] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["npcID"] = 17991,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1941,
},
[115761] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tian Pupil",
["npcID"] = 54944,
},
[139231] = {
["source"] = "Zandalari Storm-Caller",
["event"] = "SPELL_CAST_START",
["npcID"] = 69390,
},
[302494] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grip of Horror",
["npcID"] = 151872,
},
[387186] = {
["source"] = "Infinite Ravager",
["event"] = "SPELL_CAST_START",
["npcID"] = 218346,
},
[319294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torgok",
["npcID"] = 162817,
},
[390548] = {
["encounterName"] = "Kurog Grimtotem",
["source"] = "Kurog Grimtotem",
["npcID"] = 184986,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2605,
},
[163550] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Nitrogg Thundertower",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 79545,
},
[147552] = {
["encounterName"] = "Galakras",
["source"] = "Dragonmaw Flameslinger",
["encounterID"] = 1622,
["event"] = "SPELL_CAST_START",
["npcID"] = 72353,
},
[147612] = {
["isChanneled"] = true,
["source"] = "Cursed Hozen Swabby",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71920,
},
[418059] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Anduin Lothar",
["npcID"] = 203679,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[377166] = {
["encounterName"] = "Terros",
["source"] = "Terros",
["npcID"] = 190496,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2639,
},
[116226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slingtail Stickypaw",
["npcID"] = 55110,
},
[443921] = {
["source"] = "Shadowguard Ethereal",
["event"] = "SPELL_CAST_START",
["npcID"] = 221305,
},
[418119] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aqir Destroyer",
["npcID"] = 207912,
},
[342317] = {
["source"] = "Cartel Xy Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 181005,
},
[264520] = {
["source"] = "Maddened Survivalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 131850,
},
[126973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogu'shan Arcanist",
["npcID"] = 64063,
},
[409359] = {
["encounterName"] = "Assault of the Zaqali",
["source"] = "Warlord Kagni",
["npcID"] = 199659,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2682,
},
[395433] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Council Stormcaller",
["npcID"] = 198878,
},
[296355] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[114185] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[415125] = {
["encounterName"] = "Blight of Galakrond",
["source"] = "Blight of Galakrond",
["npcID"] = 207639,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 2668,
},
[114548] = {
["encounterName"] = "Yan-Zhu the Uncasked",
["source"] = "Yan-Zhu the Uncasked",
["encounterID"] = 1414,
["event"] = "SPELL_CAST_START",
["npcID"] = 59479,
},
[419221] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[173791] = {
["source"] = "Tangleheart Cultivator",
["event"] = "SPELL_CAST_START",
["npcID"] = 82322,
},
[308643] = {
["source"] = "Haywire Clockwork Rocket Bot",
["event"] = "SPELL_CAST_START",
["npcID"] = 158279,
},
[137077] = {
["isChanneled"] = true,
["source"] = "Zandalari Spear-Shaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 69388,
},
[116157] = {
["encounterName"] = "Feng the Accursed",
["source"] = "Feng the Accursed",
["encounterID"] = 1390,
["event"] = "SPELL_CAST_START",
["npcID"] = 60009,
},
[15607] = {
["source"] = "Rok'nah Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 65494,
},
[390554] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Inferna the Bound",
["npcID"] = 186735,
},
[340294] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bubbleblood",
["npcID"] = 162727,
},
[419223] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'gall",
["npcID"] = 208212,
},
[118312] = {
["encounterName"] = "Protectors of the Endless",
["source"] = "Elder Asani",
["encounterID"] = 1409,
["event"] = "SPELL_CAST_START",
["npcID"] = 60586,
},
[308645] = {
["source"] = "Reprogrammed Warbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 158286,
},
[425873] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lingering Torment",
["npcID"] = 209564,
},
[209628] = {
["encounterName"] = "Advisor Melandrus",
["source"] = "Advisor Melandrus",
["encounterID"] = 1870,
["event"] = "SPELL_CAST_START",
["npcID"] = 104218,
},
[153315] = {
["encounterName"] = "Ranjit",
["source"] = "Ranjit",
["encounterID"] = 1698,
["event"] = "SPELL_CAST_START",
["npcID"] = 75964,
},
[275882] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ettin Earthcrusher",
["npcID"] = 136421,
},
[449941] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[394652] = {
["source"] = "Infernum",
["event"] = "SPELL_CAST_START",
["npcID"] = 193648,
},
[222939] = {
["event"] = "SPELL_CAST_START",
["source"] = "Guardian Gorroc",
["npcID"] = 111856,
},
[106514] = {
["isChanneled"] = true,
["source"] = "Shan Jitong",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 56596,
},
[449942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emperor Pitfang",
["npcID"] = 219265,
},
[427417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[355945] = {
["source"] = "Explosive Mawsphere",
["event"] = "SPELL_CAST_START",
["npcID"] = 179940,
},
[398749] = {
["event"] = "SPELL_CAST_START",
["source"] = "Irontide Bulwark",
["npcID"] = 200850,
},
[196402] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprock Wormtamer",
["npcID"] = 97999,
},
[125480] = {
["encounterName"] = "Amber-Shaper Un'sok",
["source"] = "Amber Searsting",
["npcID"] = 63569,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1499,
},
[372129] = {
["encounterName"] = "Sennarth, The Cold Breath",
["source"] = "Sennarth",
["encounterID"] = 2592,
["event"] = "SPELL_CAST_START",
["npcID"] = 187967,
},
[146605] = {
["source"] = "Kovok",
["event"] = "SPELL_CAST_START",
["npcID"] = 72927,
},
[384416] = {
["encounterName"] = "Gutshot",
["source"] = "Gutshot",
["encounterID"] = 2567,
["event"] = "SPELL_CAST_START",
["npcID"] = 186116,
},
[160943] = {
["encounterName"] = "Nitrogg Thundertower",
["source"] = "Grom'kar Gunner",
["encounterID"] = 1732,
["event"] = "SPELL_CAST_START",
["npcID"] = 77483,
},
[258864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashvane Marine",
["npcID"] = 130027,
},
[390560] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[140279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shan'ze Animator",
["npcID"] = 70069,
},
[115062] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hozen Ravager",
["npcID"] = 57119,
},
[400889] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rampant Tide",
["npcID"] = 201463,
},
[12466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Sorcerer",
["npcID"] = 18499,
},
[126346] = {
["source"] = "Rangari Jonaa",
["event"] = "SPELL_CAST_START",
["npcID"] = 86663,
},
[296365] = {
["event"] = "SPELL_CAST_START",
["source"] = "Subjugator Klontzas",
["npcID"] = 152612,
},
[282031] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Mestrah",
["npcID"] = 144690,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["encounterID"] = 2006,
["event"] = "SPELL_CAST_START",
["npcID"] = 36497,
},
[284106] = {
["encounterName"] = "Stormwall Blockade",
["source"] = "Sister Katherine",
["npcID"] = 146251,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2280,
},
[35010] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Mennu the Betrayer",
["npcID"] = 17941,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1939,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["encounterID"] = 1978,
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[125865] = {
["source"] = "Zar'thik Augurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 64454,
},
[417184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[114683] = {
["source"] = "Rok'nah Hag",
["event"] = "SPELL_CAST_START",
["npcID"] = 64734,
},
[161510] = {
["source"] = "Mandrakor",
["event"] = "SPELL_CAST_START",
["npcID"] = 84406,
},
[139336] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unblinking Eye",
["npcID"] = 70238,
},
[417185] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator Kintara",
["npcID"] = 207596,
},
[263604] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunted Servitor",
["npcID"] = 137587,
},
[165606] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sol-Shaper Krashyx",
["npcID"] = 82285,
},
[121282] = {
["encounterName"] = "Wing Leader Ner'onok",
["source"] = "Wing Leader Ner'onok",
["encounterID"] = 1464,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 62205,
},
[200418] = {
["encounterName"] = "Dargrul the Underking",
["source"] = "Dargrul",
["npcID"] = 91007,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1793,
},
[41184] = {
["source"] = "Ashtongue Stormcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 22846,
},
[396709] = {
["source"] = "Servant of Kruul",
["event"] = "SPELL_CAST_START",
["npcID"] = 206861,
},
[139327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Focused Eye",
["npcID"] = 70249,
},
[356088] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mawsworn Myrmidon",
["npcID"] = 183131,
},
[110968] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Purifier",
["npcID"] = 58569,
},
[282036] = {
["encounterName"] = "Jadefire Masters",
["source"] = "Manceroy Flamefist",
["npcID"] = 144693,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2266,
},
[431674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Battlefront Hauler",
["npcID"] = 223789,
},
[257756] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bilge Rat Buccaneer",
["npcID"] = 129527,
},
[166981] = {
["event"] = "SPELL_CAST_START",
["source"] = "Invading Warsinger",
["npcID"] = 79753,
},
[314801] = {
["source"] = "Agustus Moulaine",
["event"] = "SPELL_CAST_START",
["npcID"] = 157700,
},
[333231] = {
["encounterName"] = "An Affront of Challengers",
["source"] = "Sathel the Accursed",
["npcID"] = 164461,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2391,
},
[393465] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stalwart Broodwarden",
["npcID"] = 198263,
},
[378282] = {
["source"] = "Qalashi Thaumaturge",
["event"] = "SPELL_CAST_START",
["npcID"] = 192788,
},
[41410] = {
["encounterName"] = "Reliquary of Souls",
["source"] = "Essence of Desire",
["encounterID"] = 606,
["event"] = "SPELL_CAST_START",
["npcID"] = 23419,
},
[255041] = {
["event"] = "SPELL_CAST_START",
["source"] = "Feasting Skyscreamer",
["npcID"] = 128434,
},
[175847] = {
["source"] = "Y'kish the Deceiver",
["event"] = "SPELL_CAST_START",
["npcID"] = 81266,
},
[152298] = {
["source"] = "Vengeful Magma Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 75820,
},
[314803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Amahtet",
["npcID"] = 159320,
},
[143424] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Sun Tenderheart",
["encounterID"] = 1598,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 71480,
},
[143427] = {
["source"] = "Kor'kron Ironblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 71770,
},
[191527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blade Dancer Illianna",
["npcID"] = 96657,
},
[119358] = {
["encounterName"] = "Elegon",
["source"] = "Elegon",
["npcID"] = 60410,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1500,
},
[144396] = {
["encounterName"] = "Fallen Protectors",
["source"] = "Rook Stonetoe",
["event"] = "SPELL_CAST_START",
["npcID"] = 71475,
},
[141381] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Blasthammer",
["npcID"] = 70893,
},
[113017] = {
["encounterName"] = "Sha of Doubt",
["source"] = "Zao Sunseeker",
["encounterID"] = 1439,
["event"] = "SPELL_CAST_START",
["npcID"] = 58826,
},
[146536] = {
["source"] = "Kor'thik Honor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 72954,
},
[447909] = {
["source"] = "Master Machinist Dunstan",
["event"] = "SPELL_CAST_START",
["npcID"] = 217353,
},
[359856] = {
["encounterName"] = "The Jailer",
["source"] = "The Jailer",
["encounterID"] = 2537,
["event"] = "SPELL_CAST_START",
["npcID"] = 180990,
},
[115065] = {
["event"] = "SPELL_CAST_START",
["source"] = "Slingtail Mudseer",
["npcID"] = 55193,
},
[106942] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Destroying Sha",
["npcID"] = 56765,
},
[456101] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reconstructed Skardyn",
["npcID"] = 219245,
},
[288927] = {
["source"] = "Vessel of Bwonsamdi",
["event"] = "SPELL_CAST_START",
["npcID"] = 148673,
},
[143210] = {
["encounterName"] = "Fallen Protectors",
["source"] = "He Softfoot",
["event"] = "SPELL_CAST_START",
["npcID"] = 71479,
},
[396717] = {
["source"] = "Cyclas",
["event"] = "SPELL_CAST_START",
["npcID"] = 199029,
},
[308664] = {
["source"] = "Craggle Wobbletop",
["event"] = "SPELL_CAST_START",
["npcID"] = 158284,
},
[450509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Captain",
["npcID"] = 216584,
},
[272272] = {
["source"] = "Ravenous Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 169499,
},
[148518] = {
["encounterName"] = "Spoils of Pandaria",
["source"] = "Zu Yin",
["encounterID"] = 1594,
["event"] = "SPELL_CAST_START",
["npcID"] = 73724,
},
[445935] = {
["source"] = "Bomb",
["event"] = "SPELL_CAST_START",
["npcID"] = 222265,
},
[449960] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefin Carver",
["npcID"] = 215652,
},
[120222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Seething Sha",
["npcID"] = 61610,
},
[421292] = {
["encounterName"] = "Council of Dreams",
["source"] = "Aerwynn",
["encounterID"] = 2728,
["event"] = "SPELL_CAST_START",
["npcID"] = 208365,
},
[143343] = {
["encounterName"] = "Thok the Bloodthirsty",
["source"] = "Thok the Bloodthirsty",
["encounterID"] = 1599,
["event"] = "SPELL_CAST_START",
["npcID"] = 71529,
},
[425388] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[452009] = {
["source"] = "Slag Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 212885,
},
[372147] = {
["source"] = "Balara",
["event"] = "SPELL_CAST_START",
["npcID"] = 193457,
},
[145216] = {
["encounterName"] = "Norushen",
["source"] = "Amalgam of Corruption",
["encounterID"] = 1624,
["event"] = "SPELL_CAST_START",
["npcID"] = 72276,
},
[114183] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Scholar",
["npcID"] = 59372,
},
[450176] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerubian Slasher",
["npcID"] = 208243,
},
[79933] = {
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Utroka the Keymistress",
["npcID"] = 43350,
},
[316859] = {
["source"] = "Stoneborn Recruit",
["event"] = "SPELL_CAST_START",
["npcID"] = 170042,
},
[142315] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Xaril the Poisoned Mind",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71157,
},
[456910] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disturbed Earthgorger",
["npcID"] = 218393,
},
[141391] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lieutenant Blasthammer",
["npcID"] = 70893,
},
[398770] = {
["source"] = "Akiormi",
["event"] = "SPELL_CAST_START",
["npcID"] = 200702,
},
[409009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[119875] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["npcID"] = 61485,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1447,
},
[413105] = {
["encounterName"] = "Chronikar",
["source"] = "Chronikar",
["npcID"] = 198995,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2666,
},
[406962] = {
["encounterName"] = "Time-Lost Battlefield",
["source"] = "Horde Axe Thrower",
["npcID"] = 203799,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2672,
},
[425392] = {
["source"] = "Flamewaker Infernoguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 210295,
},
[394676] = {
["source"] = "Council Icecaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 198501,
},
[372151] = {
["source"] = "Gutchewer Bear",
["event"] = "SPELL_CAST_START",
["npcID"] = 186284,
},
[432059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Candlelit Ouchpatcher",
["npcID"] = 214252,
},
[142201] = {
["event"] = "SPELL_CAST_START",
["source"] = "Echo of Y'Shaarj",
["npcID"] = 71123,
},
[370104] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonbane Protector",
["npcID"] = 186600,
},
[404916] = {
["encounterName"] = "Morchie",
["source"] = "Morchie",
["npcID"] = 198999,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2671,
},
[147447] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[147185] = {
["source"] = "Aqueous Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 73191,
},
[259187] = {
["encounterName"] = "Yazma",
["source"] = "Yazma",
["npcID"] = 122968,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2087,
},
[388535] = {
["source"] = "Gnawbone Chainchewer",
["event"] = "SPELL_CAST_START",
["npcID"] = 196521,
},
[390583] = {
["source"] = "Norbett",
["event"] = "SPELL_CAST_START",
["npcID"] = 190968,
},
[141428] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonechiller Barafu",
["npcID"] = 70468,
},
[440162] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Stinkcap",
["npcID"] = 212579,
},
[88959] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Adept",
["npcID"] = 45935,
},
[447921] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voltscale Borer",
["npcID"] = 222280,
},
[427869] = {
["encounterName"] = "Void Speaker Eirich",
["source"] = "Void Speaker Eirich",
["npcID"] = 213119,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2883,
},
[427444] = {
["event"] = "SPELL_CAST_START",
["source"] = "Prophet of the Flame",
["npcID"] = 207315,
},
[388537] = {
["encounterName"] = "Vexamus",
["source"] = "Vexamus",
["npcID"] = 194181,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2562,
},
[124283] = {
["encounterName"] = "General Pa'valak",
["source"] = "General Pa'valak",
["encounterID"] = 1447,
["event"] = "SPELL_CAST_START",
["npcID"] = 61485,
},
[425397] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Fiery Treant",
["encounterID"] = 2731,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 208459,
},
[386490] = {
["encounterName"] = "Granyth",
["source"] = "Nokhud Saboteur",
["encounterID"] = 2637,
["event"] = "SPELL_CAST_START",
["npcID"] = 195821,
},
[117628] = {
["encounterName"] = "The Spirit Kings",
["source"] = "Zian of the Endless Shadow",
["npcID"] = 60701,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1436,
},
[146163] = {
["source"] = "Kor'kron Dark Farseer",
["event"] = "SPELL_CAST_START",
["npcID"] = 72770,
},
[409016] = {
["event"] = "SPELL_CAST_START",
["source"] = "Summitshaper Lorac",
["npcID"] = 201522,
},
[288199] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["isChanneled"] = true,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 146409,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["encounterID"] = 1978,
["event"] = "SPELL_CAST_START",
["npcID"] = 29304,
},
[427616] = {
["encounterName"] = "Kyrioss",
["source"] = "Unruly Stormrook",
["encounterID"] = 2816,
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[392635] = {
["source"] = "Kaurdyth",
["event"] = "SPELL_CAST_START",
["npcID"] = 197835,
},
[263627] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 134201,
},
[388540] = {
["event"] = "SPELL_CAST_START",
["source"] = "O'nank Shorescour",
["npcID"] = 193118,
},
[452314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kol Bruncrag",
["npcID"] = 213658,
},
[36805] = {
["encounterName"] = "Kael'thas Sunstrider",
["source"] = "Kael'thas Sunstrider",
["npcID"] = 19622,
["event"] = "SPELL_CAST_START",
["encounterID"] = 733,
},
[205549] = {
["encounterName"] = "Naraxas",
["source"] = "Naraxas",
["encounterID"] = 1792,
["event"] = "SPELL_CAST_START",
["npcID"] = 91005,
},
[431659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Direweb Ritualist",
["npcID"] = 221300,
},
[447926] = {
["event"] = "SPELL_CAST_START",
["source"] = "Voltscale Borer",
["npcID"] = 222280,
},
[417210] = {
["event"] = "SPELL_CAST_START",
["source"] = "Great Glorious Alliance Lieutenant",
["npcID"] = 207581,
},
[417641] = {
["source"] = "Felbolg",
["event"] = "SPELL_CAST_START",
["npcID"] = 206189,
},
[169714] = {
["source"] = "Gnarlroot",
["event"] = "SPELL_CAST_START",
["npcID"] = 81984,
},
[170738] = {
["source"] = "Undermage Kesalon",
["event"] = "SPELL_CAST_START",
["npcID"] = 85496,
},
[440195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wanton Shadow",
["npcID"] = 225338,
},
[417431] = {
["encounterName"] = "Fyrakk the Blazing",
["source"] = "Fyrakk",
["npcID"] = 204931,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2677,
},
[456468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skardyn Husk",
["npcID"] = 213566,
},
[398782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Farscale Hunter",
["npcID"] = 200484,
},
[376257] = {
["encounterName"] = "Broodkeeper Diurna",
["source"] = "Tarasek Earthreaver",
["npcID"] = 191225,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2614,
},
[361923] = {
["encounterName"] = "Lords of Dread",
["source"] = "Inchoate Shadow",
["encounterID"] = 2543,
["event"] = "SPELL_CAST_START",
["npcID"] = 183138,
},
[129916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Siftworm",
["npcID"] = 65711,
},
[430013] = {
["source"] = "Unruly Stormrook",
["event"] = "SPELL_CAST_START",
["npcID"] = 207186,
},
[392640] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 197698,
},
[440207] = {
["source"] = "Voidstone Monstrosity",
["event"] = "SPELL_CAST_START",
["npcID"] = 207207,
},
[273871] = {
["source"] = "Ankylodon Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 123093,
},
[265772] = {
["source"] = "Atal'zul Chosen",
["event"] = "SPELL_CAST_START",
["npcID"] = 132967,
},
[151286] = {
["encounterName"] = "Warlord Ramtusk",
["source"] = "Aggem Thorncurse",
["encounterID"] = 1659,
["event"] = "SPELL_CAST_START",
["npcID"] = 75149,
},
[144119] = {
["encounterName"] = "Paragons of the Klaxxi",
["source"] = "Amber",
["encounterID"] = 1593,
["event"] = "SPELL_CAST_START",
["npcID"] = 71407,
},
[124297] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ferdinand",
["npcID"] = 51078,
},
[431549] = {
["source"] = "Nerubian Venomspitter",
["event"] = "SPELL_CAST_START",
["npcID"] = 219661,
},
[417215] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Horde Reaver",
["npcID"] = 207585,
},
[164597] = {
["source"] = "Bloodmaul Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 75198,
},
[396738] = {
["source"] = "The Blue Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195976,
},
[454675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Angry Rocks",
["npcID"] = 220543,
},
[360577] = {
["isChanneled"] = true,
["source"] = "Vespoid Worker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 183283,
},
[450697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cinderbee Worker",
["npcID"] = 215023,
},
[396739] = {
["source"] = "The Red Gulper",
["event"] = "SPELL_CAST_START",
["npcID"] = 195974,
},
[406978] = {
["source"] = "Contamination Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 202319,
},
[446430] = {
["source"] = "Disturbed Kelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 215702,
},
[427456] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["npcID"] = 40765,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1044,
},
[336066] = {
["source"] = "Blind Souldrinker",
["event"] = "SPELL_CAST_START",
["npcID"] = 182686,
},
[456125] = {
["event"] = "SPELL_CAST_START",
["source"] = "Agitated Scorpid",
["npcID"] = 215830,
},
[456702] = {
["source"] = "Rampaging Blight",
["event"] = "SPELL_CAST_START",
["npcID"] = 220273,
},
[288210] = {
["source"] = "Arena Challenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 163032,
},
[413123] = {
["source"] = "Forgemaster Kraglin",
["event"] = "SPELL_CAST_START",
["npcID"] = 201625,
},
[109952] = {
["source"] = "Time-Twisted Geist",
["event"] = "SPELL_CAST_START",
["npcID"] = 54511,
},
[458675] = {
["source"] = "Awakened Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 225898,
},
[288211] = {
["encounterName"] = "Lady Jaina Proudmoore",
["source"] = "Lady Jaina Proudmoore",
["encounterID"] = 2281,
["event"] = "SPELL_CAST_START",
["npcID"] = 146409,
},
[396742] = {
["source"] = "Slobberclaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 195972,
},
[70074] = {
["source"] = "Crown Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 114275,
},
[34762] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[427459] = {
["encounterName"] = "Ancient Protectors",
["source"] = "Earthshaper Telu",
["npcID"] = 83893,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1757,
},
[421316] = {
["encounterName"] = "Larodar, Keeper of the Flame",
["source"] = "Larodar, Keeper of the Flame",
["encounterID"] = 2731,
["event"] = "SPELL_CAST_START",
["npcID"] = 208445,
},
[382576] = {
["isChanneled"] = true,
["source"] = "Earthen Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 184131,
},
[286389] = {
["source"] = "Rastari Royal Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 148665,
},
[402887] = {
["source"] = "Gholna",
["event"] = "SPELL_CAST_START",
["npcID"] = 199853,
},
[331316] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dokigg the Brutalizer",
["npcID"] = 167538,
},
[382410] = {
["source"] = "Trickclaw Mystic",
["event"] = "SPELL_CAST_START",
["npcID"] = 185528,
},
[306828] = {
["encounterName"] = "Thrall the Corrupted",
["source"] = "Thrall",
["encounterID"] = 2332,
["event"] = "SPELL_CAST_START",
["npcID"] = 152089,
},
[402888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bonesifter Marwak",
["npcID"] = 200681,
},
[84868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ferocious Grizzled Bear",
["npcID"] = 1778,
},
[377017] = {
["encounterName"] = "Warlord Sargha",
["source"] = "Warlord Sargha",
["encounterID"] = 2611,
["event"] = "SPELL_CAST_START",
["npcID"] = 189901,
},
[34759] = {
["encounterName"] = "High Botanist Freywinn",
["source"] = "High Botanist Freywinn",
["encounterID"] = 1926,
["event"] = "SPELL_CAST_START",
["npcID"] = 17975,
},
[452035] = {
["source"] = "Cyclonecrier Alpha",
["event"] = "SPELL_CAST_START",
["npcID"] = 222959,
},
[214771] = {
["encounterName"] = "Inquisitor Tormentorum",
["source"] = "Faceless Voidcaster",
["npcID"] = 99651,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1850,
},
[444609] = {
["encounterName"] = "Prioress Murrpray",
["source"] = "Prioress Murrpray",
["npcID"] = 207940,
["event"] = "SPELL_CAST_START",
["encounterID"] = 2848,
},
[30180] = {
["event"] = "SPELL_CAST_START",
["source"] = "Homunculus",
["npcID"] = 16539,
},
[333861] = {
["event"] = "SPELL_CAST_START",
["source"] = "Harugia the Bloodthirsty",
["npcID"] = 167536,
},
[333845] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rek the Hardened",
["npcID"] = 167534,
},
[331288] = {
["event"] = "SPELL_CAST_START",
["source"] = "Heavin the Breaker",
["npcID"] = 167532,
},
[341771] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bone Magus",
["npcID"] = 170882,
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2024-09-08 10:18:34 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-08 09:39:02 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-08 05:39:54 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-07 20:37:51 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-07 20:57:06 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-06 18:25:45 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-05 21:20:10 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-05 20:30:22 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-04 23:25:34 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-04 22:54:13 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-04 22:44:05 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpaladin",
"2024-09-04 13:31:33 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 13:19:44 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 12:35:56 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 11:25:10 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 09:13:29 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 09:11:28 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 07:48:13 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
"2024-09-04 07:44:35 | INIT | Plater-v587-Retail | Framework v565 | 11.0.2 | enUS | Qpfromage",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
